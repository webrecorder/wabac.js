{"version":3,"file":"response.js","sourceRoot":"","sources":["../src/response.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseAsyncIterReader, AsyncIterReader } from \"warcio\";\nimport {\n  isNullBodyStatus,\n  decodeLatin1,\n  encodeLatin1,\n  MAX_STREAM_CHUNK_SIZE,\n  tsToDate,\n  getStatusText,\n  INITIAL_STREAM_CHUNK_SIZE,\n} from \"./utils\";\nimport { Buffer } from \"buffer\";\nimport { type ExtraOpts } from \"./types\";\n\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\n\ntype ArchiveResponseOpts = {\n  payload: BaseAsyncIterReader | Uint8Array | null;\n  status: number;\n  statusText?: string;\n  headers: Headers;\n  url: string;\n  date: Date;\n  extraOpts?: ExtraOpts | null;\n  noRW?: boolean;\n  isLive?: boolean;\n  updateTS?: string | null;\n};\n\n// ===========================================================================\nclass ArchiveResponse {\n  static fromResponse({\n    url,\n    response,\n    date,\n    noRW,\n    isLive,\n    archivePrefix,\n  }: {\n    url: string;\n    response: Response;\n    date: Date;\n    noRW?: boolean;\n    isLive?: boolean;\n    archivePrefix?: string;\n  }) {\n    const payload = response.body\n      ? new AsyncIterReader(response.body.getReader(), null, false)\n      : null;\n    const status = Number(\n      response.headers.get(\"x-redirect-status\") || response.status,\n    );\n    const statusText =\n      response.headers.get(\"x-redirect-statusText\") || response.statusText;\n\n    const headers = new Headers(response.headers);\n\n    let origLoc = headers.get(\"x-orig-location\");\n    if (origLoc) {\n      if (origLoc.startsWith(self.location.origin)) {\n        origLoc = origLoc.slice(self.location.origin.length);\n      }\n      if (archivePrefix && origLoc.startsWith(archivePrefix)) {\n        const inx = origLoc.indexOf(\"/http\");\n        if (inx > 0) {\n          origLoc = origLoc.slice(inx + 1);\n        }\n      }\n      headers.set(\"location\", origLoc);\n      headers.delete(\"x-orig-location\");\n      headers.delete(\"x-redirect-status\");\n      headers.delete(\"x-redirect-statusText\");\n    }\n\n    let updateTS: string | null = null;\n\n    const origTs = headers.get(\"x-orig-ts\");\n    if (origTs) {\n      date = tsToDate(origTs);\n      headers.delete(\"x-orig-ts\");\n\n      // force TS update downstream\n      if (origTs && origLoc) {\n        updateTS = origTs;\n      }\n    }\n    const mementoDt = headers.get(\"memento-datetime\");\n    if (mementoDt) {\n      date = new Date(mementoDt);\n    }\n\n    const cookie = headers.get(\"x-proxy-set-cookie\");\n    if (cookie) {\n      const cookies: string[] = [];\n      cookie.split(\",\").forEach((c) => {\n        // @ts-expect-error [TODO] - TS2532 - Object is possibly 'undefined'.\n        const cval = c.split(\";\", 1)[0].trim();\n        if (cval.indexOf(\"=\") > 0) {\n          cookies.push(cval);\n        }\n      });\n      headers.delete(\"x-proxy-set-cookie\");\n\n      if (cookies.length) {\n        headers.set(\"x-wabac-preset-cookie\", cookies.join(\";\"));\n        //console.log(\"cookies\", cookies.join(\";\"));\n      }\n    }\n\n    return new ArchiveResponse({\n      payload,\n      status,\n      statusText,\n      headers,\n      url,\n      date,\n      noRW,\n      isLive,\n      updateTS,\n    });\n  }\n\n  reader: BaseAsyncIterReader | null;\n  buffer: Uint8Array | null;\n\n  status: number;\n  statusText: string;\n  url: string;\n  date: Date;\n  extraOpts: ExtraOpts | null;\n  headers: Headers;\n  noRW: boolean;\n  isLive: boolean;\n  updateTS: string | null;\n\n  clonedResponse: Response | null = null;\n\n  constructor({\n    payload,\n    status,\n    statusText,\n    headers,\n    url,\n    date,\n    extraOpts = null,\n    noRW = false,\n    isLive = false,\n    updateTS = null,\n  }: ArchiveResponseOpts) {\n    this.reader = null;\n    this.buffer = null;\n\n    if (payload && payload instanceof BaseAsyncIterReader) {\n      this.reader = payload;\n    } else {\n      this.buffer = payload;\n    }\n\n    this.status = status;\n    this.statusText = statusText || getStatusText(status);\n    this.headers = headers;\n    this.url = url;\n    this.date = date;\n    this.extraOpts = extraOpts;\n    this.noRW = noRW;\n    this.isLive = isLive;\n    this.updateTS = updateTS;\n  }\n\n  async getText(isUTF8 = false): Promise<{ bomFound: boolean; text: string }> {\n    const buff = await this.getBuffer();\n    if (typeof buff === \"string\") {\n      return { bomFound: false, text: buff };\n    }\n    if (!buff) {\n      return { bomFound: false, text: \"\" };\n    }\n\n    // Check for BOMs -- since we're removing BOM, set 'bomFound'\n    // to re-encode as UTF-8 without BOM\n    // UTF-8\n    if (buff[0] === 0xef && buff[1] === 0xbb && buff[2] === 0xbf) {\n      return { bomFound: true, text: decoder.decode(buff.slice(3)) };\n      // UTF-16BE -- convert to buffer, swap, and decode LE\n    } else if (buff[0] === 0xfe && buff[1] === 0xff) {\n      return {\n        bomFound: true,\n        text: Buffer.from(buff.slice(2)).swap16().toString(\"utf16le\"),\n      };\n      // UTF-16LE -- convert to buffer, decode LE\n    } else if (buff[0] === 0xff && buff[1] === 0xfe) {\n      return {\n        bomFound: true,\n        text: Buffer.from(buff.slice(2)).toString(\"utf16le\"),\n      };\n    }\n\n    // if no BOM, go by 'isUTF8' param\n    return {\n      bomFound: false,\n      text: isUTF8 ? decoder.decode(buff) : decodeLatin1(buff),\n    };\n  }\n\n  setText(text: string, encodeUTF8 = false) {\n    this.setBuffer(encodeUTF8 ? encoder.encode(text) : encodeLatin1(text));\n  }\n\n  async getBuffer() {\n    if (this.buffer || !this.reader) {\n      return this.buffer;\n    }\n\n    this.buffer = await this.reader.readFully();\n    return this.buffer;\n  }\n\n  setBuffer(buffer: Uint8Array) {\n    this.buffer = buffer;\n    this.reader = null;\n  }\n\n  setReader(reader: BaseAsyncIterReader | ReadableStream) {\n    if (reader instanceof BaseAsyncIterReader) {\n      this.reader = reader;\n      this.buffer = null;\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    } else if (reader.getReader) {\n      this.reader = new AsyncIterReader(reader.getReader());\n      this.buffer = null;\n    }\n  }\n\n  expectedLength() {\n    if (this.buffer) {\n      return this.buffer.length;\n    }\n    //TODO\n    //  else if (this.reader && this.reader.reader) {\n    //   return this.reader.reader.length;\n    // }\n    return 0;\n  }\n\n  createIter() {\n    const buffer = this.buffer;\n    const reader = this.reader;\n\n    async function* iter() {\n      if (buffer) {\n        let i = 0;\n\n        yield buffer.slice(0, i + INITIAL_STREAM_CHUNK_SIZE);\n        i += INITIAL_STREAM_CHUNK_SIZE;\n\n        for (i; i < buffer.length; i += MAX_STREAM_CHUNK_SIZE) {\n          yield buffer.slice(i, i + MAX_STREAM_CHUNK_SIZE);\n        }\n      } else if (reader) {\n        yield* reader;\n      }\n    }\n\n    return iter();\n  }\n\n  async *[Symbol.asyncIterator]() {\n    yield* this.createIter();\n  }\n\n  setRange(range: string) {\n    if (this.status === 206) {\n      const currRange = this.headers.get(\"Content-Range\");\n      if (currRange && !currRange.startsWith(\"bytes 0-\")) {\n        return false;\n      }\n    }\n\n    const bytes = range.match(/^bytes=(\\d+)-(\\d+)?$/);\n\n    let length = 0;\n\n    if (this.buffer) {\n      length = this.buffer.length;\n    } else if (this.reader) {\n      //length = this.reader.length;\n      length = Number(this.headers.get(\"content-length\"));\n\n      // if length is not known, keep as 200\n      if (!length) {\n        return false;\n      }\n    }\n\n    if (!bytes) {\n      this.status = 416;\n      this.statusText = \"Range Not Satisfiable\";\n      this.headers.set(\"Content-Range\", `*/${length}`);\n      return false;\n    }\n\n    const start = Number(bytes[1]);\n    const end = Number(bytes[2]) || length - 1;\n\n    if (!this.setRawRange(start, end)) {\n      return false;\n    }\n\n    this.headers.set(\"Content-Range\", `bytes ${start}-${end}/${length}`);\n    this.headers.set(\"Content-Length\", String(end - start + 1));\n\n    this.status = 206;\n    this.statusText = \"Partial Content\";\n\n    return true;\n  }\n\n  setRawRange(start: number, end: number) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const reader = this.reader as any;\n    if (this.buffer) {\n      this.buffer = this.buffer.slice(start, end + 1);\n      return true;\n    } else if (reader?.setLimitSkip) {\n      reader.setLimitSkip(end - start + 1, start);\n      return true;\n    }\n\n    return false;\n  }\n\n  makeResponse(coHeaders = false, overwriteDisposition = false) {\n    let body: Uint8Array | ReadableStream | null = null;\n    if (!isNullBodyStatus(this.status)) {\n      body =\n        this.buffer || !this.reader\n          ? this.buffer\n          : this.reader.getReadableStream();\n    }\n\n    const response = new Response(body, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: this.headers,\n    });\n    // slightly hacky\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (response as any).date = this.date;\n    if (coHeaders) {\n      response.headers.set(\"Cross-Origin-Opener-Policy\", \"same-origin\");\n      response.headers.set(\"Cross-Origin-Embedder-Policy\", \"require-corp\");\n    }\n    if (overwriteDisposition) {\n      response.headers.set(\"content-disposition\", \"inline\");\n    }\n    return response;\n  }\n}\n\nexport { ArchiveResponse };\n"]}