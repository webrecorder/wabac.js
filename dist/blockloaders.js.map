{"version":3,"file":"blockloaders.js","sourceRoot":"","sources":["../src/blockloaders.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,eAAe,EACf,iBAAiB,EACjB,UAAU,EACV,KAAK,EACL,sBAAsB,GACvB,MAAM,SAAS,CAAC;AAEjB,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AAEtC,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AAEtC,0BAA0B;AAC1B,MAAM,YAAY,GAAG,8CAA8C,CAAC;AAqBpE,8EAA8E;AAC9E,MAAM,CAAC,KAAK,UAAU,YAAY,CAAC,IAAqB;IACtD,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAErB,IAAI,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,CAAC;QAC5B,OAAO,IAAI,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IACvD,CAAC;IAED,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAEpC,mBAAmB;IACnB,QAAQ,MAAM,EAAE,CAAC;QACf,KAAK,MAAM;YACT,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAEnC,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO;YACV,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAEpC,KAAK,MAAM;YACT,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAEpC,KAAK,aAAa;YAChB,OAAO,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAErC,KAAK,MAAM;YACT,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,mEAAmE;IACnE,IAAI,CAAC;QACH,SAAS;QACT,uEAAuE;QACvE,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACrE,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC;IACH,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACX,8CAA8C;IAChD,CAAC;IAED,qDAAqD;IACrD,IAAI,CAAC;QACH,MAAM,KAAK,CAAC,GAAG,MAAM,cAAc,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;QACzD,4DAA4D;QAE5D,mFAAmF;QACnF,IAAI,CAAC;YACH,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;QACf,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,kEAAkE;YAClE,IAAI,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YACtC,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YACtC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC;QACpB,CAAC;QAED,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACX,oEAAoE;IACtE,CAAC;IAED,0BAA0B;IAC1B,MAAM,IAAI,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC;AACzC,CAAC;AAED,8EAA8E;AAC9E,MAAM,OAAgB,UAAU;IAC9B,eAAe,GAAG,IAAI,CAAC;IACvB,OAAO,GAAqC,EAAE,CAAC;IAC/C,MAAM,GAAkB,IAAI,CAAC;IAC7B,kBAAkB,GAAG,KAAK,CAAC;IAE3B,YAAY,eAAwB;QAClC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IACzC,CAAC;IAkBD,KAAK,CAAC,eAAe,CACnB,MAAc,EACd,SAAkB,EAClB,MAA2B;QAE3B,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC7B,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;YAC3C,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YACvC,OAAO,MAAM,IAAI,CAAC,QAAQ,CACxB,WAAW,GAAG,MAAM,EACpB,MAAM,EACN,SAAS,EACT,MAAM,CACP,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;QAC5D,CAAC;IACH,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAED,8EAA8E;AAC9E,MAAM,gBAAiB,SAAQ,UAAU;IACvC,GAAG,CAAS;IACH,MAAM,CAAgB;IAC/B,OAAO,GAAG,KAAK,CAAC;IAChB,OAAO,GAAG,IAAI,CAAC;IACf,WAAW,GAAG,IAAI,CAAC;IACnB,WAAW,GAA6B,IAAI,CAAC;IAE7C,YAAY,EACV,GAAG,EACH,OAAO,EACP,MAAM,GAAG,IAAI,EACb,eAAe,GAAG,KAAK,GAMxB;QACC,KAAK,CAAC,eAAe,CAAC,CAAC;QAEvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;IAEQ,KAAK,CAAC,cAAc,CAC3B,OAAgB,EAChB,SAAS,GAAG,KAAK;QAEjB,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QACnC,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,KAAK,GAA2B,IAAI,CAAC;QACzC,IAAI,QAAQ,GAAoB,IAAI,CAAC;QAErC,IAAI,OAAO,EAAE,CAAC;YACZ,IAAI,CAAC;gBACH,QAAQ,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE;oBACzC,OAAO;oBACP,MAAM,EAAE,MAAM;oBACd,KAAK,EAAE,UAAU;iBAClB,CAAC,CAAC;gBACH,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,MAAM,IAAI,GAAG,EAAE,CAAC;oBACtD,IAAI,CAAC,eAAe;wBAClB,QAAQ,CAAC,MAAM,KAAK,GAAG;4BACvB,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,KAAK,OAAO,CAAC;oBACpD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACtB,CAAC;YACH,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACX,2CAA2C;YAC7C,CAAC;QACH,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;YAC3C,KAAK,GAAG,IAAI,eAAe,EAAE,CAAC;YAC9B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAC5B,QAAQ,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE;gBACzC,OAAO;gBACP,MAAM;gBACN,KAAK,EAAE,UAAU;aAClB,CAAC,CAAC;YACH,IAAI,CAAC,eAAe;gBAClB,QAAQ,CAAC,MAAM,KAAK,GAAG;oBACvB,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,KAAK,OAAO,CAAC;YACpD,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,CAAC;YAElE,gCAAgC;YAChC,IAAI,OAAO,EAAE,CAAC;gBACZ,KAAK,CAAC,KAAK,EAAE,CAAC;gBACd,KAAK,GAAG,IAAI,CAAC;YACf,CAAC;QACH,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,QAAQ,EAAE,CAAC;YACrC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE,CAAC;gBAC5C,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACrD,CAAC;QACH,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE,CAAC;YACzB,kCAAkC;YAClC,IAAI,CAAC;gBACH,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,GAAG,YAAY,MAAM,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;gBAC1D,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;gBAC/B,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;oBACd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC1B,CAAC;YACH,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACX,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,CAAC,CAAC,CAAC;YAClD,CAAC;QACH,CAAC;QAED,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;QAEvC,kEAAkE;QAClE,IACE,CAAC,IAAI,CAAC,eAAe;YACrB,IAAI,CAAC,OAAO;YACZ,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,MAAM,IAAI,sBAAsB,EACrC,CAAC;YACD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC3C,OAAO;gBACP,KAAK,EAAE,UAAU;aAClB,CAAC,CAAC;YACH,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC;gBACZ,IAAI,CAAC,WAAW,GAAG,IAAI,iBAAiB,CACtC,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC,CACzC,CAAC;gBACF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAC5B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAClC,CAAC;QACH,CAAC;QAED,OAAO,EAAE,QAAQ,EAAE,QAAS,EAAE,KAAK,EAAE,CAAC;IACxC,CAAC;IAED,KAAK,CAAC,SAAS;QACb,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE,CAAC;YACzB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAClD,IAAI,KAAK,EAAE,CAAC;gBACV,KAAK,CAAC,KAAK,EAAE,CAAC;YAChB,CAAC;QACH,CAAC;QACD,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,QAAQ,CACZ,MAAc,EACd,MAAc,EACd,SAAS,GAAG,KAAK,EACjB,SAA6B,IAAI;QAEjC,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YACrB,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;QACpE,CAAC;QACD,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,MAAM,GAAG,CAAC,EAAE,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,MAAM,EAAE,CAAC,CAAC;QAC1C,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;QACjE,CAAC;QAED,MAAM,KAAK,GAAiB,UAAU,CAAC;QAEvC,MAAM,OAAO,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;QAE3C,IAAI,IAAc,CAAC;QAEnB,IAAI,CAAC;YACH,IAAI,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAClD,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,MAAM,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,EAAE,CAAC;YACvB,IAAI,MAAM,GAAG,CAAC,EAAE,CAAC;gBACf,wDAAwD;gBACxD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC3C,IAAI,CAAC,MAAM,GAAG,WAAW,EAAE,CAAC;oBAC1B,MAAM,GAAG,CAAC,WAAW,CAAC;gBACxB,CAAC;gBACD,OAAO,MAAM,IAAI,CAAC,QAAQ,CACxB,WAAW,GAAG,MAAM,EACpB,CAAC,MAAM,EACP,SAAS,EACT,MAAM,CACP,CAAC;YACJ,CAAC;YACD,MAAM,IAAI,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC;YAE1D,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE,CAAC;gBACxB,MAAM,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;YAClC,CAAC;iBAAM,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,EAAE,CAAC;gBAC9B,MAAM,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;YACpC,CAAC;iBAAM,CAAC;gBACN,MAAM,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE,CAAC;YACzB,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjD,CAAC;QAED,IAAI,SAAS,EAAE,CAAC;YACd,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,UAAU,EAAE,CAAC;QACvC,CAAC;aAAM,CAAC;YACN,OAAO,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QAClD,CAAC;IACH,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,GAAW,EAAE,OAAoB;QAChD,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC;YACxC,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YACvC,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE,CAAC;gBAC/C,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,KAAK,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO,IAAI,IAAI,CAAC;QAClB,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;IACvC,CAAC;IAED,2BAA2B,CAAC,OAAgB;QAC1C,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC3C,IAAI,KAAK,EAAE,CAAC;YACV,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACpC,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC5B,4HAA4H;gBAC5H,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,CAAC;QACH,CAAC;IACH,CAAC;IAEQ,aAAa;QACpB,OAAO,IAAI,CAAC,WAAW,EAAE,aAAa,EAAE,IAAI,IAAI,CAAC;IACnD,CAAC;CACF;AAED,8EAA8E;AAC9E,MAAM,iBAAkB,SAAQ,UAAU;IACxC,MAAM,CAAS;IACf,MAAM,CAAS;IACf,gJAAgJ;IAChJ,MAAM,CAAS;IAEf,SAAS,GAAkB,IAAI,CAAC;IAChC,OAAO,GAAG,KAAK,CAAC;IAEhB,YAAY,EACV,GAAG,EACH,OAAO,EACP,IAAI,EACJ,KAAK,GAMN;QACC,KAAK,CAAC,IAAI,CAAC,CAAC;QAEZ,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,GAAG,6CAA6C,IAAI,CAAC,MAAM,YAAY,CAAC;QAEnF,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;QAC7B,IAAI,KAAK,EAAE,SAAS,EAAE,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACnC,CAAC;QACD,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,CAAC;IAC1B,CAAC;IAEQ,KAAK,CAAC,SAAS;QACtB,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAEQ,KAAK,CAAC,cAAc,CAAC,OAAgB;QAC5C,IAAI,MAAM,GAA4B,IAAI,CAAC;QAC3C,IAAI,MAAM,GAAyB,IAAI,CAAC;QAExC,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,MAAM,GAAG,IAAI,gBAAgB,CAAC;gBAC5B,GAAG,EAAE,IAAI,CAAC,SAAS;gBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;aACpB,CAAC,CAAC;YACH,IAAI,CAAC;gBACH,MAAM,GAAG,MAAM,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YAChD,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACX,uCAAuC;YACzC,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;gBACpB,IAAI,MAAM,EAAE,KAAK,EAAE,CAAC;oBAClB,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;gBACvB,CAAC;gBAED,IAAI,MAAM,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC;oBAClC,MAAM,GAAG,IAAI,gBAAgB,CAAC;wBAC5B,GAAG,EAAE,IAAI,CAAC,SAAS;wBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;qBACpB,CAAC,CAAC;oBACH,IAAI,CAAC;wBACH,MAAM,GAAG,MAAM,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;oBAChD,CAAC;oBAAC,OAAO,CAAC,EAAE,CAAC;wBACX,uCAAuC;oBACzC,CAAC;oBACD,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,EAAE,KAAK,EAAE,CAAC;wBACrC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;oBACvB,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;QAED,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,MAAM,GAAG,IAAI,gBAAgB,CAAC;gBAC5B,GAAG,EAAE,IAAI,CAAC,MAAM;gBAChB,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,MAAM,EAAE,IAAI,CAAC,MAAM;aACpB,CAAC,CAAC;YACH,MAAM,GAAG,MAAM,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAChD,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;YAClC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC9B,CAAC;QACD,OAAO,MAAO,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,QAAQ,CACZ,MAAc,EACd,MAAc,EACd,SAAS,GAAG,KAAK,EACjB,MAAmB;QAEnB,IAAI,MAAM,GAA4B,IAAI,CAAC;QAE3C,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,MAAM,GAAG,IAAI,gBAAgB,CAAC;gBAC5B,GAAG,EAAE,IAAI,CAAC,SAAS;gBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;aACpB,CAAC,CAAC;YAEH,IAAI,CAAC;gBACH,OAAO,MAAM,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAClE,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACX,IAAI,MAAM,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC;oBAClC,MAAM,GAAG,IAAI,gBAAgB,CAAC;wBAC5B,GAAG,EAAE,IAAI,CAAC,SAAS;wBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;qBACpB,CAAC,CAAC;oBACH,IAAI,CAAC;wBACH,OAAO,MAAM,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;oBAClE,CAAC;oBAAC,OAAO,CAAC,EAAE,CAAC;wBACX,2CAA2C;oBAC7C,CAAC;gBACH,CAAC;YACH,CAAC;YAED,sBAAsB;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC;QAED,MAAM,GAAG,IAAI,gBAAgB,CAAC;YAC5B,GAAG,EAAE,IAAI,CAAC,MAAM;YAChB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;QAEH,IAAI,OAAO,GAAG,EAAE,CAAC;QAEjB,OAAO,OAAO,GAAG,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC;gBACH,OAAO,MAAM,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAClE,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACX,IACE,CAAC,YAAY,iBAAiB;oBAC9B,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,OAAO;yBACpB,GAAG,CAAC,cAAc,CAAC;yBACnB,UAAU,CAAC,kBAAkB,CAAC,EACjC,CAAC;oBACD,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;oBACxC,IACE,GAAG,CAAC,KAAK,EAAE,MAAM;wBACjB,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,uBAAuB,EACtD,CAAC;wBACD,OAAO,CAAC,GAAG,CAAC,qCAAqC,OAAO,EAAE,CAAC,CAAC;wBAC5D,MAAM,KAAK,CAAC,OAAO,CAAC,CAAC;wBACrB,OAAO,IAAI,CAAC,CAAC;wBACb,SAAS;oBACX,CAAC;gBACH,CAAC;gBACD,MAAM,CAAC,CAAC;YACV,CAAC;QACH,CAAC;QAED,MAAM,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;IACpC,CAAC;IAED,KAAK,CAAC,gBAAgB;QACpB,IAAI,CAAC;YACH,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,GAAG,YAAY,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC7D,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;YAC/B,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;gBAC1B,OAAO,IAAI,CAAC;YACd,CAAC;QACH,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,uBAAuB;QACzB,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAED,8EAA8E;AAC9E,MAAM,iBAAkB,SAAQ,UAAU;IACxC,WAAW,CAAa;IACxB,IAAI,CAAS;IAEb,YAAY,WAAuB;QACjC,KAAK,CAAC,IAAI,CAAC,CAAC;QAEZ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;IAC1B,CAAC;IAED,IAAI,OAAO;QACT,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAEQ,KAAK,CAAC,SAAS;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEQ,KAAK,CAAC,cAAc,CAAC,OAAO,GAAG,KAAK;QAC3C,MAAM,MAAM,GAAG,OAAO;YACpB,CAAC,CAAC,IAAI;YACN,CAAC,CAAC,0BAA0B,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEjD,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEtC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;IACnC,CAAC;IAED,KAAK,CAAC,QAAQ,CACZ,MAAc,EACd,MAAc,EACd,SAAS,GAAG,KAAK,CAAC,YAAY;QAE9B,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;QAE9D,OAAO,SAAS,CAAC,CAAC,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAC/D,CAAC;IAEQ,aAAa;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;CACF;AAED,8EAA8E;AAC9E,MAAM,eAAgB,SAAQ,UAAU;IACtC,GAAG,CAAS;IACZ,IAAI,CAAc;IAClB,IAAI,CAAS;IACb,WAAW,GAAsB,IAAI,CAAC;IAEtC,YAAY,EACV,GAAG,EACH,IAAI,GAAG,IAAI,EACX,IAAI,GAAG,IAAI,GAKZ;QACC,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;IAC1B,CAAC;IAED,IAAI,OAAO;QACT,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAEQ,KAAK,CAAC,SAAS;QACtB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;YACrB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACvC,IAAI,CAAC,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YAClC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,CAAC;QACD,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEQ,KAAK,CAAC,cAAc,CAAC,OAAO,GAAG,KAAK;QAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACf,IAAI,CAAC;gBACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACvC,IAAI,CAAC,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAClC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;YAC1B,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACX,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC,CAAC;YACV,CAAC;QACH,CAAC;QAED,SAAS;QACT,uEAAuE;QACvE,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW;YACvC,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAC/B,CAAC,CAAC,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;QAE/C,MAAM,MAAM,GAAG,OAAO;YACpB,CAAC,CAAC,IAAI;YACN,CAAC,CAAC,0BAA0B,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEjD,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEtC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;IACnC,CAAC;IAED,KAAK,CAAC,QAAQ,CACZ,MAAc,EACd,MAAc,EACd,SAAS,GAAG,KAAK,CAAC,YAAY;QAE9B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YACtB,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,WAAY,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;QAE/D,OAAO,SAAS,CAAC,CAAC,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAC/D,CAAC;IAED,KAAK,CAAC,eAAe;QACnB,OAAO,IAAI,OAAO,CAAc,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAClD,MAAM,EAAE,GAAG,IAAI,UAAU,EAAE,CAAC;YAC5B,EAAE,CAAC,SAAS,GAAG,GAAG,EAAE;gBAClB,IAAI,EAAE,CAAC,MAAM,YAAY,WAAW,EAAE,CAAC;oBACrC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACrB,CAAC;qBAAM,CAAC;oBACN,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACpB,CAAC;YACH,CAAC,CAAC;YACF,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;gBACd,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAED,8EAA8E;AAC9E,MAAM,gBAAiB,SAAQ,UAAU;IACvC,GAAG,CAAS;IACZ,IAAI,CAAc;IAClB,IAAI,CAAU;IACd,UAAU,CAAuB;IAEjC,YAAY,EACV,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,GAAG,GAMJ;QACC,KAAK,CAAC,IAAI,CAAC,CAAC;QAEZ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG,KAAM,CAAC,UAAW,CAAC;IACvC,CAAC;IAED,IAAI,OAAO;QACT,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAEQ,KAAK,CAAC,SAAS;QACtB,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;YAC5B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC9B,CAAC;QACD,OAAO,IAAI,CAAC,IAAK,CAAC;IACpB,CAAC;IAED,KAAK,CAAC,cAAc;QAClB,MAAM,OAAO,GAAyC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;QAEvE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAE5D,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;YACvB,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAEnE,IAAI,SAAS,KAAK,SAAS,EAAE,CAAC;gBAC5B,MAAM,IAAI,eAAe,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC;QAED,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;IAC1B,CAAC;IAEQ,KAAK,CAAC,cAAc,CAAC,OAAO,GAAG,KAAK;QAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACf,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC9B,CAAC;QAED,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAK,CAAC,MAAM,EAAE,CAAC;QAEpD,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEtC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;IACnC,CAAC;IAED,KAAK,CAAC,QAAQ,CACZ,MAAc,EACd,MAAc,EACd,SAAS,GAAG,KAAK,CAAC,YAAY;QAE9B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACf,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC9B,CAAC;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,IAAK,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;QAE5D,OAAO,SAAS;YACd,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE;YACpB,CAAC,CAAC,IAAI,UAAU,CAAC,MAAM,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;IACpD,CAAC;CACF;AAED,8EAA8E;AAC9E,MAAM,eAAgB,SAAQ,UAAU;IACtC,GAAG,CAAS;IACZ,IAAI,CAA+B;IAC1B,MAAM,CAAgB;IAC/B,OAAO,GAAG,KAAK,CAAC;IAEhB,YAAY,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,IAAI,EAAmB;QACpD,KAAK,CAAC,IAAI,CAAC,CAAC;QAEZ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,kCAAkC;QAClC,iBAAiB;QACjB,qBAAqB;QACrB,IAAI;QAEJ,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAEQ,KAAK,CAAC,SAAS;QACtB,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC;QAED,OAAO,IAAI,CAAC,MAAO,CAAC;IACtB,CAAC;IAEQ,KAAK,CAAC,cAAc,CAAC,OAAgB;QAC5C,MAAM,cAAc,GAAG,MAAM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAErD,IAAI,CAAC;YACH,IAAI,CAAC,MAAM,GAAG,MAAM,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC;QACtC,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;QAED,IAAI,MAAM,GAAG,GAAG,CAAC;QAEjB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAClB,MAAM,GAAG,GAAG,CAAC;QACf,CAAC;QAED,MAAM,KAAK,GAAG,IAAI,eAAe,EAAE,CAAC;QACpC,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC5B,IAAI,IAAI,CAAC;QAET,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;QAC5B,CAAC;aAAM,CAAC;YACN,MAAM,IAAI,GAA8B,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE;gBACnE,MAAM;aACP,CAAC,CAAC;YACH,IAAI,GAAG,yBAAyB,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC;QAED,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;QAEhD,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,QAAQ,CACZ,MAAc,EACd,MAAc,EACd,SAAS,GAAG,KAAK,EACjB,SAA6B,IAAI;QAEjC,MAAM,cAAc,GAAG,MAAM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAErD,MAAM,IAAI,GAA8B,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE;YACnE,KAAK,EAAE,MAAM;YACb,GAAG,EAAE,MAAM,GAAG,MAAM,GAAG,CAAC;YACxB,MAAM;SACP,CAAC,CAAC;QAEH,IAAI,SAAS,EAAE,CAAC;YACd,OAAO,yBAAyB,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC;aAAM,CAAC;YACN,MAAM,MAAM,GAAiB,EAAE,CAAC;YAChC,IAAI,IAAI,GAAG,CAAC,CAAC;YAEb,IAAI,KAAK,EAAE,MAAM,KAAK,IAAI,IAAI,EAAE,CAAC;gBAC/B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,IAAI,KAAK,CAAC,UAAU,CAAC;YAC3B,CAAC;YAED,OAAO,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACpC,CAAC;IACH,CAAC;CACF;AAED,MAAM,UAAU,yBAAyB,CAAC,MAAiC;IACzE,OAAO,IAAI,cAAc,CAAC;QACxB,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE;YAC1B,IAAI,CAAC;gBACH,IAAI,KAAK,EAAE,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;oBACjC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAC5B,CAAC;YACH,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACX,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC;YACD,UAAU,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC;KACF,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,0BAA0B,CAAC,KAAiB;IAC1D,OAAO,IAAI,cAAc,CAAC;QACxB,KAAK,CAAC,UAAU;YACd,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC1B,UAAU,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC;KACF,CAAC,CAAC;AACL,CAAC","sourcesContent":["import {\n  AuthNeededError,\n  AccessDeniedError,\n  RangeError,\n  sleep,\n  MAX_FULL_DOWNLOAD_SIZE,\n} from \"./utils\";\n\nimport { initAutoIPFS } from \"./ipfs\";\n\nimport { concatChunks } from \"warcio\";\n\n// todo: make configurable\nconst HELPER_PROXY = \"https://helper-proxy.webrecorder.workers.dev\";\n\nexport type ResponseAbort = {\n  response: Response;\n  abort: AbortController | null;\n};\n\nexport type BlockLoaderExtra = {\n  arrayBuffer?: Uint8Array;\n  publicUrl?: string;\n  fileHandle?: FileSystemFileHandle;\n};\n\nexport type BlockLoaderOpts = {\n  url: string;\n  headers?: Record<string, string> | Headers;\n  extra?: BlockLoaderExtra;\n  size?: number;\n  blob?: Blob;\n};\n\n// ===========================================================================\nexport async function createLoader(opts: BlockLoaderOpts): Promise<BaseLoader> {\n  const { url } = opts;\n\n  if (opts.extra?.arrayBuffer) {\n    return new ArrayBufferLoader(opts.extra.arrayBuffer);\n  }\n\n  const scheme = url.split(\":\", 1)[0];\n\n  // built-in loaders\n  switch (scheme) {\n    case \"blob\":\n      return new BlobCacheLoader(opts);\n\n    case \"http\":\n    case \"https\":\n      return new FetchRangeLoader(opts);\n\n    case \"file\":\n      return new FileHandleLoader(opts);\n\n    case \"googledrive\":\n      return new GoogleDriveLoader(opts);\n\n    case \"ipfs\":\n      return new IPFSRangeLoader(opts);\n  }\n\n  // if URL has same scheme as current origin, use regular http fetch\n  try {\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (self.location && scheme === self.location.protocol.split(\":\")[0]) {\n      return new FetchRangeLoader(opts);\n    }\n  } catch (_) {\n    // likely no self and self.location, so ignore\n  }\n\n  // see if the specified scheme is generally fetchable\n  try {\n    await fetch(`${scheme}://localhost`, { method: \"HEAD\" });\n    // if reached here, scheme is supported, so use fetch loader\n\n    // first, check if URL is valid, if not, check if Windows path-related, and convert\n    try {\n      new URL(url);\n    } catch (_) {\n      // will convert C:\\path\\to\\file -> C//path/to/file to be valid URL\n      let newUrl = url.replace(\":\\\\\", \"//\");\n      newUrl = newUrl.replaceAll(\"\\\\\", \"/\");\n      opts.url = newUrl;\n    }\n\n    return new FetchRangeLoader(opts);\n  } catch (_) {\n    // if raised exception, scheme not supported, don't use fetch loader\n  }\n\n  // custom provided loaders\n  throw new Error(\"Invalid URL: \" + url);\n}\n\n// ===========================================================================\nexport abstract class BaseLoader {\n  canLoadOnDemand = true;\n  headers: Record<string, string> | Headers = {};\n  length: number | null = null;\n  canDoNegativeRange = false;\n\n  constructor(canLoadOnDemand: boolean) {\n    this.canLoadOnDemand = canLoadOnDemand;\n  }\n\n  abstract doInitialFetch(\n    tryHead: boolean,\n    skipRange: boolean,\n  ): Promise<ResponseAbort>;\n\n  abstract getLength(): Promise<number>;\n\n  abstract getRange(\n    offset: number,\n    length: number,\n    streaming: boolean,\n    signal?: AbortSignal | null,\n  ): Promise<Uint8Array | ReadableStream<Uint8Array>>;\n\n  abstract get isValid(): boolean;\n\n  async getRangeFromEnd(\n    length: number,\n    streaming: boolean,\n    signal?: AbortSignal | null,\n  ): Promise<Uint8Array | ReadableStream<Uint8Array>> {\n    if (!this.canDoNegativeRange) {\n      const totalLength = await this.getLength();\n      length = Math.min(length, totalLength);\n      return await this.getRange(\n        totalLength - length,\n        length,\n        streaming,\n        signal,\n      );\n    } else {\n      return await this.getRange(0, -length, streaming, signal);\n    }\n  }\n\n  getFullBuffer(): Uint8Array | null {\n    return null;\n  }\n}\n\n// ===========================================================================\nclass FetchRangeLoader extends BaseLoader {\n  url: string;\n  override length: number | null;\n  isValid = false;\n  ipfsAPI = null;\n  loadingIPFS = null;\n  arrayBuffer: ArrayBufferLoader | null = null;\n\n  constructor({\n    url,\n    headers,\n    length = null,\n    canLoadOnDemand = false,\n  }: {\n    url: string;\n    headers?: Record<string, string> | Headers;\n    length?: number | null;\n    canLoadOnDemand?: boolean;\n  }) {\n    super(canLoadOnDemand);\n\n    this.url = url;\n    this.headers = headers || {};\n    this.length = length;\n    this.canLoadOnDemand = canLoadOnDemand;\n    this.canDoNegativeRange = true;\n  }\n\n  override async doInitialFetch(\n    tryHead: boolean,\n    skipRange = false,\n  ): Promise<ResponseAbort> {\n    const headers = new Headers(this.headers);\n    if (!skipRange) {\n      headers.set(\"Range\", \"bytes=0-\");\n    }\n\n    this.isValid = false;\n    let abort: AbortController | null = null;\n    let response: Response | null = null;\n\n    if (tryHead) {\n      try {\n        response = await this.retryFetch(this.url, {\n          headers,\n          method: \"HEAD\",\n          cache: \"no-store\",\n        });\n        if (response.status === 200 || response.status == 206) {\n          this.canLoadOnDemand =\n            response.status === 206 ||\n            response.headers.get(\"Accept-Ranges\") === \"bytes\";\n          this.isValid = true;\n        }\n      } catch (_) {\n        // ignore fetch failure, considered invalid\n      }\n    }\n\n    if (!this.isValid || !this.canLoadOnDemand) {\n      abort = new AbortController();\n      const signal = abort.signal;\n      response = await this.retryFetch(this.url, {\n        headers,\n        signal,\n        cache: \"no-store\",\n      });\n      this.canLoadOnDemand =\n        response.status === 206 ||\n        response.headers.get(\"Accept-Ranges\") === \"bytes\";\n      this.isValid = response.status === 206 || response.status === 200;\n\n      // if emulating HEAD, abort here\n      if (tryHead) {\n        abort.abort();\n        abort = null;\n      }\n    }\n\n    if (this.length === null && response) {\n      this.length = Number(response.headers.get(\"Content-Length\"));\n      if (!this.length && response.status === 206) {\n        this.parseLengthFromContentRange(response.headers);\n      }\n    }\n\n    if (this.length === null) {\n      // attempt to get length via proxy\n      try {\n        const resp = await fetch(`${HELPER_PROXY}/c/${this.url}`);\n        const json = await resp.json();\n        if (json.size) {\n          this.length = json.size;\n        }\n      } catch (e) {\n        console.log(\"Error fetching from helper: \" + e);\n      }\n    }\n\n    this.length = Number(this.length || 0);\n\n    // even if no range requests, support buffering small enough files\n    if (\n      !this.canLoadOnDemand &&\n      this.isValid &&\n      this.length > 0 &&\n      this.length <= MAX_FULL_DOWNLOAD_SIZE\n    ) {\n      const resp = await this.retryFetch(this.url, {\n        headers,\n        cache: \"no-store\",\n      });\n      if (resp.ok) {\n        this.arrayBuffer = new ArrayBufferLoader(\n          new Uint8Array(await resp.arrayBuffer()),\n        );\n        this.canLoadOnDemand = true;\n        this.canDoNegativeRange = false;\n      }\n    }\n\n    return { response: response!, abort };\n  }\n\n  async getLength() {\n    if (this.length === null) {\n      const { abort } = await this.doInitialFetch(true);\n      if (abort) {\n        abort.abort();\n      }\n    }\n    return this.length || 0;\n  }\n\n  async getRange(\n    offset: number,\n    length: number,\n    streaming = false,\n    signal: AbortSignal | null = null,\n  ): Promise<Uint8Array | ReadableStream<Uint8Array>> {\n    if (this.arrayBuffer) {\n      return await this.arrayBuffer.getRange(offset, length, streaming);\n    }\n    const headers = new Headers(this.headers);\n    if (length < 0) {\n      headers.set(\"Range\", `bytes=${length}`);\n    } else {\n      headers.set(\"Range\", `bytes=${offset}-${offset + length - 1}`);\n    }\n\n    const cache: RequestCache = \"no-store\";\n\n    const options = { signal, headers, cache };\n\n    let resp: Response;\n\n    try {\n      resp = await this.retryFetch(this.url, options);\n    } catch (_) {\n      throw new RangeError(this.url);\n    }\n\n    if (resp.status != 206) {\n      if (length < 0) {\n        // attempt to get full length and try non-negative range\n        const totalLength = await this.getLength();\n        if (-length > totalLength) {\n          length = -totalLength;\n        }\n        return await this.getRange(\n          totalLength + length,\n          -length,\n          streaming,\n          signal,\n        );\n      }\n      const info = { url: this.url, status: resp.status, resp };\n\n      if (resp.status === 401) {\n        throw new AuthNeededError(info);\n      } else if (resp.status == 403) {\n        throw new AccessDeniedError(info);\n      } else {\n        throw new RangeError(info);\n      }\n    }\n\n    if (this.length === null) {\n      this.parseLengthFromContentRange(resp.headers);\n    }\n\n    if (streaming) {\n      return resp.body || new Uint8Array();\n    } else {\n      return new Uint8Array(await resp.arrayBuffer());\n    }\n  }\n\n  async retryFetch(url: string, options: RequestInit): Promise<Response> {\n    let backoff = 1000;\n    for (let count = 0; count < 20; count++) {\n      const resp = await fetch(url, options);\n      if (resp.status !== 429 && resp.status !== 503) {\n        return resp;\n      }\n      await sleep(backoff);\n      backoff += 2000;\n    }\n    throw new Error(\"retryFetch failed\");\n  }\n\n  parseLengthFromContentRange(headers: Headers) {\n    const range = headers.get(\"Content-Range\");\n    if (range) {\n      const rangeParts = range.split(\"/\");\n      if (rangeParts.length === 2) {\n        // @ts-expect-error [TODO] - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.\n        this.length = parseInt(rangeParts[1]);\n      }\n    }\n  }\n\n  override getFullBuffer(): Uint8Array | null {\n    return this.arrayBuffer?.getFullBuffer() ?? null;\n  }\n}\n\n// ===========================================================================\nclass GoogleDriveLoader extends BaseLoader {\n  fileId: string;\n  apiUrl: string;\n  // @ts-expect-error [TODO] - TS4114 - This member must have an 'override' modifier because it overrides a member in the base class 'BaseLoader'.\n  length: number;\n\n  publicUrl: string | null = null;\n  isValid = false;\n\n  constructor({\n    url,\n    headers,\n    size,\n    extra,\n  }: {\n    url: string;\n    headers?: Record<string, string> | Headers;\n    size?: number;\n    extra?: BlockLoaderExtra;\n  }) {\n    super(true);\n\n    this.fileId = url.slice(\"googledrive://\".length);\n    this.apiUrl = `https://www.googleapis.com/drive/v3/files/${this.fileId}?alt=media`;\n\n    this.headers = headers || {};\n    if (extra?.publicUrl) {\n      this.publicUrl = extra.publicUrl;\n    }\n    this.length = size || 0;\n  }\n\n  override async getLength(): Promise<number> {\n    return this.length;\n  }\n\n  override async doInitialFetch(tryHead: boolean): Promise<ResponseAbort> {\n    let loader: FetchRangeLoader | null = null;\n    let result: ResponseAbort | null = null;\n\n    if (this.publicUrl) {\n      loader = new FetchRangeLoader({\n        url: this.publicUrl,\n        length: this.length,\n      });\n      try {\n        result = await loader.doInitialFetch(tryHead);\n      } catch (_) {\n        // catch and ignore, considered invalid\n      }\n\n      if (!loader.isValid) {\n        if (result?.abort) {\n          result.abort.abort();\n        }\n\n        if (await this.refreshPublicUrl()) {\n          loader = new FetchRangeLoader({\n            url: this.publicUrl,\n            length: this.length,\n          });\n          try {\n            result = await loader.doInitialFetch(tryHead);\n          } catch (_) {\n            // catch and ignore, considered invalid\n          }\n          if (!loader.isValid && result?.abort) {\n            result.abort.abort();\n          }\n        }\n      }\n    }\n\n    if (!loader?.isValid) {\n      this.publicUrl = null;\n      loader = new FetchRangeLoader({\n        url: this.apiUrl,\n        headers: this.headers,\n        length: this.length,\n      });\n      result = await loader.doInitialFetch(tryHead);\n    }\n\n    this.isValid = loader.isValid;\n    if (!this.length && loader.length) {\n      this.length = loader.length;\n    }\n    return result!;\n  }\n\n  async getRange(\n    offset: number,\n    length: number,\n    streaming = false,\n    signal: AbortSignal,\n  ) {\n    let loader: FetchRangeLoader | null = null;\n\n    if (this.publicUrl) {\n      loader = new FetchRangeLoader({\n        url: this.publicUrl,\n        length: this.length,\n      });\n\n      try {\n        return await loader.getRange(offset, length, streaming, signal);\n      } catch (_) {\n        if (await this.refreshPublicUrl()) {\n          loader = new FetchRangeLoader({\n            url: this.publicUrl,\n            length: this.length,\n          });\n          try {\n            return await loader.getRange(offset, length, streaming, signal);\n          } catch (_) {\n            // ignore fetch failure, considered invalid\n          }\n        }\n      }\n\n      //disable public mode?\n      this.publicUrl = null;\n    }\n\n    loader = new FetchRangeLoader({\n      url: this.apiUrl,\n      headers: this.headers,\n      length: this.length,\n    });\n\n    let backoff = 50;\n\n    while (backoff < 2000) {\n      try {\n        return await loader.getRange(offset, length, streaming, signal);\n      } catch (e) {\n        if (\n          e instanceof AccessDeniedError &&\n          e.info[\"resp\"]?.headers\n            .get(\"content-type\")\n            .startsWith(\"application/json\")\n        ) {\n          const err = await e.info[\"resp\"].json();\n          if (\n            err.error?.errors &&\n            err.error.errors[0].reason === \"userRateLimitExceeded\"\n          ) {\n            console.log(`Exponential backoff, waiting for: ${backoff}`);\n            await sleep(backoff);\n            backoff *= 2;\n            continue;\n          }\n        }\n        throw e;\n      }\n    }\n\n    throw new RangeError(\"not found\");\n  }\n\n  async refreshPublicUrl() {\n    try {\n      const resp = await fetch(`${HELPER_PROXY}/g/${this.fileId}`);\n      const json = await resp.json();\n      if (json.url) {\n        this.publicUrl = json.url;\n        return true;\n      }\n    } catch (_) {\n      // ignore, return false\n    }\n\n    return false;\n  }\n}\n\n// ===========================================================================\nclass ArrayBufferLoader extends BaseLoader {\n  arrayBuffer: Uint8Array;\n  size: number;\n\n  constructor(arrayBuffer: Uint8Array) {\n    super(true);\n\n    this.arrayBuffer = arrayBuffer;\n    this.size = arrayBuffer.length;\n    this.length = this.size;\n  }\n\n  get isValid() {\n    return !!this.arrayBuffer;\n  }\n\n  override async getLength() {\n    return this.size;\n  }\n\n  override async doInitialFetch(tryHead = false): Promise<ResponseAbort> {\n    const stream = tryHead\n      ? null\n      : getReadableStreamFromArray(this.arrayBuffer);\n\n    const response = new Response(stream);\n\n    return { response, abort: null };\n  }\n\n  async getRange(\n    offset: number,\n    length: number,\n    streaming = false /*, signal*/,\n  ) {\n    const range = this.arrayBuffer.slice(offset, offset + length);\n\n    return streaming ? getReadableStreamFromArray(range) : range;\n  }\n\n  override getFullBuffer(): Uint8Array | null {\n    return this.arrayBuffer;\n  }\n}\n\n// ===========================================================================\nclass BlobCacheLoader extends BaseLoader {\n  url: string;\n  blob: Blob | null;\n  size: number;\n  arrayBuffer: Uint8Array | null = null;\n\n  constructor({\n    url,\n    blob = null,\n    size = null,\n  }: {\n    url: string;\n    blob?: Blob | null;\n    size?: number | null;\n  }) {\n    super(true);\n    this.url = url;\n    this.blob = blob;\n    this.size = this.blob ? this.blob.size : size || 0;\n    this.length = this.size;\n  }\n\n  get isValid() {\n    return !!this.blob;\n  }\n\n  override async getLength() {\n    if (!this.blob?.size) {\n      const response = await fetch(this.url);\n      this.blob = await response.blob();\n      this.size = this.blob.size;\n      this.length = this.size;\n    }\n    return this.size;\n  }\n\n  override async doInitialFetch(tryHead = false): Promise<ResponseAbort> {\n    if (!this.blob) {\n      try {\n        const response = await fetch(this.url);\n        this.blob = await response.blob();\n        this.size = this.blob.size;\n        this.length = this.size;\n      } catch (e) {\n        console.warn(e);\n        throw e;\n      }\n    }\n\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    const arrayBuffer = this.blob.arrayBuffer\n      ? await this.blob.arrayBuffer()\n      : await this._getArrayBuffer();\n    this.arrayBuffer = new Uint8Array(arrayBuffer);\n\n    const stream = tryHead\n      ? null\n      : getReadableStreamFromArray(this.arrayBuffer);\n\n    const response = new Response(stream);\n\n    return { response, abort: null };\n  }\n\n  async getRange(\n    offset: number,\n    length: number,\n    streaming = false /*, signal*/,\n  ) {\n    if (!this.arrayBuffer) {\n      await this.doInitialFetch(true);\n    }\n\n    const range = this.arrayBuffer!.slice(offset, offset + length);\n\n    return streaming ? getReadableStreamFromArray(range) : range;\n  }\n\n  async _getArrayBuffer(): Promise<ArrayBuffer> {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const fr = new FileReader();\n      fr.onloadend = () => {\n        if (fr.result instanceof ArrayBuffer) {\n          resolve(fr.result);\n        } else {\n          reject(fr.result);\n        }\n      };\n      if (this.blob) {\n        fr.readAsArrayBuffer(this.blob);\n      }\n    });\n  }\n}\n\n// ===========================================================================\nclass FileHandleLoader extends BaseLoader {\n  url: string;\n  file: Blob | null;\n  size?: number;\n  fileHandle: FileSystemFileHandle;\n\n  constructor({\n    blob,\n    size,\n    extra,\n    url,\n  }: {\n    blob?: Blob | null;\n    size?: number;\n    extra?: BlockLoaderExtra;\n    url: string;\n  }) {\n    super(true);\n\n    this.url = url;\n    this.file = null;\n    this.size = blob ? blob.size : size || 0;\n    this.length = this.size;\n\n    this.fileHandle = extra!.fileHandle!;\n  }\n\n  get isValid() {\n    return !!this.file;\n  }\n\n  override async getLength(): Promise<number> {\n    if (this.size === undefined) {\n      await this.initFileObject();\n    }\n    return this.size!;\n  }\n\n  async initFileObject() {\n    const options: FileSystemHandlePermissionDescriptor = { mode: \"read\" };\n\n    const curr = await this.fileHandle.queryPermission(options);\n\n    if (curr !== \"granted\") {\n      const requested = await this.fileHandle.requestPermission(options);\n\n      if (requested !== \"granted\") {\n        throw new AuthNeededError({ fileHandle: this.fileHandle });\n      }\n    }\n\n    this.file = await this.fileHandle.getFile();\n    this.size = this.file.size;\n    this.length = this.size;\n  }\n\n  override async doInitialFetch(tryHead = false): Promise<ResponseAbort> {\n    if (!this.file) {\n      await this.initFileObject();\n    }\n\n    const stream = tryHead ? null : this.file!.stream();\n\n    const response = new Response(stream);\n\n    return { response, abort: null };\n  }\n\n  async getRange(\n    offset: number,\n    length: number,\n    streaming = false /*, signal*/,\n  ) {\n    if (!this.file) {\n      await this.initFileObject();\n    }\n\n    const fileSlice = this.file!.slice(offset, offset + length);\n\n    return streaming\n      ? fileSlice.stream()\n      : new Uint8Array(await fileSlice.arrayBuffer());\n  }\n}\n\n// ===========================================================================\nclass IPFSRangeLoader extends BaseLoader {\n  url: string;\n  opts: Omit<BlockLoaderOpts, \"url\">;\n  override length: number | null;\n  isValid = false;\n\n  constructor({ url, headers, ...opts }: BlockLoaderOpts) {\n    super(true);\n\n    this.url = url;\n    this.opts = opts;\n\n    // let inx = url.lastIndexOf(\"#\");\n    // if (inx < 0) {\n    //   inx = undefined;\n    // }\n\n    this.headers = headers || {};\n    this.length = null;\n  }\n\n  override async getLength(): Promise<number> {\n    if (this.length === null) {\n      await this.doInitialFetch(true);\n    }\n\n    return this.length!;\n  }\n\n  override async doInitialFetch(tryHead: boolean): Promise<ResponseAbort> {\n    const autoipfsClient = await initAutoIPFS(this.opts);\n\n    try {\n      this.length = await autoipfsClient.getSize(this.url);\n      this.isValid = this.length !== null;\n    } catch (e) {\n      console.warn(e);\n      this.length = null;\n      this.isValid = false;\n    }\n\n    let status = 206;\n\n    if (!this.isValid) {\n      status = 404;\n    }\n\n    const abort = new AbortController();\n    const signal = abort.signal;\n    let body;\n\n    if (tryHead || !this.isValid) {\n      body = new Uint8Array([]);\n    } else {\n      const iter: AsyncIterable<Uint8Array> = autoipfsClient.get(this.url, {\n        signal,\n      });\n      body = getReadableStreamFromIter(iter);\n    }\n\n    const response = new Response(body, { status });\n\n    return { response, abort };\n  }\n\n  async getRange(\n    offset: number,\n    length: number,\n    streaming = false,\n    signal: AbortSignal | null = null,\n  ) {\n    const autoipfsClient = await initAutoIPFS(this.opts);\n\n    const iter: AsyncIterable<Uint8Array> = autoipfsClient.get(this.url, {\n      start: offset,\n      end: offset + length - 1,\n      signal,\n    });\n\n    if (streaming) {\n      return getReadableStreamFromIter(iter);\n    } else {\n      const chunks: Uint8Array[] = [];\n      let size = 0;\n\n      for await (const chunk of iter) {\n        chunks.push(chunk);\n        size += chunk.byteLength;\n      }\n\n      return concatChunks(chunks, size);\n    }\n  }\n}\n\nexport function getReadableStreamFromIter(stream: AsyncIterable<Uint8Array>) {\n  return new ReadableStream({\n    start: async (controller) => {\n      try {\n        for await (const chunk of stream) {\n          controller.enqueue(chunk);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n      controller.close();\n    },\n  });\n}\n\nexport function getReadableStreamFromArray(array: Uint8Array) {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(array);\n      controller.close();\n    },\n  });\n}\n"]}