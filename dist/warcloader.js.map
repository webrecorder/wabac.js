{"version":3,"file":"warcloader.js","sourceRoot":"","sources":["../src/warcloader.ts"],"names":[],"mappings":"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","sourcesContent":["import { makeHeaders, Canceled, tsToDate } from \"./utils\";\n\nimport {\n  type BaseAsyncIterReader,\n  type Source,\n  WARCParser,\n  type WARCRecord,\n  postToGetUrl,\n} from \"warcio\";\n\nimport { extractText } from \"./extract\";\n\nimport { BaseParser } from \"./baseparser\";\nimport { type CollMetadata, type ResourceEntry } from \"./types\";\n\n// ===========================================================================\nclass WARCLoader extends BaseParser {\n  reader: Source;\n  abort: AbortController | null;\n  loadId: string | null;\n  sourceExtra: object | null;\n\n  anyPages = false;\n  detectPages = false;\n\n  _lastRecord: WARCRecord | null = null;\n\n  metadata: CollMetadata = {};\n  pages: string[] = [];\n  lists: string[] = [];\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  pageMap: Record<string, any> = {};\n\n  constructor(\n    reader: Source,\n    abort: AbortController | null = null,\n    loadId: string | null = null,\n    sourceExtra = null,\n  ) {\n    super();\n\n    this.reader = reader;\n    this.abort = abort;\n    this.loadId = loadId;\n\n    this._lastRecord = null;\n\n    this.metadata = {};\n\n    this.pageMap = {};\n    this.pages = [];\n    this.lists = [];\n\n    this.sourceExtra = sourceExtra;\n  }\n\n  parseWarcInfo(record: WARCRecord) {\n    if (!record.payload) {\n      return;\n    }\n    const dec = new TextDecoder(\"utf-8\");\n    const text = dec.decode(record.payload);\n\n    // Webrecorder-style metadata\n    for (const line of text.split(\"\\n\")) {\n      if (!line.startsWith(\"json-metadata:\")) {\n        continue;\n      }\n\n      try {\n        const json = JSON.parse(line.slice(\"json-metadata:\".length));\n\n        if (json.type === \"collection\") {\n          this.metadata.desc = json.desc;\n          this.metadata.title = json.title;\n        }\n\n        if (json.pages?.length) {\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          this.pages = this.pages.concat(json.pages);\n\n          for (const page of json.pages) {\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            page.ts = tsToDate(page.timestamp).getTime();\n            this.pageMap[page.ts + \"/\" + page.url] = { page };\n          }\n          //this.promises.push(this.db.addPages(pages));\n          this.anyPages = true;\n        }\n\n        if (json.lists?.length) {\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          this.lists = this.lists.concat(json.lists);\n          //  this.promises.push(this.db.addCuratedPageLists(lists, \"bookmarks\", \"public\"));\n        }\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      } catch (e: any) {\n        console.log(\"Page Add Error\", e.toString());\n      }\n    }\n  }\n\n  index(record: WARCRecord, parser: WARCParser) {\n    if (record.warcType === \"warcinfo\") {\n      this.parseWarcInfo(record);\n      return;\n    }\n\n    //record.cdx = cdx;\n\n    if (!this._lastRecord) {\n      this._lastRecord = record;\n      return;\n    }\n\n    if (this._lastRecord.warcTargetURI != record.warcTargetURI) {\n      this.indexReqResponse(this._lastRecord, null, parser);\n      this._lastRecord = record;\n      return;\n    }\n\n    if (\n      record.warcType === \"request\" &&\n      this._lastRecord.warcType === \"response\"\n    ) {\n      this.indexReqResponse(this._lastRecord, record, parser);\n      this._lastRecord = null;\n    } else if (\n      record.warcType === \"response\" &&\n      this._lastRecord.warcType === \"request\"\n    ) {\n      this.indexReqResponse(record, this._lastRecord, parser);\n      this._lastRecord = null;\n    } else {\n      this.indexReqResponse(this._lastRecord, null, parser);\n      this._lastRecord = record;\n    }\n  }\n\n  indexDone(parser: WARCParser) {\n    if (this._lastRecord) {\n      this.indexReqResponse(this._lastRecord, null, parser);\n      this._lastRecord = null;\n    }\n  }\n\n  shouldIndexMetadataRecord(record: WARCRecord) {\n    const targetURI = record.warcTargetURI;\n    if (targetURI?.startsWith(\"metadata://\")) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseRevisitRecord(\n    record: WARCRecord,\n    reqRecord: WARCRecord | null,\n  ): ResourceEntry | null {\n    const url = record.warcTargetURI!.split(\"#\")[0];\n    const date = record.warcDate;\n    const ts = date ? new Date(date).getTime() : Date.now();\n\n    let respHeaders: Record<string, string> | null = null;\n\n    let status: number | undefined;\n\n    if (record.httpHeaders) {\n      // @ts-expect-error [TODO] - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.\n      const parsed = this.parseResponseHttpHeaders(record, url, reqRecord);\n      if (parsed) {\n        respHeaders = Object.fromEntries(parsed.headers.entries());\n        status = parsed.status;\n      }\n    }\n\n    const origURL = record.warcRefersToTargetURI;\n    const origTS = new Date(record.warcRefersToDate!).getTime();\n\n    // self-revisit, skip\n    if (origURL === url && origTS === ts) {\n      return null;\n    }\n\n    const digest = record.warcPayloadDigest || null;\n\n    return {\n      // @ts-expect-error [TODO] - TS2322 - Type 'string | undefined' is not assignable to type 'string'.\n      url,\n      ts,\n      origURL,\n      origTS,\n      digest,\n      pageId: null,\n      respHeaders,\n      status,\n    };\n  }\n\n  parseResponseHttpHeaders(\n    record: WARCRecord,\n    url: string,\n    reqRecord: WARCRecord | null,\n  ) {\n    let status = 200;\n    let headers: Headers | null = null;\n    let mime = \"\";\n\n    const method = reqRecord?.httpHeaders?.method;\n\n    if (record.httpHeaders) {\n      status = Number(record.httpHeaders.statusCode) || 200;\n\n      if (method === \"OPTIONS\" || method === \"HEAD\") {\n        return null;\n      }\n\n      //statusText = record.httpHeaders.statusText;\n\n      headers = makeHeaders(record.httpHeaders.headers);\n\n      //if (!reqRecord && !record.content.length &&\n      //    (headers.get(\"access-control-allow-methods\") || headers.get(\"access-control-allow-credentials\"))) {\n      //  return null;\n      //}\n\n      // @ts-expect-error [TODO] - TS2322 - Type 'string | undefined' is not assignable to type 'string'.\n      mime = (headers.get(\"content-type\") || \"\").split(\";\")[0];\n\n      // skip partial responses (not starting from 0)\n      if (status === 206 && !this.isFullRangeRequest(headers)) {\n        return null;\n      }\n\n      // self-redirects not handled at lookup time\n      // if (status > 300 && status < 400) {\n      //   const location = headers.get(\"location\");\n      //   if (location) {\n      //     if (new URL(location, url).href === url) {\n      //       return null;\n      //     }\n      //   }\n      // }\n    } else {\n      headers = new Headers();\n      headers.set(\"content-type\", record.warcContentType!);\n      headers.set(\"content-length\", String(record.warcContentLength));\n      mime = record.warcContentType || \"\";\n\n      //cl = record.warcContentLength;\n    }\n\n    return { status, method, headers, mime };\n  }\n\n  indexReqResponse(\n    record: WARCRecord,\n    reqRecord: WARCRecord | null,\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    parser: WARCParser,\n  ) {\n    const entry = this.parseRecords(record, reqRecord);\n\n    if (entry) {\n      this.addResource(entry);\n    }\n  }\n\n  parseRecords(\n    record: WARCRecord,\n    reqRecord: WARCRecord | null,\n  ): ResourceEntry | null {\n    switch (record.warcType) {\n      case \"revisit\":\n        return this.parseRevisitRecord(record, reqRecord);\n\n      case \"resource\":\n        reqRecord = null;\n        break;\n\n      case \"response\":\n        break;\n\n      case \"metadata\":\n        if (!this.shouldIndexMetadataRecord(record)) {\n          return null;\n        }\n        break;\n\n      default:\n        return null;\n    }\n\n    let url = record.warcTargetURI!.split(\"#\")[0];\n    const date = record.warcDate;\n\n    // @ts-expect-error [TODO] - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.\n    const parsed = this.parseResponseHttpHeaders(record, url, reqRecord);\n\n    if (!parsed) {\n      return null;\n    }\n\n    const { status, method, headers, mime } = parsed;\n\n    let referrer: string | null = null;\n    let requestBody: Uint8Array | null = null;\n    let requestUrl;\n    let reqHeaders;\n\n    if (reqRecord?.httpHeaders?.headers) {\n      let requestHeaders: Headers | null = null;\n      try {\n        requestHeaders = new Headers(reqRecord.httpHeaders.headers as Headers);\n        const cookie = requestHeaders.get(\"cookie\");\n        if (cookie) {\n          headers.set(\"x-wabac-preset-cookie\", cookie);\n        }\n        referrer = reqRecord.httpHeaders.headers.get(\"Referer\") || null;\n      } catch (e) {\n        requestHeaders = new Headers();\n        console.warn(e);\n      }\n\n      reqHeaders = Object.fromEntries(requestHeaders.entries());\n\n      if (method !== \"GET\") {\n        const data = {\n          headers: requestHeaders,\n          method: method || \"GET\",\n          url,\n          postData: reqRecord.payload,\n        };\n\n        // @ts-expect-error [TODO] - TS2345 - Argument of type '{ headers: Headers; method: string; url: string | undefined; postData: Uint8Array | null; }' is not assignable to parameter of type 'Request'.\n        if (postToGetUrl(data)) {\n          // original requestUrl\n          requestUrl = url;\n\n          // url with post data appended\n          url = data.url;\n\n          // raw request payload (for future serialization)\n          requestBody = reqRecord.payload;\n        }\n      }\n    }\n\n    // if no pages found, start detection if hasn't started already\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (this.detectPages === undefined) {\n      this.detectPages = !this.anyPages;\n    }\n\n    if (this.detectPages) {\n      // @ts-expect-error [TODO] - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.\n      if (isPage(url, status, mime)) {\n        const title = url;\n        // @ts-expect-error [TODO] - TS2322 - Type 'string | undefined' is not assignable to type 'string'.\n        this.addPage({ url, date, title });\n      }\n    }\n\n    const ts = date ? new Date(date).getTime() : Date.now();\n\n    const respHeaders = Object.fromEntries(headers.entries());\n\n    const digest = record.warcPayloadDigest || null;\n\n    const payload = record.payload;\n    const reader: BaseAsyncIterReader | null = payload\n      ? null\n      : (record.reader as BaseAsyncIterReader);\n\n    const entry: ResourceEntry = {\n      // @ts-expect-error [TODO] - TS2322 - Type 'string | undefined' is not assignable to type 'string'.\n      url,\n      ts,\n      status,\n      mime,\n      respHeaders,\n      reqHeaders,\n      digest,\n      payload,\n      reader,\n      referrer,\n    };\n\n    if (this.pageMap[ts + \"/\" + url] && payload && mime.startsWith(\"text/\")) {\n      this.pageMap[ts + \"/\" + url].textPromise = extractText(\n        // @ts-expect-error [TODO] - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.\n        url,\n        payload,\n        headers.get(\"content-encoding\"),\n        headers.get(\"transfer-encoding\"),\n      );\n    }\n\n    const extraMetadata = record.warcHeader(\"WARC-JSON-Metadata\");\n\n    if (extraMetadata) {\n      try {\n        entry.extraOpts = JSON.parse(extraMetadata);\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      } catch (e) {\n        // ignore error on extraOpts\n      }\n    }\n\n    const pageId = record.warcHeader(\"WARC-Page-ID\");\n\n    if (pageId) {\n      entry.pageId = pageId;\n    }\n\n    if (this.sourceExtra) {\n      // @ts-expect-error [TODO] - TS2322 - Type 'object' is not assignable to type 'Source | undefined'.\n      entry.source = this.sourceExtra;\n    }\n\n    if (method !== \"GET\" && requestUrl) {\n      entry.requestUrl = requestUrl;\n      entry.method = method;\n      entry.requestBody = requestBody || new Uint8Array([]);\n    }\n\n    return entry;\n  }\n\n  isFullRangeRequest(headers: Headers | Map<string, string>) {\n    const range = headers.get(\"content-range\");\n\n    const cl = parseInt(headers.get(\"content-length\") || \"0\");\n\n    const fullRange = `bytes 0-${cl - 1}/${cl}`;\n\n    // full range is range exists and matches expected full range\n    return range && range === fullRange;\n  }\n\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  filterRecord(record: WARCRecord): string | null {\n    return null;\n  }\n\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async load(db: any, progressUpdate: any, totalSize = 0) {\n    if (progressUpdate && !totalSize) {\n      throw new Error(\"totalSize is required\");\n    }\n    this.db = db;\n\n    const parser = new WARCParser(this.reader);\n\n    let lastUpdate = 0,\n      updateTime = 0;\n    let count = 0;\n\n    try {\n      for await (const record of parser) {\n        count++;\n\n        if (!record.warcType) {\n          console.log(\"skip empty record\");\n          continue;\n        }\n\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const interruptLoads = (self as any).interruptLoads as Record<\n          string,\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          any\n        >;\n\n        // [TODO]\n\n        if (progressUpdate && this.loadId && interruptLoads[this.loadId]) {\n          progressUpdate(\n            Math.round((parser.offset / totalSize) * 95.0),\n            \"Loading Canceled\",\n            parser.offset,\n            totalSize,\n          );\n          interruptLoads[this.loadId]();\n          if (this.abort) {\n            this.abort.abort();\n          }\n          throw new Canceled();\n        }\n\n        updateTime = new Date().getTime();\n        if (updateTime - lastUpdate > 500) {\n          const extraMsg = `Processed ${count} records`;\n          progressUpdate(\n            Math.round((parser.offset / totalSize) * 95.0),\n            null,\n            parser.offset,\n            totalSize,\n            null,\n            extraMsg,\n          );\n          lastUpdate = updateTime;\n        }\n\n        const skipMode = this.filterRecord(record);\n        if (skipMode === \"done\") {\n          if (this.abort) {\n            this.abort.abort();\n          }\n          break;\n        } else if (skipMode === \"skip\") {\n          continue;\n        }\n\n        if (skipMode === \"skipContent\") {\n          await record.skipFully();\n        } else {\n          await record.readFully();\n        }\n\n        count++;\n\n        this.index(record, parser);\n\n        if (this.promises.length > 0) {\n          try {\n            await Promise.all(this.promises);\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          } catch (e: any) {\n            console.warn(e.toString());\n          }\n          this.promises = [];\n        }\n      }\n    } catch (e) {\n      if (e instanceof Canceled) {\n        throw e;\n      }\n\n      progressUpdate(\n        Math.round((parser.offset / totalSize) * 95.0),\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `Sorry there was an error downloading. Please try again (${e})`,\n        parser.offset,\n        totalSize,\n      );\n\n      console.warn(e);\n    }\n\n    this.indexDone(parser);\n\n    progressUpdate(95, null, parser.offset, totalSize);\n\n    await this.finishIndexing();\n\n    progressUpdate(100, null, totalSize, totalSize);\n\n    return this.metadata;\n  }\n\n  // @ts-expect-error [TODO] - TS4114 - This member must have an 'override' modifier because it overrides a member in the base class 'BaseParser'.\n  async _finishLoad() {\n    if (this.pages.length) {\n      for (const { page, textPromise } of Object.values(this.pageMap)) {\n        if (textPromise) {\n          try {\n            page.text = await textPromise;\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          } catch (e: any) {\n            console.warn(\"Error adding text: \" + e.toString());\n          }\n        }\n      }\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      this.promises.push(this.db.addPages(this.pages));\n    }\n\n    if (this.lists.length) {\n      this.promises.push(\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        this.db.addCuratedPageLists(this.lists, \"bookmarks\", \"public\"),\n      );\n    }\n  }\n}\n\n// ===========================================================================\nfunction isPage(url: string, status: number, mime: string) {\n  if (status != 200) {\n    return false;\n  }\n\n  if (\n    !url.startsWith(\"http:\") &&\n    !url.startsWith(\"https:\") &&\n    !url.startsWith(\"blob:\")\n  ) {\n    return false;\n  }\n\n  if (url.endsWith(\"/robots.txt\")) {\n    return false;\n  }\n\n  // skip urls with long query\n  const parts = url.split(\"?\", 2);\n\n  // @ts-expect-error [TODO] - TS2532 - Object is possibly 'undefined'. | TS2532 - Object is possibly 'undefined'.\n  if (parts.length === 2 && parts[1].length > parts[0].length) {\n    return false;\n  }\n\n  // skip 'files' starting with '.' from being listed as pages\n  // @ts-expect-error [TODO] - TS2532 - Object is possibly 'undefined'. | TS2532 - Object is possibly 'undefined'.\n  if (parts[0].substring(parts[0].lastIndexOf(\"/\") + 1).startsWith(\".\")) {\n    return false;\n  }\n\n  if (mime && mime !== \"text/html\") {\n    return false;\n  }\n\n  return true;\n}\n\n// ===========================================================================\nclass SingleRecordWARCLoader extends WARCLoader {\n  constructor(reader: Source) {\n    super(reader);\n    this.detectPages = false;\n  }\n\n  // @ts-expect-error [TODO] - TS4114 - This member must have an 'override' modifier because it overrides a member in the base class 'WARCLoader'.\n  addPage() {}\n\n  // @ts-expect-error [TODO] - TS4114 - This member must have an 'override' modifier because it overrides a member in the base class 'WARCLoader'.\n  async load() {\n    const record = await new WARCParser(this.reader).parse();\n\n    if (!record) {\n      return null;\n    }\n\n    const entry = this.parseRecords(record, null);\n\n    if (!entry || record.warcType === \"revisit\") {\n      await record.readFully();\n    }\n\n    return entry;\n  }\n}\n\n// ===========================================================================\nclass WARCInfoOnlyWARCLoader extends WARCLoader {\n  // @ts-expect-error [TODO] - TS4114 - This member must have an 'override' modifier because it overrides a member in the base class 'WARCLoader'.\n  filterRecord(record: WARCRecord) {\n    if (record.warcType != \"warcinfo\") {\n      return \"done\";\n    }\n\n    return null;\n  }\n}\n\nexport { WARCLoader, SingleRecordWARCLoader, isPage, WARCInfoOnlyWARCLoader };\n"]}