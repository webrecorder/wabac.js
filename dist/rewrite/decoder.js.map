{"version":3,"file":"decoder.js","sourceRoot":"","sources":["../../src/rewrite/decoder.ts"],"names":[],"mappings":"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","sourcesContent":["import brotliDecode from \"brotli/decompress.js\";\n\nimport pako from \"pako\";\n\nimport { AsyncIterReader } from \"warcio\";\nimport { type ArchiveResponse } from \"../response\";\n\n// ===========================================================================\nasync function decodeResponse(\n  response: ArchiveResponse,\n  contentEncoding: string | null,\n  transferEncoding: string | null,\n  noRW: boolean,\n) {\n  // use the streaming decoder if gzip only and no rewriting\n  if (\n    response.reader &&\n    noRW &&\n    ((contentEncoding === \"gzip\" && !transferEncoding) ||\n      (!contentEncoding && transferEncoding === \"gzip\"))\n  ) {\n    response.setReader(new AsyncIterReader(response.reader));\n    return response;\n  }\n\n  const buffer = (await response.getBuffer()) || [];\n\n  const origContent = new Uint8Array(buffer);\n\n  const content = await decodeContent(\n    origContent,\n    contentEncoding,\n    transferEncoding,\n  );\n\n  if (origContent !== content) {\n    response.setBuffer(content);\n  }\n\n  return response;\n}\n\n// ===========================================================================\nasync function decodeContent(\n  content: Uint8Array,\n  contentEncoding: string | null,\n  transferEncoding: string | null,\n) {\n  const origContent = content;\n\n  try {\n    if (transferEncoding === \"chunked\") {\n      content = dechunkArrayBuffer(content);\n    }\n  } catch (e) {\n    console.log(\"Chunk-Encoding Ignored: \" + e);\n  }\n\n  try {\n    if (contentEncoding === \"br\") {\n      content = brotliDecode(content as Buffer);\n\n      // if ended up with zero-length, probably not valid, just use original\n      if (content.length === 0) {\n        content = origContent;\n      }\n    } else if (contentEncoding === \"gzip\" || transferEncoding === \"gzip\") {\n      const inflator = new pako.Inflate();\n\n      inflator.push(content, true);\n\n      // if error occurs (eg. not gzip), use original arraybuffer\n      if (inflator.result && !inflator.err) {\n        content = inflator.result as Uint8Array;\n      }\n    }\n  } catch (e) {\n    console.log(\"Content-Encoding Ignored: \" + e);\n  }\n\n  return content;\n}\n\n// ===========================================================================\nfunction dechunkArrayBuffer(data: Uint8Array) {\n  let readOffset = 0;\n  let writeOffset = 0;\n\n  const decoder = new TextDecoder(\"utf-8\");\n\n  while (readOffset < data.length) {\n    let i = readOffset;\n\n    // check hex digits, 0-9, A-Z, a-z\n    while (\n      // @ts-expect-error [TODO] - TS2532 - Object is possibly 'undefined'. | TS2532 - Object is possibly 'undefined'.\n      (data[i] >= 48 && data[i] <= 57) ||\n      // @ts-expect-error [TODO] - TS2532 - Object is possibly 'undefined'. | TS2532 - Object is possibly 'undefined'.\n      (data[i] >= 65 && data[i] <= 70) ||\n      // @ts-expect-error [TODO] - TS2532 - Object is possibly 'undefined'. | TS2532 - Object is possibly 'undefined'.\n      (data[i] >= 97 && data[i] <= 102)\n    ) {\n      i++;\n    }\n\n    // doesn't start with number, return original\n    if (i === 0) {\n      return data;\n    }\n\n    // ensure \\r\\n\\r\\n\n    if (data[i] != 13 || data[i + 1] != 10) {\n      return data;\n    }\n\n    i += 2;\n\n    const chunkLength = parseInt(\n      decoder.decode(data.subarray(readOffset, i)),\n      16,\n    );\n\n    if (chunkLength == 0) {\n      break;\n    }\n\n    data.set(data.subarray(i, i + chunkLength), writeOffset);\n\n    i += chunkLength;\n\n    writeOffset += chunkLength;\n\n    if (data[i] == 13 && data[i + 1] == 10) {\n      i += 2;\n    }\n\n    readOffset = i;\n  }\n\n  return data.subarray(0, writeOffset);\n}\n\nexport { decodeResponse, decodeContent };\n"]}