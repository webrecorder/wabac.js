{"version":3,"file":"html.js","sourceRoot":"","sources":["../../src/rewrite/html.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,8BAA8B,CAAC;AAE/D,OAAO,EACL,aAAa,EACb,YAAY,EACZ,YAAY,EACZ,qBAAqB,EACrB,qBAAqB,GACtB,MAAM,UAAU,CAAC;AASlB,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC;AAClC,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC;AAElC,8EAA8E;AAC9E,MAAM,kBAAkB,GACtB,qDAAqD,CAAC;AAExD,MAAM,iBAAiB,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;AAExD,MAAM,MAAM,GAAG,KAAK,CAAC;AAErB,MAAM,qBAAqB,GAAG,QAAQ,CAAC;AAEvC,MAAM,WAAW,GAA2C;IAC1D,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;IAClB,MAAM,EAAE;QACN,QAAQ,EAAE,KAAK;QACf,OAAO,EAAE,KAAK;KACf;IACD,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IACtB,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE;IACrB,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IACtB,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IAC5B,IAAI,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE;IAC3B,MAAM,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE;IAC9B,OAAO,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;IACxB,GAAG,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IACrB,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE;IACrB,MAAM,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE;IACtB,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;IACvD,GAAG,EAAE;QACH,GAAG,EAAE,KAAK;QACV,MAAM,EAAE,KAAK;KACd;IACD,GAAG,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IACrB,KAAK,EAAE;QACL,GAAG,EAAE,KAAK;QACV,UAAU,EAAE,MAAM;KACnB;IACD,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE;IACxB,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE;IACrB,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;IACrB,IAAI,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;IACxB,MAAM,EAAE;QACN,QAAQ,EAAE,KAAK;QACf,IAAI,EAAE,KAAK;KACZ;IACD,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;IACvB,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IACnB,GAAG,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;IACpB,MAAM,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE;IAC3C,MAAM,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE;IACrC,KAAK,EAAE;QACL,GAAG,EAAE,KAAK;QACV,MAAM,EAAE,KAAK;KACd;CACF,CAAC;AAEF,MAAM,oBAAoB,GAAG;IAC3B;QACE,KAAK,EAAE,4BAA4B;QACnC,OAAO,EAAE,uBAAuB;KACjC;CACF,CAAC;AAQF,MAAM,uBAAuB,GAA0B;IACrD;QACE,QAAQ,EAAE,0BAA0B;QACpC,KAAK,EAAE,2CAA2C;QAClD,OAAO,EAAE,OAAO;KACjB;CACF,CAAC;AAEF,8EAA8E;AAC9E,MAAM,OAAO,YAAY;IACvB,QAAQ,CAAW;IACnB,IAAI,GAA+B,IAAI,CAAC;IACxC,SAAS,GAA4B,IAAI,CAAC;IAC1C,aAAa,CAAU;IAEvB,YAAY,QAAkB,EAAE,aAAa,GAAG,KAAK;QACnD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,KAAK,MAAM,IAAI,IAAI,uBAAuB,EAAE,CAAC;YAC3C,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjD,IAAI,CAAC,EAAE,CAAC;gBACN,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,MAAM;YACR,CAAC;QACH,CAAC;QAED,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACrC,CAAC;IAED,kBAAkB,CAChB,KAAwB,EACxB,IAAqB,EACrB,QAAkB;QAElB,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QAC9C,IAAI,KAAK,EAAE,CAAC;YACV,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAC9B,CAAC;QAED,IAAI,KAAK,KAAK,yBAAyB,EAAE,CAAC;YACxC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9B,CAAC;aAAM,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;YAC/B,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CACvB,kBAAkB,EAClB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAU,EAAE,EAAE,EAAE,EAAE,CACxB,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,GAAG,EAAE,CACxD,CAAC;QACJ,CAAC;aAAM,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,UAAU,EAAE,CAAC;YACtD,OAAO,4BAA4B,CAAC;QACtC,CAAC;aAAM,IAAI,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,iBAAiB,CAAC,EAAE,CAAC;YACxD,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/C,CAAC;QAED,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,aAAa,CAAC,KAAa,EAAE,QAAkB;QAC7C,MAAM,YAAY,GAAG,oDAAoD,CAAC;QAE1E,MAAM,EAAE,GAAa,EAAE,CAAC;QAExB,KAAK,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC;YAC1C,IAAI,CAAC,EAAE,CAAC;gBACN,MAAM,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAClC,4HAA4H;gBAC5H,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/C,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3B,CAAC;QACH,CAAC;QAED,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,kBAAkB,CAChB,GAAa,EACb,SAAiC,EACjC,QAAkB;QAElB,MAAM,KAAK,GAAG,CAAC,GAAW,EAAE,EAAE;YAC5B,OAAO,aAAa,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC;QAC/C,CAAC,CAAC;QACF,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;QAE5B,0EAA0E;QAC1E,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YAC7B,OAAO;QACT,CAAC;QAED,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;YAC7B,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;YAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YAE/B,4BAA4B;YAC5B,IAAI,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC;gBACpC,IAAI,CAAC,KAAK;oBACR,aAAa;wBACb,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;4BACpD,MAAM,EAAE,IAAI;yBACb,CAAC,CAAC;YACP,CAAC;iBAAM,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;gBAC5D,WAAW;gBACX,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;gBACzD,YAAY;YACd,CAAC;iBAAM,IAAI,IAAI,KAAK,OAAO,EAAE,CAAC;gBAC5B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC/C,CAAC;YAED,kBAAkB;iBACb,IAAI,IAAI,KAAK,YAAY,EAAE,CAAC;gBAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAChD,CAAC;iBAAM,IACL,IAAI,KAAK,QAAQ;gBACjB,CAAC,IAAI,KAAK,aAAa,IAAI,OAAO,KAAK,MAAM,CAAC,EAC9C,CAAC;gBACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YACnD,CAAC;YAED,qDAAqD;YACrD,2DAA2D;iBACtD,IACH,IAAI,KAAK,aAAa;gBACtB,IAAI,KAAK,WAAW;gBACpB,IAAI,KAAK,UAAU,EACnB,CAAC;gBACD,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;YAC9B,CAAC;iBAAM,IAAI,OAAO,KAAK,MAAM,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;gBACpD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;YAClE,CAAC;iBAAM,IAAI,OAAO,KAAK,MAAM,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;gBACpD,IAAI,KAAK,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;oBAC7D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC;YACH,CAAC;iBAAM,IAAI,OAAO,KAAK,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YACrD,CAAC;iBAAM,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;gBACpD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YACrD,CAAC;iBAAM,IAAI,OAAO,KAAK,MAAM,IAAI,IAAI,KAAK,MAAM,EAAE,CAAC;gBACjD,IAAI,CAAC;oBACH,2CAA2C;oBAC3C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACrD,SAAS;oBACT,6DAA6D;gBAC/D,CAAC;gBAAC,OAAO,CAAC,EAAE,CAAC;oBACX,OAAO,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChD,CAAC;YACH,CAAC;iBAAM,IAAI,OAAO,KAAK,QAAQ,IAAI,IAAI,KAAK,KAAK,EAAE,CAAC;gBAClD,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBACzC,MAAM,GAAG,GAAG,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;gBACnE,IAAI,QAAQ,KAAK,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC5B,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;oBAC7D;oBACE,SAAS;oBACT,oEAAoE;oBACpE,IAAI,CAAC,KAAK;wBACV,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,6BAA6B,CAAC,EACpD,CAAC;wBACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;oBAC1D,CAAC;yBAAM,CAAC;wBACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;oBAChE,CAAC;gBACH,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;gBACxB,CAAC;YACH,CAAC;iBAAM,IAAI,OAAO,KAAK,QAAQ,IAAI,IAAI,KAAK,MAAM,EAAE,CAAC;gBACnD,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;gBAE7C,sCAAsC;gBACtC,IAAI,IAAI,KAAK,iBAAiB,EAAE,CAAC;oBAC/B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;oBAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBACjE,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAC;gBACzB,CAAC;qBAAM,IAAI,IAAI,KAAK,eAAe,EAAE,CAAC;oBACpC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;oBAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;oBACnD,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;gBACtB,CAAC;qBAAM,IAAI,IAAI,KAAK,+BAA+B,EAAE,CAAC;oBACpD,KAAK,MAAM,IAAI,IAAI,oBAAoB,EAAE,CAAC;wBACxC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC3D,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE,CAAC;4BACzB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;4BAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;4BAC5D,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAC;4BACvB,MAAM;wBACR,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;iBAAM,IAAI,OAAO,KAAK,OAAO,EAAE,CAAC;gBAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;gBAC7C,GAAG,CAAC,OAAO,GAAG,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC;YAC9D,CAAC;iBAAM,IAAI,IAAI,KAAK,QAAQ,EAAE,CAAC;gBAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;gBAE1B,IACE,MAAM,KAAK,QAAQ;oBACnB,MAAM,KAAK,SAAS;oBACpB,MAAM,KAAK,MAAM;oBACjB,MAAM,KAAK,KAAK,EAChB,CAAC;oBACD,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC;gBACrC,CAAC;YACH,CAAC;iBAAM,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,KAAK,EAAE,CAAC;gBAChE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAC1B,QAAQ,EACR,IAAI,CAAC,KAAK,EACV,KAAK,EACL,SAAS,CAAC,IAAI,CAAC,CAChB,CAAC;YACJ,CAAC;QACH,CAAC;IACH,CAAC;IAED,OAAO,CAAC,KAAwB,EAAE,IAAY;QAC5C,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE,CAAC;gBACvB,OAAO,IAAI,CAAC,KAAK,CAAC;YACpB,CAAC;QACH,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,eAAe,CAAC,GAAa;QAC3B,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAEnD,IAAI,UAAU,KAAK,QAAQ,EAAE,CAAC;YAC5B,OAAO,QAAQ,CAAC;QAClB,CAAC;aAAM,IAAI,UAAU,KAAK,kBAAkB,EAAE,CAAC;YAC7C,OAAO,MAAM,CAAC;QAChB,CAAC;aAAM,IACL,CAAC,UAAU;YACX,UAAU,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC;YACrC,UAAU,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,EACrC,CAAC;YACD,OAAO,IAAI,CAAC;QACd,CAAC;aAAM,IAAI,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;YAC1C,OAAO,MAAM,CAAC;QAChB,CAAC;aAAM,IAAI,UAAU,KAAK,WAAW,EAAE,CAAC;YACtC,OAAO,WAAW,CAAC;QACrB,CAAC;aAAM,CAAC;YACN,OAAO,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,QAAyB;QACrC,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YACzC,6DAA6D;YAC7D,OAAO,QAAQ,CAAC;QAClB,CAAC;QAED,IAAI,QAAQ,CAAC,cAAc,EAAE,GAAG,qBAAqB,EAAE,CAAC;YACtD,OAAO,CAAC,IAAI,CACV,yCAAyC,GAAG,QAAQ,CAAC,cAAc,EAAE,CACtE,CAAC;YACF,OAAO,QAAQ,CAAC;QAClB,CAAC;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE/B,MAAM,QAAQ,GAAG,IAAI,eAAe,EAAE,CAAC;QACvC,SAAS;QACT,8DAA8D;QAC7D,QAAgB,CAAC,SAAS,CAAC,YAAY,CAAC,eAAe,GAAG,QAAQ,CAAC;QAEpE,IAAI,WAAW,GAAG,KAAK,CAAC;QACxB,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,WAAW,GAAG,IAAI,CAAC;QAEvB,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,UAAU,GAAG,EAAE,CAAC;QAEpB,MAAM,SAAS,GAAG,GAAG,EAAE;YACrB,IAAI,CAAC,WAAW,IAAI,QAAQ,CAAC,cAAc,EAAE,CAAC;gBAC5C,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACzD,IAAI,UAAU,EAAE,CAAC;oBACf,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;gBAC/B,CAAC;gBACD,WAAW,GAAG,IAAI,CAAC;YACrB,CAAC;QACH,CAAC,CAAC;QAEF,QAAQ,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,EAAE;YACnC,MAAM,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAE/C,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC;YAElC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,QAAQ,IAAI,EAAE,EAAE,QAAQ,CAAC,CAAC;YAE5D,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;gBACjE,SAAS,EAAE,CAAC;YACd,CAAC;YAED,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAEhC,QAAQ,QAAQ,CAAC,OAAO,EAAE,CAAC;gBACzB,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACd,IAAI,QAAQ,CAAC,WAAW,EAAE,CAAC;wBACzB,MAAM;oBACR,CAAC;oBAED,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;oBAC3B,WAAW,GAAG,IAAI,CAAC;oBACnB,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;oBAC1C,MAAM;gBACR,CAAC;gBAED,KAAK,OAAO;oBACV,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;wBAC1B,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;oBAC7B,CAAC;oBACD,MAAM;gBAER,KAAK,MAAM;oBACT,SAAS,EAAE,CAAC;oBACZ,MAAM;gBAER,KAAK,MAAM;oBACT,QAAQ,GAAG,IAAI,CAAC;oBAChB,MAAM;YACV,CAAC;YAED,IAAI,QAAQ,CAAC,OAAO,KAAK,QAAQ,EAAE,CAAC;gBAClC,OAAO,GAAG,QAAQ,CAAC;gBACnB,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC;YAChC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE,EAAE;YAC/B,IAAI,MAAM,CAAC,OAAO,KAAK,OAAO,EAAE,CAAC;gBAC/B,IAAI,UAAU,EAAE,CAAC;oBACf,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC;oBAC5B,UAAU,GAAG,EAAE,CAAC;gBAClB,CAAC;gBACD,QAAQ,OAAO,EAAE,CAAC;oBAChB,KAAK,MAAM;wBACT,QAAQ,GAAG,IAAI,CAAC;wBAChB,MAAM;oBAER,KAAK,QAAQ;wBACX,IAAI,QAAQ,IAAI,CAAC,WAAW,IAAI,QAAQ,KAAK,IAAI,EAAE,CAAC;4BAClD,QAAQ,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;wBACzC,CAAC;wBACD,MAAM;gBACV,CAAC;gBACD,OAAO,GAAG,EAAE,CAAC;YACf,CAAC;YACD,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE;YACrC,MAAM,IAAI,GAAG,CAAC,GAAG,EAAE;gBACjB,IAAI,OAAO,KAAK,QAAQ,EAAE,CAAC;oBACzB,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;oBAC/B,MAAM,QAAQ,GAAG,QAAQ,KAAK,QAAQ,CAAC;oBAEvC,WAAW,GAAG,WAAW,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC;oBAEhE,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,EAAE,CAAC;wBAClC,OAAO,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;oBAClE,CAAC;yBAAM,IAAI,QAAQ,KAAK,MAAM,EAAE,CAAC;wBAC/B,OAAO,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;oBAC1D,CAAC;yBAAM,IAAI,QAAQ,KAAK,WAAW,EAAE,CAAC;wBACpC,OAAO,QAAQ,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;oBACnD,CAAC;yBAAM,CAAC;wBACN,OAAO,SAAS,CAAC,IAAI,CAAC;oBACxB,CAAC;gBACH,CAAC;qBAAM,IAAI,OAAO,KAAK,OAAO,EAAE,CAAC;oBAC/B,OAAO,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAC7C,CAAC;qBAAM,CAAC;oBACN,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBACnC,CAAC;YACH,CAAC,CAAC,EAAE,CAAC;YAEL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,qBAAqB,EAAE,CAAC;gBAC5D,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,qBAAqB,CAAC,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,SAAS,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAC;QACxC,IAAI,OAAO,GAAG,KAAK,CAAC;QAEpB,4DAA4D;QAC5D,MAAM,YAAY,GAAG,IAAI,CAAC;QAE1B,QAAQ,CAAC,SAAS,CAChB,IAAI,cAAc,CAAC;YACjB,KAAK,CAAC,KAAK,CAAC,UAAU;gBACpB,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE;oBAC3B,UAAU,CAAC,OAAO;oBAChB,SAAS;oBACT,YAAY,CAAC,aAAa;wBACxB,CAAC,CAAC,iEAAiE;4BACjE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;wBACtB,CAAC,CAAC,iEAAiE;4BACjE,YAAY,CAAC,IAAI,CAAC,CACvB,CAAC;gBACJ,CAAC,CAAC,CAAC;gBAEH,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;oBACtB,UAAU,CAAC,KAAK,EAAE,CAAC;gBACrB,CAAC,CAAC,CAAC;gBAEH,IAAI,KAAK,EAAE,MAAM,KAAK,IAAI,SAAS,EAAE,CAAC;oBACpC,IAAI,YAAY,CAAC,aAAa,EAAE,CAAC;wBAC/B,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;oBAChD,CAAC;yBAAM,CAAC;wBACN,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,CAAC;oBAChD,CAAC;oBACD,OAAO,GAAG,IAAI,CAAC;gBACjB,CAAC;gBACD,IAAI,OAAO,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;gBACd,CAAC;gBAED,QAAQ,CAAC,GAAG,EAAE,CAAC;YACjB,CAAC;SACF,CAAC,CACH,CAAC;QAEF,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,UAAU,CAAC,QAAkB,EAAE,IAAY,EAAE,QAAQ,GAAG,KAAK,EAAE,GAAG,GAAG,EAAE;QACrE,yEAAyE;QACzE,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5C,CAAC;QACD,MAAM,GAAG,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAChD,OAAO,GAAG,IAAI,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,KAAK;YAC5D,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC;YACtC,CAAC,CAAC,GAAG,CAAC;IACV,CAAC;IAED,eAAe,CAAC,IAAY;QAC1B,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YAChC,qDAAqD;YACrD,wCAAwC;YACxC,oEAAoE;YACpE,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACrE,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YACxD,IAAI,IAAI,KAAK,OAAO,EAAE,CAAC;gBACrB,OAAO,OAAO,CAAC;YACjB,CAAC;QACH,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,eAAe,CAAC,IAAY,EAAE,QAAkB;QAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9B,oEAAoE;QACpE,MAAM,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QACxE,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QACzB,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;CACF;AAED,8EAA8E;AAC9E,MAAM,OAAO,iBAAkB,SAAQ,YAAY;IACxC,UAAU,CACjB,QAAkB,EAClB,IAAY,EACZ,QAAQ,GAAG,KAAK,EAChB,GAAG,GAAG,EAAE;QAER,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,KAAK,EAAE,CAAC;YACpD,OAAQ,QAA0B,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACpE,CAAC;QAED,IAAI,GAAG,KAAK,KAAK,EAAE,CAAC;YAClB,yEAAyE;YACzE,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;gBACxB,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5C,CAAC;YAED,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAC7C,CAAC;QAED,qDAAqD;QACrD,IAAK,QAA0B,CAAC,WAAW,EAAE,CAAC;YAC5C,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAC7C,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAEQ,kBAAkB,CACzB,GAAa,EACb,SAAiC,EACjC,QAAkB;QAElB,IAAK,QAA0B,CAAC,WAAW,EAAE,CAAC;YAC5C,OAAO,KAAK,CAAC,kBAAkB,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QAC5D,CAAC;QAED,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;QAE5B,0EAA0E;QAC1E,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YAC7B,OAAO;QACT,CAAC;QAED,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;YAC7B,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;YAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YAE/B,IAAI,OAAO,KAAK,MAAM,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;gBAC7C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;YAClE,CAAC;iBAAM,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,KAAK,EAAE,CAAC;gBAChE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACxE,CAAC;QACH,CAAC;IACH,CAAC;CACF","sourcesContent":["import { RewritingStream } from \"parse5-html-rewriting-stream\";\n\nimport {\n  startsWithAny,\n  decodeLatin1,\n  encodeLatin1,\n  MAX_STREAM_CHUNK_SIZE,\n  REPLAY_TOP_FRAME_NAME,\n} from \"../utils\";\nimport {\n  type ProxyRewriter,\n  type ArchiveResponse,\n  type Rewriter,\n} from \"./index.js\";\nimport { type StartTag } from \"parse5-sax-parser\";\nimport { type Token } from \"parse5\";\n\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\n\n// ===========================================================================\nconst META_REFRESH_REGEX =\n  /([\\d.]+\\s*;\\s*(?:url\\s*=)?\\s*)['\"]?(.+)['\"]?(\\s*)/im;\n\nconst DATA_RW_PROTOCOLS = [\"http://\", \"https://\", \"//\"];\n\nconst defmod = \"mp_\";\n\nconst MAX_HTML_REWRITE_SIZE = 50000000;\n\nconst rewriteTags: Record<string, Record<string, string>> = {\n  a: { href: \"ln_\" },\n  applet: {\n    codebase: \"oe_\",\n    archive: \"oe_\",\n  },\n  area: { href: defmod },\n  audio: { src: \"oe_\" },\n  base: { href: defmod },\n  blockquote: { cite: defmod },\n  body: { background: \"im_\" },\n  button: { formaction: defmod },\n  command: { icon: \"im_\" },\n  del: { cite: defmod },\n  embed: { src: \"oe_\" },\n  iframe: { src: \"if_\" },\n  image: { src: \"im_\", \"xlink:href\": \"im_\", href: \"im_\" },\n  img: {\n    src: \"im_\",\n    srcset: \"im_\",\n  },\n  ins: { cite: defmod },\n  input: {\n    src: \"im_\",\n    formaction: defmod,\n  },\n  form: { action: defmod },\n  frame: { src: \"fr_\" },\n  link: { href: \"oe_\" },\n  meta: { content: \"mt_\" },\n  object: {\n    codebase: \"oe_\",\n    data: \"oe_\",\n  },\n  param: { value: \"oe_\" },\n  q: { cite: defmod },\n  ref: { href: \"oe_\" },\n  script: { src: \"js_\", \"xlink:href\": \"js_\" },\n  source: { src: \"oe_\", srcset: \"oe_\" },\n  video: {\n    src: \"oe_\",\n    poster: \"im_\",\n  },\n};\n\nconst OBJECT_FLASH_DATA_RX = [\n  {\n    match: /youtube.com\\/v\\/([^&]+)[&]/,\n    replace: \"youtube.com/embed/$1?\",\n  },\n];\n\ntype TextNodeRewriteRule = {\n  urlMatch: RegExp;\n  match: RegExp;\n  replace: string;\n};\n\nconst TEXT_NODE_REWRITE_RULES: TextNodeRewriteRule[] = [\n  {\n    urlMatch: /[?&]:loadOrderID=([\\d]+)/,\n    match: /(loadOrderID&(quot;&)?#x[^;]+?;)([\\d]+)/gi,\n    replace: \"$1$U1\",\n  },\n];\n\n// ===========================================================================\nexport class HTMLRewriter {\n  rewriter: Rewriter;\n  rule: TextNodeRewriteRule | null = null;\n  ruleMatch: RegExpMatchArray | null = null;\n  isCharsetUTF8: boolean;\n\n  constructor(rewriter: Rewriter, isCharsetUTF8 = false) {\n    this.rewriter = rewriter;\n    this.rule = null;\n\n    for (const rule of TEXT_NODE_REWRITE_RULES) {\n      const m = this.rewriter.url.match(rule.urlMatch);\n      if (m) {\n        this.ruleMatch = m;\n        this.rule = rule;\n        break;\n      }\n    }\n\n    this.isCharsetUTF8 = isCharsetUTF8;\n  }\n\n  rewriteMetaContent(\n    attrs: Token.Attribute[],\n    attr: Token.Attribute,\n    rewriter: Rewriter,\n  ) {\n    let equiv = this.getAttr(attrs, \"http-equiv\");\n    if (equiv) {\n      equiv = equiv.toLowerCase();\n    }\n\n    if (equiv === \"content-security-policy\") {\n      attr.name = \"_\" + attr.name;\n    } else if (equiv === \"refresh\") {\n      return attr.value.replace(\n        META_REFRESH_REGEX,\n        (m, p1, p2: string, p3) =>\n          p1 + this.rewriteUrl(rewriter, p2, false, \"mt_\") + p3,\n      );\n    } else if (this.getAttr(attrs, \"name\") === \"referrer\") {\n      return \"no-referrer-when-downgrade\";\n    } else if (startsWithAny(attr.value, DATA_RW_PROTOCOLS)) {\n      return this.rewriteUrl(rewriter, attr.value);\n    }\n\n    return attr.value;\n  }\n\n  rewriteSrcSet(value: string, rewriter: Rewriter) {\n    const SRCSET_REGEX = /\\s*(\\S*\\s+[\\d.]+[wx]),|(?:\\s*,(?:\\s+|(?=https?:)))/;\n\n    const rv: string[] = [];\n\n    for (const v of value.split(SRCSET_REGEX)) {\n      if (v) {\n        const parts = v.trim().split(\" \");\n        // @ts-expect-error [TODO] - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.\n        parts[0] = this.rewriteUrl(rewriter, parts[0]);\n        rv.push(parts.join(\" \"));\n      }\n    }\n\n    return rv.join(\", \");\n  }\n\n  rewriteTagAndAttrs(\n    tag: StartTag,\n    attrRules: Record<string, string>,\n    rewriter: Rewriter,\n  ) {\n    const isUrl = (val: string) => {\n      return startsWithAny(val, DATA_RW_PROTOCOLS);\n    };\n    const tagName = tag.tagName;\n\n    // no attribute rewriting for web-component tags, which must contain a '-'\n    if (tagName.indexOf(\"-\") > 0) {\n      return;\n    }\n\n    for (const attr of tag.attrs) {\n      const name = attr.name || \"\";\n      const value = attr.value || \"\";\n\n      // js attrs with javascript:\n      if (value.startsWith(\"javascript:\")) {\n        attr.value =\n          \"javascript:\" +\n          rewriter.rewriteJS(value.slice(\"javascript:\".length), {\n            inline: true,\n          });\n      } else if (name.startsWith(\"on\") && name.slice(2, 3) != \"-\") {\n        // js attrs\n        attr.value = rewriter.rewriteJS(value, { inline: true });\n        // css attrs\n      } else if (name === \"style\") {\n        attr.value = rewriter.rewriteCSS(attr.value);\n      }\n\n      // background attr\n      else if (name === \"background\") {\n        attr.value = this.rewriteUrl(rewriter, value);\n      } else if (\n        name === \"srcset\" ||\n        (name === \"imagesrcset\" && tagName === \"link\")\n      ) {\n        attr.value = this.rewriteSrcSet(value, rewriter);\n      }\n\n      // for now, download attribute doesn't work in Chrome\n      // but disabling triggers default behavior which often does\n      else if (\n        name === \"crossorigin\" ||\n        name === \"integrity\" ||\n        name === \"download\"\n      ) {\n        attr.name = \"_\" + attr.name;\n      } else if (tagName === \"meta\" && name === \"content\") {\n        attr.value = this.rewriteMetaContent(tag.attrs, attr, rewriter);\n      } else if (tagName === \"meta\" && name === \"charset\") {\n        if (value && [\"utf8\", \"utf-8\"].includes(value.toLowerCase())) {\n          this.isCharsetUTF8 = true;\n        }\n      } else if (tagName === \"param\" && isUrl(value)) {\n        attr.value = this.rewriteUrl(rewriter, attr.value);\n      } else if (name.startsWith(\"data-\") && isUrl(value)) {\n        attr.value = this.rewriteUrl(rewriter, attr.value);\n      } else if (tagName === \"base\" && name === \"href\") {\n        try {\n          // rewrite url, keeping relativeness intact\n          attr.value = this.rewriter.updateBaseUrl(attr.value);\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } catch (e) {\n          console.warn(\"Invalid <base>: \" + attr.value);\n        }\n      } else if (tagName === \"script\" && name === \"src\") {\n        const rwType = this.getScriptRWType(tag);\n        const mod = rwType === \"module\" ? \"esm_\" : \"\";\n        const newValue = this.rewriteUrl(rewriter, attr.value, false, mod);\n        if (newValue === attr.value) {\n          tag.attrs.push({ name: \"__wb_orig_src\", value: attr.value });\n          if (\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n            attr.value &&\n            attr.value.startsWith(\"data:text/javascript;base64\")\n          ) {\n            attr.value = this.rewriteJSBase64(attr.value, rewriter);\n          } else {\n            attr.value = this.rewriteUrl(rewriter, attr.value, true, mod);\n          }\n        } else {\n          attr.value = newValue;\n        }\n      } else if (tagName === \"object\" && name === \"data\") {\n        const type = this.getAttr(tag.attrs, \"type\");\n\n        // convert object tag to iframe or img\n        if (type === \"application/pdf\") {\n          attr.name = \"src\";\n          attr.value = this.rewriteUrl(rewriter, attr.value, false, \"if_\");\n          tag.tagName = \"iframe\";\n        } else if (type === \"image/svg+xml\") {\n          attr.name = \"src\";\n          attr.value = this.rewriteUrl(rewriter, attr.value);\n          tag.tagName = \"img\";\n        } else if (type === \"application/x-shockwave-flash\") {\n          for (const rule of OBJECT_FLASH_DATA_RX) {\n            const value = attr.value.replace(rule.match, rule.replace);\n            if (value !== attr.value) {\n              attr.name = \"src\";\n              attr.value = this.rewriteUrl(rewriter, value, false, \"if_\");\n              tag.tagName = \"iframe\";\n              break;\n            }\n          }\n        }\n      } else if (tagName === \"embed\") {\n        const type = this.getAttr(tag.attrs, \"type\");\n        tag.tagName = type?.startsWith(\"image/\") ? \"img\" : \"iframe\";\n      } else if (name === \"target\") {\n        const target = attr.value;\n\n        if (\n          target === \"_blank\" ||\n          target === \"_parent\" ||\n          target === \"_top\" ||\n          target === \"new\"\n        ) {\n          attr.value = REPLAY_TOP_FRAME_NAME;\n        }\n      } else if (attrRules[name] || name === \"href\" || name === \"src\") {\n        attr.value = this.rewriteUrl(\n          rewriter,\n          attr.value,\n          false,\n          attrRules[name],\n        );\n      }\n    }\n  }\n\n  getAttr(attrs: Token.Attribute[], name: string) {\n    for (const attr of attrs) {\n      if (attr.name === name) {\n        return attr.value;\n      }\n    }\n\n    return null;\n  }\n\n  getScriptRWType(tag: StartTag) {\n    const scriptType = this.getAttr(tag.attrs, \"type\");\n\n    if (scriptType === \"module\") {\n      return \"module\";\n    } else if (scriptType === \"application/json\") {\n      return \"json\";\n    } else if (\n      !scriptType ||\n      scriptType.indexOf(\"javascript\") >= 0 ||\n      scriptType.indexOf(\"ecmascript\") >= 0\n    ) {\n      return \"js\";\n    } else if (scriptType.startsWith(\"text/\")) {\n      return \"text\";\n    } else if (scriptType === \"importmap\") {\n      return \"importmap\";\n    } else {\n      return \"\";\n    }\n  }\n\n  async rewrite(response: ArchiveResponse) {\n    if (!response.buffer && !response.reader) {\n      //console.warn(\"Missing response body for: \" + response.url);\n      return response;\n    }\n\n    if (response.expectedLength() > MAX_HTML_REWRITE_SIZE) {\n      console.warn(\n        \"Skipping rewriting, HTML file too big: \" + response.expectedLength(),\n      );\n      return response;\n    }\n\n    const rewriter = this.rewriter;\n\n    const rwStream = new RewritingStream();\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (rwStream as any).tokenizer.preprocessor.bufferWaterline = Infinity;\n\n    let insertAdded = false;\n    let headDone = false;\n    let isTextEmpty = true;\n\n    let context = \"\";\n    let scriptRw = \"\";\n    let replaceTag = \"\";\n\n    const addInsert = () => {\n      if (!insertAdded && rewriter.headInsertFunc) {\n        const headInsert = rewriter.headInsertFunc(rewriter.url);\n        if (headInsert) {\n          rwStream.emitRaw(headInsert);\n        }\n        insertAdded = true;\n      }\n    };\n\n    rwStream.on(\"startTag\", (startTag) => {\n      const tagRules = rewriteTags[startTag.tagName];\n\n      const original = startTag.tagName;\n\n      this.rewriteTagAndAttrs(startTag, tagRules || {}, rewriter);\n\n      if (!insertAdded && ![\"head\", \"html\"].includes(startTag.tagName)) {\n        addInsert();\n      }\n\n      rwStream.emitStartTag(startTag);\n\n      switch (startTag.tagName) {\n        case \"script\": {\n          if (startTag.selfClosing) {\n            break;\n          }\n\n          context = startTag.tagName;\n          isTextEmpty = true;\n          scriptRw = this.getScriptRWType(startTag);\n          break;\n        }\n\n        case \"style\":\n          if (!startTag.selfClosing) {\n            context = startTag.tagName;\n          }\n          break;\n\n        case \"head\":\n          addInsert();\n          break;\n\n        case \"body\":\n          headDone = true;\n          break;\n      }\n\n      if (startTag.tagName !== original) {\n        context = original;\n        replaceTag = startTag.tagName;\n      }\n    });\n\n    rwStream.on(\"endTag\", (endTag) => {\n      if (endTag.tagName === context) {\n        if (replaceTag) {\n          endTag.tagName = replaceTag;\n          replaceTag = \"\";\n        }\n        switch (context) {\n          case \"head\":\n            headDone = true;\n            break;\n\n          case \"script\":\n            if (headDone && !isTextEmpty && scriptRw === \"js\") {\n              rwStream.emitRaw(\";document.close();\");\n            }\n            break;\n        }\n        context = \"\";\n      }\n      rwStream.emitEndTag(endTag);\n    });\n\n    rwStream.on(\"text\", (textToken, raw) => {\n      const text = (() => {\n        if (context === \"script\") {\n          const prefix = rewriter.prefix;\n          const isModule = scriptRw === \"module\";\n\n          isTextEmpty = isTextEmpty && textToken.text.trim().length === 0;\n\n          if (scriptRw === \"js\" || isModule) {\n            return rewriter.rewriteJS(textToken.text, { isModule, prefix });\n          } else if (scriptRw === \"json\") {\n            return rewriter.rewriteJSON(textToken.text, { prefix });\n          } else if (scriptRw === \"importmap\") {\n            return rewriter.rewriteImportmap(textToken.text);\n          } else {\n            return textToken.text;\n          }\n        } else if (context === \"style\") {\n          return rewriter.rewriteCSS(textToken.text);\n        } else {\n          return this.rewriteHTMLText(raw);\n        }\n      })();\n\n      for (let i = 0; i < text.length; i += MAX_STREAM_CHUNK_SIZE) {\n        rwStream.emitRaw(text.slice(i, i + MAX_STREAM_CHUNK_SIZE));\n      }\n    });\n\n    const sourceGen = response.createIter();\n    let hasData = false;\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const htmlrewriter = this;\n\n    response.setReader(\n      new ReadableStream({\n        async start(controller) {\n          rwStream.on(\"data\", (text) => {\n            controller.enqueue(\n              // [TODO]\n              htmlrewriter.isCharsetUTF8\n                ? // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                  encoder.encode(text)\n                : // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                  encodeLatin1(text),\n            );\n          });\n\n          rwStream.on(\"end\", () => {\n            controller.close();\n          });\n\n          for await (const chunk of sourceGen) {\n            if (htmlrewriter.isCharsetUTF8) {\n              rwStream.write(decoder.decode(chunk), \"utf8\");\n            } else {\n              rwStream.write(decodeLatin1(chunk), \"latin1\");\n            }\n            hasData = true;\n          }\n          if (hasData) {\n            addInsert();\n          }\n\n          rwStream.end();\n        },\n      }),\n    );\n\n    return response;\n  }\n\n  rewriteUrl(rewriter: Rewriter, text: string, forceAbs = false, mod = \"\") {\n    // if html charset not utf-8, just convert the url to utf-8 for rewriting\n    if (!this.isCharsetUTF8) {\n      text = decoder.decode(encodeLatin1(text));\n    }\n    const res = rewriter.rewriteUrl(text, forceAbs);\n    return mod && mod !== defmod && mod !== \"ln_\" && mod !== \"mt_\"\n      ? res.replace(defmod + \"/\", mod + \"/\")\n      : res;\n  }\n\n  rewriteHTMLText(text: string) {\n    if (this.rule && this.ruleMatch) {\n      // todo: make more general if additional rules needed\n      // for now, just replace the first match\n      // @ts-expect-error [TODO] - TS2769 - No overload matches this call.\n      const replacer = this.rule.replace.replace(\"$U1\", this.ruleMatch[1]);\n      const newText = text.replace(this.rule.match, replacer);\n      if (text !== newText) {\n        return newText;\n      }\n    }\n    return text;\n  }\n\n  rewriteJSBase64(text: string, rewriter: Rewriter) {\n    const parts = text.split(\",\");\n    // @ts-expect-error [TODO] - TS2769 - No overload matches this call.\n    const content = rewriter.rewriteJS(atob(parts[1]), { isModule: false });\n    parts[1] = btoa(content);\n    return parts.join(\",\");\n  }\n}\n\n// ===========================================================================\nexport class ProxyHTMLRewriter extends HTMLRewriter {\n  override rewriteUrl(\n    rewriter: Rewriter,\n    text: string,\n    forceAbs = false,\n    mod = \"\",\n  ) {\n    if (mod === \"if_\" || mod === \"fr_\" || mod === \"mt_\") {\n      return (rewriter as ProxyRewriter).fullRewriteUrl(text, forceAbs);\n    }\n\n    if (mod === \"ln_\") {\n      // if html charset not utf-8, just convert the url to utf-8 for rewriting\n      if (!this.isCharsetUTF8) {\n        text = decoder.decode(encodeLatin1(text));\n      }\n\n      return rewriter.rewriteUrl(text, forceAbs);\n    }\n\n    // always rewrite if http->https conversion is needed\n    if ((rewriter as ProxyRewriter).httpToHttps) {\n      return rewriter.rewriteUrl(text, forceAbs);\n    }\n\n    return text;\n  }\n\n  override rewriteTagAndAttrs(\n    tag: StartTag,\n    attrRules: Record<string, string>,\n    rewriter: Rewriter,\n  ) {\n    if ((rewriter as ProxyRewriter).httpToHttps) {\n      return super.rewriteTagAndAttrs(tag, attrRules, rewriter);\n    }\n\n    const tagName = tag.tagName;\n\n    // no attribute rewriting for web-component tags, which must contain a '-'\n    if (tagName.indexOf(\"-\") > 0) {\n      return;\n    }\n\n    for (const attr of tag.attrs) {\n      const name = attr.name || \"\";\n      const value = attr.value || \"\";\n\n      if (tagName === \"meta\" && name === \"content\") {\n        attr.value = this.rewriteMetaContent(tag.attrs, attr, rewriter);\n      } else if (attrRules[name] || name === \"href\" || name === \"src\") {\n        attr.value = this.rewriteUrl(rewriter, value, false, attrRules[name]);\n      }\n    }\n  }\n}\n"]}