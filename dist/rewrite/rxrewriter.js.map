{"version":3,"file":"rxrewriter.js","sourceRoot":"","sources":["../../src/rewrite/rxrewriter.ts"],"names":[],"mappings":"AAOA,8EAA8E;AAC9E,MAAM,OAAO,UAAU;IACrB,KAAK,CAAgB;IACrB,EAAE,GAAkB,IAAI,CAAC;IAEzB,YAAY,KAAc;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC;QAC3B,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;IACH,CAAC;IAED,YAAY;QACV,IAAI,MAAM,GAAG,EAAE,CAAC;QAEhB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAChB,OAAO;QACT,CAAC;QAED,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YAC9B,IAAI,MAAM,EAAE,CAAC;gBACX,MAAM,IAAI,GAAG,CAAC;YAChB,CAAC;YACD,MAAM,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC;QAClC,CAAC;QAED,MAAM,QAAQ,GAAG,MAAM,MAAM,GAAG,CAAC;QAEjC,IAAI,CAAC,EAAE,GAAG,IAAI,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,SAAS;IACT,8DAA8D;IAC9D,SAAS,CAAC,KAAa,EAAE,MAAa,EAAE,IAAyB;QAC/D,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACzC,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5C,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,IAAI,EAAE,CAAC;gBACV,SAAS;YACX,CAAC;YAED,qEAAqE;YACrE,SAAS;YACT,iEAAiE;YACjE,MAAM,MAAM,GAAG,IAAI,CAAC,KAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;YACrE,IAAI,MAAM,EAAE,CAAC;gBACX,OAAO,MAAM,CAAC;YAChB,CAAC;QACH,CAAC;QAED,OAAO,CAAC,IAAI,CACV,yBAAyB,KAAK,2CAA2C,CAC1E,CAAC;QACF,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS;IACT,8DAA8D;IAC9D,OAAO,CAAC,IAAY,EAAE,IAAyB;QAC7C,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACb,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,GAAG,MAAM,EAAE,EAAE,CAChD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CACpC,CAAC;IACJ,CAAC;CACF","sourcesContent":["export type Rule = [\n  RegExp,\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (x: string, opts: Record<string, any>, offset: number, str: string) => string,\n];\n\n// ===========================================================================\nexport class RxRewriter {\n  rules: Rule[] | null;\n  rx: RegExp | null = null;\n\n  constructor(rules?: Rule[]) {\n    this.rules = rules || null;\n    if (this.rules) {\n      this.compileRules();\n    }\n  }\n\n  compileRules() {\n    let rxBuff = \"\";\n\n    if (!this.rules) {\n      return;\n    }\n\n    for (const rule of this.rules) {\n      if (rxBuff) {\n        rxBuff += \"|\";\n      }\n      rxBuff += `(${rule[0].source})`;\n    }\n\n    const rxString = `(?:${rxBuff})`;\n\n    this.rx = new RegExp(rxString, \"gm\");\n  }\n\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  doReplace(match: string, params: any[], opts: Record<string, any>) {\n    const offset = params[params.length - 2];\n    const str = params[params.length - 1];\n\n    for (let i = 0; i < this.rules!.length; i++) {\n      const curr = params[i];\n      if (!curr) {\n        continue;\n      }\n\n      // @ts-expect-error [TODO] - TS2532 - Object is possibly 'undefined'.\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      const result = this.rules![i][1].call(this, curr, opts, offset, str);\n      if (result) {\n        return result;\n      }\n    }\n\n    console.warn(\n      `rx no match found for ${match} - rx rule contains extra matching group?`,\n    );\n    return match;\n  }\n\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  rewrite(text: string, opts: Record<string, any>) {\n    if (!this.rx) {\n      return text;\n    }\n\n    return text.replace(this.rx, (match, ...params) =>\n      this.doReplace(match, params, opts),\n    );\n  }\n}\n"]}