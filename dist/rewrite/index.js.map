{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/rewrite/index.ts"],"names":[],"mappings":"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","sourcesContent":["import LinkHeader from \"http-link-header\";\n\nimport { isAjaxRequest } from \"../utils\";\n\nimport { decodeResponse } from \"./decoder\";\n\nimport { rewriteDASH, rewriteHLS } from \"./rewriteVideo\";\n\nimport {\n  DomainSpecificRuleSet,\n  hasRangeAsQuery,\n  HTML_ONLY_RULES,\n} from \"./dsruleset\";\n\nimport { RxRewriter } from \"./rxrewriter\";\nimport { JSRewriter } from \"./jsrewriter\";\n\nimport { HTMLRewriter, ProxyHTMLRewriter } from \"./html\";\nimport { type ArchiveRequest } from \"../request\";\nimport { type ArchiveResponse } from \"../response\";\n\n// keep for backwards compatibility with RWP and AWP\nexport { ArchiveResponse } from \"../response\";\n\nexport { rewriteDASH, rewriteHLS } from \"./rewriteVideo\";\n\n// ===========================================================================\nconst STYLE_REGEX = /(url\\s*\\(\\s*[\\\\\"']*)([^)'\"]+)([\\\\\"']*\\s*\\))/gi;\n\nconst IMPORT_REGEX = /(@import\\s*[\\\\\"']*)([^)'\";]+)([\\\\\"']*\\s*;?)/gi;\n\nconst NO_WOMBAT_REGEX = /WB_wombat_/g;\n\n//const JSONP_REGEX = /^(?:[ \\t]*(?:(?:\\/\\*[^\\*]*\\*\\/)|(?:\\/\\/[^\\n]+[\\n])))*[ \\t]*(\\w+)\\(\\{/m;\nconst JSONP_REGEX =\n  /^(?:\\s*(?:(?:\\/\\*[^*]*\\*\\/)|(?:\\/\\/[^\\n]+[\\n])))*\\s*([\\w.]+)\\([{[]/;\n\nconst JSONP_CALLBACK_REGEX = /[?].*(?:callback|jsonp)=([^&]+)/i;\n\n// ===========================================================================\n// JS Rewriters\nexport const jsRules = new DomainSpecificRuleSet(JSRewriter);\nexport const baseRules = new DomainSpecificRuleSet(RxRewriter);\n\n// HTML Rx Rewriter (only used externally for now)\nexport const htmlRules = new DomainSpecificRuleSet(RxRewriter, HTML_ONLY_RULES);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype InsertFunc = (url: string, opts?: any) => string;\n\ntype RewriterOpts = {\n  baseUrl: string;\n  prefix: string;\n  responseUrl?: string;\n  workerInsertFunc?: InsertFunc | null;\n  headInsertFunc?: InsertFunc | null;\n  urlRewrite?: boolean;\n  contentRewrite?: boolean;\n  decode?: boolean;\n  useBaseRules?: boolean;\n};\n\nexport function getCustomRewriter(url: string, isHTML: boolean) {\n  const rules = isHTML ? htmlRules : baseRules;\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return rules.getCustomRewriter(url);\n}\n\n// ===========================================================================\nexport class Rewriter {\n  urlRewrite: boolean;\n  contentRewrite: boolean;\n\n  baseUrl: string;\n\n  dsRules: DomainSpecificRuleSet;\n\n  decode: boolean;\n\n  prefix = \"\";\n  originPrefix = \"\";\n  relPrefix = \"\";\n  schemeRelPrefix = \"\";\n  scheme: string;\n  url: string;\n  responseUrl: string;\n  isCharsetUTF8: boolean;\n\n  headInsertFunc: InsertFunc | null;\n  workerInsertFunc: InsertFunc | null;\n\n  _jsonpCallback: string | boolean | null;\n\n  constructor({\n    baseUrl,\n    prefix,\n    responseUrl = undefined,\n    workerInsertFunc = null,\n    headInsertFunc = null,\n    urlRewrite = true,\n    contentRewrite = true,\n    decode = true,\n    useBaseRules = false,\n  }: RewriterOpts) {\n    this.urlRewrite = urlRewrite;\n    this.contentRewrite = contentRewrite;\n    this.dsRules = urlRewrite && !useBaseRules ? jsRules : baseRules;\n    this.decode = decode;\n\n    this.prefix = prefix || \"\";\n    if (this.prefix && urlRewrite) {\n      const parsed = new URL(this.prefix);\n      this.originPrefix = parsed.origin;\n      this.relPrefix = parsed.pathname;\n      this.schemeRelPrefix = this.prefix.slice(parsed.protocol.length);\n    }\n\n    // response url always has a scheme, should be specified if baseUrl may not..\n    const parsed = new URL(responseUrl || baseUrl);\n    this.scheme = parsed.protocol;\n\n    if (baseUrl.startsWith(\"//\")) {\n      baseUrl = this.scheme + baseUrl;\n    }\n\n    this.url = this.baseUrl = baseUrl;\n\n    this.headInsertFunc = headInsertFunc;\n    this.workerInsertFunc = workerInsertFunc;\n    this.responseUrl = responseUrl || baseUrl;\n    this.isCharsetUTF8 = false;\n\n    this._jsonpCallback = null;\n  }\n\n  getRewriteMode(\n    request: ArchiveRequest,\n    response: ArchiveResponse,\n    url = \"\",\n    mime = \"\",\n  ) {\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (!mime && response) {\n      mime = response.headers.get(\"Content-Type\") || \"\";\n      const parts = mime.split(\";\");\n      // @ts-expect-error [TODO] - TS2322 - Type 'string | undefined' is not assignable to type 'string'.\n      mime = parts[0];\n      if (parts.length > 1) {\n        this.isCharsetUTF8 =\n          // @ts-expect-error [TODO] - TS2532 - Object is possibly 'undefined'.\n          parts[1]\n            .trim()\n            .toLowerCase()\n            .replace(\"charset=\", \"\")\n            .replace(\"-\", \"\") === \"utf8\";\n      }\n    }\n    mime = mime.toLowerCase();\n    if (request.mod === \"esm_\") {\n      this.isCharsetUTF8 = true;\n    }\n\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (request) {\n      switch (request.destination) {\n        case \"style\":\n          return \"css\";\n\n        case \"script\":\n          return this.getScriptRewriteMode(mime, url, \"js\");\n\n        case \"worker\":\n          return \"js-worker\";\n      }\n    }\n\n    switch (mime) {\n      case \"text/html\":\n        if (\n          !request.destination &&\n          request.headers.get(\"Accept\") === \"application/json\"\n        ) {\n          return \"json\";\n        }\n        return \"html\";\n\n      case \"text/css\":\n        return \"css\";\n\n      case \"application/x-mpegurl\":\n      case \"application/vnd.apple.mpegurl\":\n        return \"hls\";\n\n      case \"application/dash+xml\":\n        return \"dash\";\n\n      case \"\":\n        if (this.isGuessHtml(request, response)) {\n          return \"html\";\n        }\n      // fallthrough\n\n      default:\n        return this.getScriptRewriteMode(mime, url);\n    }\n  }\n\n  isGuessHtml(request: ArchiveRequest, response: ArchiveResponse) {\n    if (\n      request.destination &&\n      request.destination !== \"document\" &&\n      request.destination !== \"iframe\"\n    ) {\n      return false;\n    }\n\n    if (response.buffer) {\n      try {\n        const start = new TextDecoder().decode(response.buffer.slice(0, 1024));\n        if (/<\\s*html/i.exec(start)) {\n          return true;\n        }\n      } catch (_) {\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  getScriptRewriteMode(mime: string, url: string, defaultType = \"\") {\n    switch (mime) {\n      case \"text/javascript\":\n      case \"application/javascript\":\n      case \"application/x-javascript\":\n        if (this.parseJSONPCallback(url)) {\n          return \"jsonp\";\n        }\n        return url.endsWith(\".json\") ? \"json\" : \"js\";\n\n      case \"application/json\":\n        return \"json\";\n\n      default:\n        return defaultType;\n    }\n  }\n\n  async rewrite(\n    response: ArchiveResponse,\n    request: ArchiveRequest,\n  ): Promise<ArchiveResponse> {\n    const rewriteMode = this.contentRewrite\n      ? this.getRewriteMode(request, response, this.baseUrl)\n      : null;\n\n    const isAjax = isAjaxRequest(request);\n\n    const urlRewrite = this.urlRewrite && !isAjax;\n\n    const headers = this.rewriteHeaders(\n      response.headers,\n      this.urlRewrite,\n      !!rewriteMode,\n      isAjax,\n    );\n\n    const encoding = response.headers.get(\"content-encoding\");\n    const te = response.headers.get(\"transfer-encoding\");\n\n    response.headers = headers;\n\n    // attempt to decode only if set\n    // eg. data may already be decoded for many stores\n    if (this.decode && (encoding || te)) {\n      response = await decodeResponse(\n        response,\n        encoding,\n        te,\n        rewriteMode === null,\n      );\n    }\n\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const opts: any = {\n      response,\n      prefix: this.prefix,\n      baseUrl: this.baseUrl,\n    };\n\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let rwFunc: ((x: string, opts: any) => string) | null = null;\n\n    switch (rewriteMode) {\n      case \"html\":\n        if (urlRewrite) {\n          return await this.rewriteHtml(response);\n        }\n        break;\n\n      case \"css\":\n        if (this.urlRewrite) {\n          rwFunc = this.rewriteCSS;\n        }\n        break;\n\n      case \"js\":\n        rwFunc = this.rewriteJS;\n        if (request.mod === \"esm_\") {\n          opts.isModule = true;\n        }\n        break;\n\n      case \"json\":\n        rwFunc = this.rewriteJSON;\n        break;\n\n      case \"js-worker\":\n        if (request.mod === \"wkrm_\") {\n          opts.isModule = true;\n        }\n        rwFunc = this.workerInsertFunc;\n        break;\n\n      case \"jsonp\":\n        rwFunc = this.rewriteJSONP;\n        break;\n\n      case \"hls\":\n        rwFunc = rewriteHLS;\n        break;\n\n      case \"dash\":\n        rwFunc = rewriteDASH;\n        break;\n    }\n\n    if (urlRewrite) {\n      opts.rewriteUrl = (url: string) => this.rewriteUrl(url);\n    }\n\n    if (rwFunc) {\n      // [TODO]\n      // eslint-disable-next-line prefer-const\n      let { bomFound, text } = await response.getText(this.isCharsetUTF8);\n      text = rwFunc.call(this, text, opts);\n      // if BOM found and not already UTF-8, add charset explicitly\n      if (bomFound && !this.isCharsetUTF8) {\n        let mime = headers.get(\"Content-Type\") || \"\";\n        const parts = mime.split(\";\");\n        // @ts-expect-error [TODO] - TS2322 - Type 'string | undefined' is not assignable to type 'string'.\n        mime = parts[0];\n        if (mime) {\n          headers.set(\"Content-Type\", mime + \"; charset=utf-8\");\n        }\n        this.isCharsetUTF8 = true;\n      }\n      response.setText(text, this.isCharsetUTF8);\n    } else {\n      // check range-as-query\n      const result = hasRangeAsQuery(request.url);\n      if (result) {\n        const url = new URL(request.url);\n        const start = parseInt(url.searchParams.get(result.start) || \"\");\n        const end = parseInt(url.searchParams.get(result.end) || \"\");\n        if (!isNaN(start) && !isNaN(end)) {\n          const existingLen = Number(response.headers.get(\"Content-Length\"));\n          const newLen = end - start + 1;\n          if (\n            existingLen !== newLen &&\n            (isNaN(existingLen) || existingLen > newLen) &&\n            response.setRawRange(start, end)\n          ) {\n            response.headers.set(\"Content-Length\", String(newLen));\n          }\n        }\n      }\n    }\n\n    return response;\n  }\n\n  updateBaseUrl(url: string) {\n    // if already rewritten, unrewrite first\n    if (this.originPrefix && url.startsWith(this.originPrefix)) {\n      const inx = url.indexOf(\"/http\");\n      if (inx >= 0) {\n        url = url.slice(inx + 1);\n      }\n    }\n\n    // set internal base to full url\n    this.baseUrl = new URL(url, this.baseUrl).href;\n\n    // not an absolute url, ensure it has slash\n    if (url && this.baseUrl != url) {\n      try {\n        url = new URL(url).href;\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      } catch (e) {\n        if (url.startsWith(\"//\")) {\n          url = new URL(\"https:\" + url).href;\n          url = url.slice(\"https:\".length);\n        }\n      }\n    }\n\n    // return rewritten base url, but keeping scheme-relativeness\n    return this.rewriteUrl(url);\n  }\n\n  isRewritableUrl(url: string) {\n    const NO_REWRITE_URI_PREFIX = [\n      \"#\",\n      \"javascript:\",\n      \"data:\",\n      \"mailto:\",\n      \"about:\",\n      \"file:\",\n      \"blob:\",\n      \"{\",\n    ];\n\n    for (const prefix of NO_REWRITE_URI_PREFIX) {\n      if (url.startsWith(prefix)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  rewriteUrl(url: string, forceAbs = false) {\n    if (!this.urlRewrite) {\n      return url;\n    }\n\n    const origUrl = url;\n\n    url = url.trim();\n    if (url.startsWith(\"\\\\\")) {\n      url = url.replace(/\\\\(?![//])/g, \"/\");\n    }\n\n    if (\n      !url ||\n      !this.isRewritableUrl(url) ||\n      url.startsWith(this.prefix) ||\n      url.startsWith(this.relPrefix)\n    ) {\n      return origUrl;\n    }\n\n    if (\n      url.startsWith(\"http:\") ||\n      url.startsWith(\"https:\") ||\n      url.startsWith(\"https\\\\3a/\")\n    ) {\n      return this.prefix + url;\n    }\n\n    if (url.startsWith(\"//\") || url.startsWith(\"\\\\/\\\\/\")) {\n      return this.schemeRelPrefix + url;\n    }\n\n    if (url.startsWith(\"/\")) {\n      url = new URL(url, this.baseUrl).href;\n      return this.relPrefix + url;\n    } else if (forceAbs || url.indexOf(\"../\") >= 0) {\n      url = new URL(url, this.baseUrl).href;\n      return this.prefix + url;\n    } else {\n      return origUrl;\n    }\n  }\n\n  // HTML\n  async rewriteHtml(response: ArchiveResponse): Promise<ArchiveResponse> {\n    const htmlRW = new HTMLRewriter(this, this.isCharsetUTF8);\n    return htmlRW.rewrite(response);\n  }\n\n  // CSS\n  rewriteCSS(text: string) {\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const rewriter = this;\n\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function cssStyleReplacer(match: any, n1: string, n2: string, n3: string) {\n      n2 = n2.trim();\n      return n1 + rewriter.rewriteUrl(n2) + n3;\n    }\n\n    return text\n      .replace(STYLE_REGEX, cssStyleReplacer)\n      .replace(IMPORT_REGEX, cssStyleReplacer)\n      .replace(NO_WOMBAT_REGEX, \"\");\n  }\n\n  // JS\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  rewriteJS(text: string, opts: Record<string, any>): string {\n    const noUrlProxyRewrite =\n      // @ts-expect-error [TODO] - TS4111 - Property 'rewriteUrl' comes from an index signature, so it must be accessed with ['rewriteUrl']. | TS4111 - Property 'isModule' comes from an index signature, so it must be accessed with ['isModule']. | TS4111 - Property 'inline' comes from an index signature, so it must be accessed with ['inline'].\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      opts && !opts.rewriteUrl && opts.isModule === undefined && !opts.inline;\n    const dsRules = noUrlProxyRewrite ? baseRules : this.dsRules;\n    const dsRewriter = dsRules.getRewriter(this.baseUrl);\n\n    // optimize: if default rewriter and not rewriting urls, skip\n    if (dsRewriter === dsRules.defaultRewriter && noUrlProxyRewrite) {\n      return text;\n    }\n\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return dsRewriter.rewrite(text, opts);\n  }\n\n  // JSON\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  rewriteJSON(text: string, opts: Record<string, any>): string {\n    text = this.rewriteJSONP(text);\n\n    const dsRewriter = baseRules.getRewriter(this.baseUrl);\n\n    if (dsRewriter !== baseRules.defaultRewriter) {\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return dsRewriter.rewrite(text, opts);\n    }\n\n    return text;\n  }\n\n  // Importmap\n  rewriteImportmap(text: string) {\n    type ImportMap = {\n      imports?: Record<string, string>;\n      scopes?: Record<string, Record<string, string>>;\n    };\n\n    const rewriteESM = (url: string) => {\n      return this.rewriteUrl(url).replace(\"mp_/\", \"esm_/\");\n    };\n\n    try {\n      const root = JSON.parse(text) as ImportMap;\n\n      const imports: Record<string, string> = {};\n      const output: ImportMap = { imports };\n\n      for (const [key, value] of Object.entries(root.imports || {})) {\n        imports[rewriteESM(key)] = rewriteESM(value);\n      }\n\n      if (root.scopes) {\n        const scopes: Record<string, Record<string, string>> = {};\n        for (const [scopeKey, scopeValue] of Object.entries(root.scopes)) {\n          const newScope: Record<string, string> = {};\n          for (const [key, value] of Object.entries(scopeValue)) {\n            newScope[rewriteESM(key)] = rewriteESM(value);\n          }\n          scopes[rewriteESM(scopeKey)] = newScope;\n        }\n        output.scopes = scopes;\n      }\n\n      return JSON.stringify(output, null, 2);\n    } catch (e) {\n      console.warn(\"Error parsing importmap\", e);\n      return text;\n    }\n  }\n\n  parseJSONPCallback(url: string) {\n    const callback = url.match(JSONP_CALLBACK_REGEX);\n    if (!callback || callback[1] === \"?\") {\n      this._jsonpCallback = false;\n      return false;\n    }\n\n    // @ts-expect-error [TODO] - TS2322 - Type 'string | undefined' is not assignable to type 'string | boolean | null'.\n    this._jsonpCallback = callback[1];\n    return true;\n  }\n\n  // JSONP\n  rewriteJSONP(text: string) {\n    const jsonM = text.match(JSONP_REGEX);\n    if (!jsonM) {\n      return text;\n    }\n\n    // if null, hasn't been parsed yet\n    if (this._jsonpCallback === null) {\n      this.parseJSONPCallback(this.baseUrl);\n    }\n\n    if (this._jsonpCallback === false) {\n      return text;\n    }\n\n    return (\n      // @ts-expect-error [TODO] - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'. | TS2532 - Object is possibly 'undefined'.\n      this._jsonpCallback + text.slice(text.indexOf(jsonM[1]) + jsonM[1].length)\n    );\n  }\n\n  //Headers\n  rewriteHeaders(\n    headers: Headers,\n    urlRewrite: boolean,\n    contentRewrite: boolean,\n    isAjax: boolean,\n  ) {\n    const headerRules: Record<string, string> = {\n      \"access-control-allow-origin\": \"prefix-if-url-rewrite\",\n      \"access-control-allow-credentials\": \"prefix-if-url-rewrite\",\n      \"access-control-expose-headers\": \"prefix-if-url-rewrite\",\n      \"access-control-max-age\": \"prefix-if-url-rewrite\",\n      \"access-control-allow-methods\": \"prefix-if-url-rewrite\",\n      \"access-control-allow-headers\": \"prefix-if-url-rewrite\",\n\n      \"accept-patch\": \"keep\",\n      \"accept-ranges\": \"keep\",\n\n      age: \"prefix\",\n\n      allow: \"keep\",\n\n      \"alt-svc\": \"prefix\",\n      \"cache-control\": \"prefix\",\n\n      connection: \"prefix\",\n\n      \"content-base\": \"url-rewrite\",\n      \"content-disposition\": \"keep\",\n      \"content-encoding\": \"prefix-if-content-rewrite\",\n      \"content-language\": \"keep\",\n      \"content-length\": \"content-length\",\n      \"content-location\": \"url-rewrite\",\n      \"content-md5\": \"prefix\",\n      \"content-range\": \"keep\",\n      \"content-security-policy\": \"prefix\",\n      \"content-security-policy-report-only\": \"prefix\",\n      \"content-type\": \"keep\",\n\n      date: \"keep\",\n\n      etag: \"prefix\",\n      expires: \"prefix\",\n\n      \"last-modified\": \"prefix\",\n      link: \"link\",\n      location: \"url-rewrite\",\n\n      p3p: \"prefix\",\n      pragma: \"prefix\",\n\n      \"proxy-authenticate\": \"keep\",\n\n      \"public-key-pins\": \"prefix\",\n      \"referrer-policy\": \"prefix\",\n      \"retry-after\": \"prefix\",\n      server: \"prefix\",\n\n      \"set-cookie\": \"cookie\",\n\n      status: \"prefix\",\n\n      \"strict-transport-security\": \"prefix\",\n\n      trailer: \"prefix\",\n      \"transfer-encoding\": \"transfer-encoding\",\n      tk: \"prefix\",\n\n      upgrade: \"prefix\",\n      \"upgrade-insecure-requests\": \"prefix\",\n\n      vary: \"prefix\",\n\n      via: \"prefix\",\n\n      warning: \"prefix\",\n\n      \"www-authenticate\": \"keep\",\n\n      \"x-frame-options\": \"prefix\",\n      \"x-xss-protection\": \"prefix\",\n\n      // this header may cause a crash in some version of Chrome if not rewritten\n      \"origin-agent-cluster\": \"prefix\",\n    };\n\n    const headerPrefix = \"X-Archive-Orig-\";\n\n    const new_headers = new Headers();\n\n    // [TODO]\n    // eslint-disable-next-line prefer-const\n    for (let [key, value] of headers.entries()) {\n      const rule = headerRules[key];\n      switch (rule) {\n        case \"keep\":\n          new_headers.append(key, value);\n          break;\n\n        case \"url-rewrite\":\n          if (urlRewrite) {\n            // if location and redirect just to change scheme of the responseUrl\n            if (key === \"location\" && this.url !== this.responseUrl) {\n              const otherScheme = this.scheme === \"http:\" ? \"https:\" : \"http:\";\n              const responseUrlOtherScheme =\n                otherScheme + this.responseUrl.slice(this.scheme.length);\n              if (value === responseUrlOtherScheme) {\n                value = otherScheme + this.url.slice(this.url.indexOf(\"//\"));\n              }\n            }\n\n            new_headers.append(key, this.rewriteUrl(value));\n          } else {\n            new_headers.append(key, value);\n          }\n          break;\n\n        case \"prefix-if-content-rewrite\":\n          if (contentRewrite) {\n            new_headers.append(headerPrefix + key, value);\n          } else {\n            new_headers.append(key, value);\n          }\n          break;\n\n        case \"prefix-if-url-rewrite\":\n          if (urlRewrite) {\n            new_headers.append(headerPrefix + key, value);\n          } else {\n            new_headers.append(key, value);\n          }\n          break;\n\n        case \"content-length\":\n          if (value == \"0\") {\n            new_headers.append(key, value);\n            continue;\n          }\n\n          if (contentRewrite) {\n            try {\n              if (parseInt(value) >= 0) {\n                new_headers.append(key, value);\n                continue;\n              }\n              // [TODO]\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            } catch (e) {\n              // ignore if content-length is not parsable as number\n            }\n          }\n\n          new_headers.append(key, value);\n          break;\n\n        case \"transfer-encoding\":\n          //todo: mark as needing decoding?\n          new_headers.append(headerPrefix + key, value);\n          break;\n\n        case \"prefix\":\n          new_headers.append(headerPrefix + key, value);\n          break;\n\n        case \"cookie\":\n          //todo\n          new_headers.append(key, value);\n          break;\n\n        case \"link\":\n          if (urlRewrite && !isAjax) {\n            new_headers.append(key, this.rewriteLinkHeader(value));\n          } else {\n            new_headers.append(key, value);\n          }\n          break;\n\n        default:\n          new_headers.append(key, value);\n      }\n    }\n\n    return new_headers;\n  }\n\n  rewriteLinkHeader(value: string) {\n    try {\n      const parsed = LinkHeader.parse(value);\n\n      for (const entry of parsed.refs) {\n        if (entry.uri) {\n          entry.uri = this.rewriteUrl(entry.uri);\n        }\n      }\n\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-base-to-string\n      return parsed.toString();\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (e) {\n      console.warn(\"Error parsing link header: \" + value);\n      return value;\n    }\n  }\n}\n\n// ===========================================================================\nexport class ProxyRewriter extends Rewriter {\n  proxyOrigin: string;\n  proxyHost: string;\n\n  localOrigin: string;\n\n  proxyTLD: string;\n  localTLD: string;\n\n  localScheme: string;\n\n  httpToHttps: boolean;\n\n  constructor(opts: RewriterOpts, request: ArchiveRequest) {\n    super(opts);\n    this.proxyOrigin = request.proxyOrigin!;\n    this.localOrigin = request.localOrigin!;\n\n    this.proxyTLD = request.proxyTLD || \"\";\n    this.localTLD = request.localTLD || \"\";\n\n    const proxy = new URL(this.proxyOrigin);\n    this.proxyHost = proxy.host;\n\n    const local = new URL(this.localOrigin);\n\n    this.localScheme = local.protocol;\n    this.httpToHttps = request.httpToHttpsNeeded;\n  }\n\n  override rewriteUrl(urlStr: string): string {\n    if (urlStr.startsWith(this.proxyOrigin)) {\n      return this.localOrigin + urlStr.slice(this.proxyOrigin.length);\n    }\n\n    if (this.proxyTLD && this.localTLD && urlStr.indexOf(this.proxyTLD) > 0) {\n      const url = new URL(urlStr);\n      if (url.host.endsWith(this.proxyTLD)) {\n        const host =\n          url.host.slice(0, -this.proxyTLD.length).replace(\".\", \"-\") +\n          this.localTLD;\n        const newUrl =\n          this.localScheme + \"//\" + host + url.href.slice(url.origin.length);\n        return newUrl;\n      }\n    }\n\n    if (this.httpToHttps) {\n      return urlStr.replace(\"http:\", \"https:\");\n    }\n\n    return urlStr;\n  }\n\n  fullRewriteUrl(urlStr: string, forceAbs = false) {\n    // if local origin, use that still\n    if (urlStr.startsWith(this.proxyOrigin)) {\n      return this.localOrigin + urlStr.slice(this.proxyOrigin.length);\n    }\n\n    if (urlStr.startsWith(\"//\" + this.proxyHost)) {\n      return this.localOrigin + urlStr.slice(this.proxyHost.length + 2);\n    }\n\n    // only rewrite absolute URLs!\n    if (\n      urlStr.startsWith(\"https://\") ||\n      urlStr.startsWith(\"http://\") ||\n      urlStr.startsWith(\"//\")\n    ) {\n      return super.rewriteUrl(urlStr, forceAbs);\n    }\n\n    return urlStr;\n  }\n\n  override async rewriteHtml(\n    response: ArchiveResponse,\n  ): Promise<ArchiveResponse> {\n    const htmlRW = new ProxyHTMLRewriter(this, this.isCharsetUTF8);\n    return htmlRW.rewrite(response);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  override rewriteJS(text: string, _: Record<string, any>): string {\n    return text;\n  }\n\n  override rewriteCSS(text: string): string {\n    if (this.httpToHttps) {\n      return super.rewriteCSS(text);\n    }\n    return text;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  override rewriteJSON(text: string, _: Record<string, any>): string {\n    return text;\n  }\n\n  override rewriteImportmap(text: string) {\n    return text;\n  }\n\n  override updateBaseUrl(url: string): string {\n    return url;\n  }\n}\n"]}