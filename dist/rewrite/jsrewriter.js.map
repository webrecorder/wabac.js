{"version":3,"file":"jsrewriter.js","sourceRoot":"","sources":["../../src/rewrite/jsrewriter.ts"],"names":[],"mappings":"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","sourcesContent":["import { type Rule, RxRewriter } from \"./rxrewriter\";\nimport * as acorn from \"acorn\";\n\nconst IMPORT_RX = /^\\s*?import\\s*?[{\"'*]/;\nconst EXPORT_RX = /^\\s*?export\\s*?({([\\s\\w,$\\n]+?)}[\\s;]*|default|class)\\s+/m;\n\nconst IMPORT_MATCH_RX =\n  /^\\s*?import(?:['\"\\s]*(?:[\\w*${}\\s,]+from\\s*)?['\"\\s]?['\"\\s])(?:.*?)['\"\\s]/;\n\nconst IMPORT_HTTP_RX =\n  /(import(?:['\"\\s]*(?:[\\w*${}\\s,]+from\\s*)?['\"\\s]?['\"\\s]))((?:https?|[./]).*?)(['\"\\s])/;\n\nconst GLOBAL_OVERRIDES = [\n  \"window\",\n  \"globalThis\",\n  \"self\",\n  \"document\",\n  \"location\",\n  \"top\",\n  \"parent\",\n  \"frames\",\n  \"opener\",\n];\n\nconst GLOBALS_CONCAT_STR = GLOBAL_OVERRIDES.map(\n  (x) => `(?:^|[^$.])\\\\b${x}\\\\b(?:$|[^$])`,\n).join(\"|\");\n\nconst GLOBALS_RX = new RegExp(`(${GLOBALS_CONCAT_STR})`);\n\n// ===========================================================================\nconst createJSRules: () => Rule[] = () => {\n  const thisRw = \"_____WB$wombat$check$this$function_____(this)\";\n\n  const checkLoc =\n    \"((self.__WB_check_loc && self.__WB_check_loc(location, arguments)) || {}).href = \";\n\n  const evalStr =\n    \"WB_wombat_runEval2((_______eval_arg, isGlobal) => { var ge = eval; return isGlobal ? ge(_______eval_arg) : eval(_______eval_arg); }).eval(this, (function() { return arguments })(),\";\n\n  function isInString(str: string, offset: number) {\n    // partial detection when inside a string,\n    // check if nearest \" are actually \\\"\n    // detects a subset of matches inside longer strings\n    let inx = str.lastIndexOf('\"', offset);\n    if (inx < 0) {\n      inx = str.indexOf('\"', offset);\n    }\n    if (inx > 0 && str[inx - 1] === \"\\\\\") {\n      // last \" was a \\\", so likely inside string, don't rewrite\n      return true;\n    }\n    return false;\n  }\n\n  function addPrefix(prefix: string) {\n    return (x: string) => prefix + x;\n  }\n\n  function replacePrefixFrom(prefix: string, match: string) {\n    return (x: string) => {\n      const start = x.indexOf(match);\n      if (start === 0) {\n        return prefix;\n      } else {\n        return x.slice(0, start) + prefix;\n      }\n    };\n  }\n\n  function addSuffix(suffix: string) {\n    return (\n      x: string,\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      _opts: Record<string, any>,\n      offset: number,\n      str: string,\n    ) => {\n      if (offset > 0) {\n        const prev = str[offset - 1];\n        if (prev === \".\" || prev === \"$\") {\n          return x;\n        }\n      }\n      return x + suffix;\n    };\n  }\n\n  function replaceThis() {\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (x: string, _opts: any, offset: number, fullString: string) => {\n      if (isInString(fullString, offset)) {\n        return x;\n      }\n      return x.replace(\"this\", thisRw);\n    };\n  }\n\n  function replace(src: string, target: string) {\n    return (x: string) => x.replace(src, target);\n  }\n\n  function replaceThisProp() {\n    return (\n      x: string,\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      _opts: Record<string, any>,\n      offset: number,\n      str: string,\n    ) => {\n      const firstChar = str[offset];\n      if (firstChar === \"\\n\") {\n        return x.replace(\"this\", \";\" + thisRw);\n      } else if (firstChar !== \".\" && firstChar !== \"$\") {\n        return x.replace(\"this\", thisRw);\n      } else {\n        return x;\n      }\n    };\n  }\n\n  function replaceImport(src: string, target: string) {\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (x: string, opts: Record<string, any>) => {\n      let res = x.replace(src, target);\n      // if not module, add empty string, otherwise, import.meta.url\n      // @ts-expect-error [TODO] - TS4111 - Property 'isModule' comes from an index signature, so it must be accessed with ['isModule'].\n      res += opts.isModule ? \"import.meta.url, \" : \"null, \";\n      return res;\n    };\n  }\n\n  return [\n    // rewriting 'eval(...)' - invocation\n    [/(?:^|\\s)\\beval\\s*\\(/, replacePrefixFrom(evalStr, \"eval\")],\n\n    [/\\([\\w]+,\\s*eval\\)\\(/, () => \" \" + evalStr],\n\n    // rewriting 'x = eval' - no invocation\n    [/[=]\\s*\\beval\\b(?![(:.$])/, replace(\"eval\", \"self.eval\")],\n\n    [/var\\s+self/, replace(\"var\", \"let\")],\n\n    // rewriting .postMessage -> __WB_pmw(self).postMessage\n    [/\\.postMessage\\b\\(/, addPrefix(\".__WB_pmw(self)\")],\n\n    // rewriting 'location = ' to custom expression '(...).href =' assignment\n    [\n      /(?:^|[^$.+*/%^-])\\s?\\blocation\\b\\s*[=]\\s*(?![\\s\\d=])/,\n      addSuffix(checkLoc),\n    ],\n\n    // rewriting 'return this'\n    [/\\breturn\\s+this\\b\\s*(?![\\s\\w.$])/, replaceThis()],\n\n    // rewriting 'this.' special properties access on new line, with ; prepended\n    // if prev char is '\\n', or if prev is not '.' or '$', no semi\n    [\n      new RegExp(\n        `[^$.]\\\\s?\\\\bthis\\\\b(?=(?:\\\\.(?:${GLOBAL_OVERRIDES.join(\"|\")})\\\\b))`,\n      ),\n      replaceThisProp(),\n    ],\n\n    // rewrite '= this' or ', this'\n    [/[=,]\\s*\\bthis\\b\\s*(?![\\s\\w:.$])/, replaceThis()],\n\n    // rewrite '})(this)'\n    [/\\}(?:\\s*\\))?\\s*\\(this\\)/, replaceThis()],\n\n    // rewrite this in && or || expr?\n    [/[^|&][|&]{2}\\s*this\\b\\s*(?![|\\s&.$](?:[^|&]|$))/, replaceThis()],\n\n    // ignore 'async import', custom function\n    [/async\\s+import\\s*\\(/, (x: string) => x],\n\n    [/[^$.]\\bimport\\s*\\([^)]*\\)\\s*\\{/, (x: string) => x],\n\n    // esm dynamic import, if found, mark as module\n    [/[^$.]\\bimport\\s*\\(/, replaceImport(\"import\", \"____wb_rewrite_import__\")],\n  ];\n};\n\n// ===========================================================================\nconst DEFAULT_RULES = createJSRules();\n\n// ===========================================================================\nclass JSRewriter extends RxRewriter {\n  extraRules: Rule[];\n  firstBuff: string;\n  lastBuff: string;\n\n  constructor(extraRules: Rule[]) {\n    super();\n    this.extraRules = extraRules;\n\n    this.firstBuff = this.initLocalDecl(GLOBAL_OVERRIDES);\n    this.lastBuff = \"\\n\\n}\";\n  }\n\n  initLocalDecl(localDecls: string[]) {\n    const assignFunc = \"_____WB$wombat$assign$function_____\";\n\n    let buffer = `\\\nvar ${assignFunc} = function(name) {return (self._wb_wombat && self._wb_wombat.local_init && self._wb_wombat.local_init(name)) || self[name]; };\nif (!self.__WB_pmw) { self.__WB_pmw = function(obj) { this.__WB_source = obj; return this; } }\n{\n`;\n\n    for (const decl of localDecls) {\n      buffer += `let ${decl} = ${assignFunc}(\"${decl}\");\\n`;\n    }\n    buffer += \"let arguments;\\n\";\n\n    return buffer + \"\\n\";\n  }\n\n  getModuleDecl(localDecls: string[], prefix: string) {\n    return `import { ${localDecls.join(\", \")} } from \"${prefix}__wb_module_decl.js\";\\n`;\n  }\n\n  detectIsModule(text: string) {\n    if (text.indexOf(\"import\") >= 0 && text.match(IMPORT_RX)) {\n      return true;\n    }\n\n    if (text.indexOf(\"export\") >= 0 && text.match(EXPORT_RX)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseGlobals(text: string) {\n    const res = acorn.parse(text, { ecmaVersion: \"latest\" });\n\n    let hasDocWrite = false;\n\n    const names: string[] = [];\n\n    const excludeOverrides = new Set();\n\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    for (const expr of (res as any).body) {\n      const { type } = expr;\n      // Check global variable declarations\n      if (type === \"VariableDeclaration\") {\n        const { kind, declarations } = expr;\n        for (const decl of declarations) {\n          if (\n            decl &&\n            decl.type === \"VariableDeclarator\" &&\n            decl.id &&\n            decl.id.type === \"Identifier\"\n          ) {\n            const name = decl.id.name;\n\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            if (GLOBAL_OVERRIDES.includes(name)) {\n              excludeOverrides.add(name);\n            } else if (kind === \"const\" || kind === \"let\") {\n              names.push(`self.${name} = ${name};`);\n            }\n          }\n        }\n        // Check for document.write() calls\n      } else if (!hasDocWrite && type === \"ExpressionStatement\") {\n        const { expression } = expr;\n        if (expression && expression.type === \"CallExpression\") {\n          const { callee } = expression;\n          if (callee && callee.type === \"MemberExpression\") {\n            const { object, property } = callee;\n            if (\n              object.type === \"Identifier\" &&\n              object.name === \"document\" &&\n              property.type === \"Identifier\" &&\n              property.name === \"write\"\n            ) {\n              hasDocWrite = true;\n            }\n          }\n        }\n      }\n    }\n\n    if (excludeOverrides.size) {\n      const filteredGlobals = GLOBAL_OVERRIDES.filter(\n        (x) => !excludeOverrides.has(x),\n      );\n      this.firstBuff = this.initLocalDecl(filteredGlobals);\n    }\n\n    // top-level document.write(), add document.close()\n    if (hasDocWrite) {\n      this.lastBuff = \";document.close();\" + this.lastBuff;\n    }\n\n    if (names.length) {\n      return \"\\n\" + names.join(\"\\n\");\n    } else {\n      return \"\";\n    }\n  }\n\n  // @ts-expect-error [TODO] - TS4114 - This member must have an 'override' modifier because it overrides a member in the base class 'RxRewriter'.\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  rewrite(text: string, opts: Record<string, any>) {\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    opts = opts || {};\n    // @ts-expect-error [TODO] - TS4111 - Property 'isModule' comes from an index signature, so it must be accessed with ['isModule']. | TS4111 - Property 'isModule' comes from an index signature, so it must be accessed with ['isModule'].\n    if (opts.isModule === undefined || opts.isModule === null) {\n      // @ts-expect-error [TODO] - TS4111 - Property 'isModule' comes from an index signature, so it must be accessed with ['isModule'].\n      opts.isModule = this.detectIsModule(text);\n    }\n\n    let rules = DEFAULT_RULES;\n\n    // @ts-expect-error [TODO] - TS4111 - Property 'isModule' comes from an index signature, so it must be accessed with ['isModule'].\n    if (opts.isModule) {\n      rules = [...rules, this.getESMImportRule()];\n    }\n\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, @typescript-eslint/prefer-optional-chain\n    if (this.extraRules && this.extraRules.length) {\n      this.rules = [...rules, ...this.extraRules];\n    } else {\n      this.rules = rules;\n    }\n\n    this.compileRules();\n\n    let newText = super.rewrite(text, opts);\n\n    // @ts-expect-error [TODO] - TS4111 - Property 'isModule' comes from an index signature, so it must be accessed with ['isModule'].\n    if (opts.isModule) {\n      // @ts-expect-error [TODO] - TS4111 - Property 'prefix' comes from an index signature, so it must be accessed with ['prefix'].\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      return this.getModuleDecl(GLOBAL_OVERRIDES, opts.prefix) + newText;\n    }\n\n    const wrapGlobals = GLOBALS_RX.exec(text);\n\n    // @ts-expect-error [TODO] - TS4111 - Property 'inline' comes from an index signature, so it must be accessed with ['inline'].\n    if (opts.inline) {\n      newText = newText.replace(/\\n/g, \" \");\n    }\n\n    if (wrapGlobals) {\n      let hoistGlobals = \"\";\n      if (newText) {\n        try {\n          hoistGlobals = this.parseGlobals(newText);\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } catch (e) {\n          console.warn(`acorn parsing failed, script len ${newText.length}`);\n        }\n      }\n      newText = this.firstBuff + newText + hoistGlobals + this.lastBuff;\n      // @ts-expect-error [TODO] - TS4111 - Property 'inline' comes from an index signature, so it must be accessed with ['inline'].\n      if (opts.inline) {\n        newText = newText.replace(/\\n/g, \" \");\n      }\n    }\n\n    return newText;\n  }\n\n  getESMImportRule(): Rule {\n    // mark as module side-effect + rewrite if http[s] url\n    function rewriteImport() {\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return (x: string, opts: Record<string, any>) => {\n        // @ts-expect-error [TODO] - TS4111 - Property 'prefix' comes from an index signature, so it must be accessed with ['prefix'].\n        const prefix = opts.prefix.replace(\"mp_/\", \"esm_/\");\n\n        return x.replace(IMPORT_HTTP_RX, (_, g1, g2, g3) => {\n          try {\n            // @ts-expect-error [TODO] - TS4111 - Property 'baseUrl' comes from an index signature, so it must be accessed with ['baseUrl'].\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            g2 = new URL(g2, opts.baseUrl).href;\n            g2 = prefix + g2;\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          } catch (e) {\n            // ignore, keep same url\n          }\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n          return g1 + g2 + g3;\n        });\n      };\n    }\n\n    // match and rewrite import statements\n    return [IMPORT_MATCH_RX, rewriteImport()];\n  }\n}\n\nexport { JSRewriter };\n"]}