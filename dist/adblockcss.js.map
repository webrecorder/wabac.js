{"version":3,"file":"adblockcss.js","sourceRoot":"","sources":["../src/adblockcss.ts"],"names":[],"mappings":"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","sourcesContent":["export async function getAdBlockCSSResponse(\n  fullDomain: string,\n  adblockUrl: string,\n) {\n  const domainParts = fullDomain.split(\".\");\n  const allDomains: string[] = [];\n\n  for (let i = 0; i < domainParts.length - 1; i++) {\n    if (domainParts[i] !== \"www\") {\n      allDomains.push(domainParts.slice(i).join(\".\"));\n    }\n  }\n\n  // Note: this may actually be a TLD (eg. co.uk) domains but that shouldn't matter too much\n  // unless a list has rules for a TLD, which it generally does not.\n  // this may result in checking more lines for exact matches than is necessary\n  const possibleDomain = allDomains.length\n    ? allDomains[allDomains.length - 1]\n    : \"\";\n\n  const resp = await fetch(adblockUrl);\n\n  let body = resp.body;\n\n  const headers = new Headers({ \"Content-Type\": \"text/css\" });\n\n  if (!body) {\n    return new Response(\"\", { status: 400, headers, statusText: \"Not Found\" });\n  }\n\n  if (adblockUrl.endsWith(\".gz\")) {\n    body = body.pipeThrough(new self.DecompressionStream(\"gzip\"));\n  }\n\n  const linestream: ReadableStream<string> = body.pipeThrough(\n    new ByLineStream(),\n  );\n\n  async function* yieldRules(linestream: ReadableStream<string>) {\n    try {\n      let res;\n      const reader = linestream.getReader();\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      while ((res = await reader.read()) && !res.done) {\n        const line = res.value;\n        if (possibleDomain && line.indexOf(possibleDomain) >= 0) {\n          const parts = line.split(\"##\");\n          if (parts.length < 2) {\n            continue;\n          }\n          // exception rule\n          // @ts-expect-error [TODO] - TS2532 - Object is possibly 'undefined'.\n          if (parts[0].endsWith(\"#@\")) {\n            continue;\n          }\n          // @ts-expect-error [TODO] - TS2532 - Object is possibly 'undefined'.\n          const matches = parts[0].split(\",\");\n\n          // match all subdomains exactly\n          for (const subdomain of allDomains) {\n            if (matches.includes(subdomain)) {\n              yield parts[1];\n              break;\n            }\n          }\n        } else if (!possibleDomain && line.startsWith(\"##\")) {\n          yield line.slice(2);\n        }\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  const encoder = new TextEncoder();\n\n  async function* yieldSelectors() {\n    for await (const rule of yieldRules(linestream)) {\n      yield encoder.encode(`${rule} {\n  display: none !important;\n}\n\n`);\n    }\n  }\n\n  const streamIter = yieldSelectors();\n\n  const rs = new ReadableStream({\n    async pull(controller) {\n      return streamIter.next().then((result) => {\n        // all done;\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (result.done || !result.value) {\n          controller.close();\n        } else {\n          controller.enqueue(result.value);\n        }\n      });\n    },\n  });\n\n  const status = 200;\n  const statusText = \"OK\";\n  return new Response(rs, { status, statusText, headers });\n}\n\n// Line TransformStream\n// from: https://github.com/jimmywarting/web-byline\n/*\nMIT License\n\nCopyright (c) 2016 Jimmy Karl Roland WÃ¤rting\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nexport class ByLineTransform {\n  _buffer: string[] = [];\n  _lastChunkEndedWithCR = false;\n  decoder = new TextDecoder();\n\n  transform(\n    chunkArray: Uint8Array,\n    controller: TransformStreamDefaultController,\n  ) {\n    const chunk = this.decoder.decode(chunkArray);\n    // see: http://www.unicode.org/reports/tr18/#Line_Boundaries\n    const lines = chunk.split(/\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/g);\n    const buffer = this._buffer;\n\n    // don't split CRLF which spans chunks\n    if (this._lastChunkEndedWithCR && chunk.startsWith(\"\\n\")) {\n      lines.shift();\n    }\n\n    if (buffer.length > 0) {\n      // @ts-expect-error [TODO] - TS2532 - Object is possibly 'undefined'.\n      buffer[buffer.length - 1] += lines[0];\n      lines.shift();\n    }\n\n    this._lastChunkEndedWithCR = chunk.endsWith(\"\\r\");\n    //buffer.push(...lines);\n\n    // always buffer the last (possibly partial) line\n    while (buffer.length > 1) {\n      const line = buffer.shift();\n      // skip empty lines\n      if (line?.length) controller.enqueue(line);\n    }\n\n    while (lines.length > 1) {\n      const line = lines.shift();\n      // skip empty lines\n      if (line?.length) controller.enqueue(line);\n    }\n  }\n\n  flush(controller: TransformStreamDefaultController) {\n    const buffer = this._buffer;\n\n    while (buffer.length) {\n      const line = buffer.shift();\n      // skip empty lines\n      if (line?.length) controller.enqueue(line);\n    }\n  }\n}\n\nexport class ByLineStream extends TransformStream<Uint8Array, string> {\n  constructor() {\n    super(new ByLineTransform());\n  }\n}\n"]}