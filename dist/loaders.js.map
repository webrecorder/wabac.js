{"version":3,"file":"loaders.js","sourceRoot":"","sources":["../src/loaders.ts"],"names":[],"mappings":"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","sourcesContent":["import { ArchiveDB } from \"./archivedb\";\nimport {\n  RemoteSourceArchiveDB,\n  RemotePrefixArchiveDB,\n} from \"./remotearchivedb\";\n//import { WACZRemoteArchiveDB } from \"./waczarchive\";\n\nimport { HARLoader } from \"./harloader\";\n//import { WBNLoader } from \"./wbnloader\";\nimport { WARCLoader } from \"./warcloader\";\nimport { CDXLoader, CDXFromWARCLoader } from \"./cdxloader\";\n\nimport {\n  SingleWACZLoader,\n  SingleWACZFullImportLoader,\n  JSONResponseMultiWACZLoader,\n} from \"./wacz/waczloader\";\nimport { MultiWACZ } from \"./wacz/multiwacz\";\n\nimport { type BaseLoader, createLoader } from \"./blockloaders\";\n\nimport { RemoteWARCProxy } from \"./remotewarcproxy\";\nimport { LiveProxy } from \"./liveproxy\";\n\nimport { type IDBPDatabase, deleteDB, openDB } from \"idb/with-async-ittr\";\nimport {\n  Canceled,\n  MAX_FULL_DOWNLOAD_SIZE,\n  randomId,\n  AuthNeededError,\n  DeleteExpiredError,\n  sleep,\n} from \"./utils\";\nimport { detectFileType, getKnownFileExtension } from \"./detectfiletype\";\nimport {\n  type CollConfig,\n  type ArchiveLoader,\n  type DBStore,\n  type WACZCollConfig,\n  type CollMetadata,\n} from \"./types\";\n\n// [TODO]\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nif (!globalThis.self) {\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (globalThis as any).self = globalThis;\n}\n\nconst interruptLoads: Record<string, () => void> = {};\n// [TODO]\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(self as any).interruptLoads = interruptLoads;\n\nexport type LoadColl = {\n  name: string;\n  type: string;\n  config: CollConfig;\n  store?: DBStore;\n};\n\nexport type CollDB = {\n  colls: {\n    key: string;\n    value: { name: string; type: string; config: CollConfig };\n    indexes: { type: string };\n  };\n\n  settings: {\n    key: string;\n    value: number;\n  };\n};\n\n// ===========================================================================\nexport class CollectionLoader {\n  root: string | null = null;\n  colldb: IDBPDatabase<CollDB> | null = null;\n  checkIpfs = true;\n  _init_db: Promise<void>;\n\n  _fileHandles: Record<string, FileSystemFileHandle> | null = null;\n\n  constructor() {\n    this._init_db = this._initDB();\n  }\n\n  async _initDB() {\n    this.colldb = await openDB(\"collDB\", 3, {\n      upgrade: (db, oldV /* newV, tx*/) => {\n        if (oldV < 1) {\n          const collstore = db.createObjectStore(\"colls\", { keyPath: \"name\" });\n\n          collstore.createIndex(\"type\", \"type\");\n        }\n\n        try {\n          db.createObjectStore(\"settings\");\n        } catch (_) {\n          // ignore if already exists\n        }\n      },\n    });\n  }\n\n  async loadAll(dbColls: string) {\n    await this._init_db;\n\n    if (dbColls) {\n      for (const extraColl of dbColls.split(\",\")) {\n        const parts = extraColl.split(\":\");\n        if (parts.length === 2) {\n          const config = {\n            dbname: parts[1]!,\n            sourceName: parts[1]!,\n            decode: false,\n            sourceUrl: \"\",\n          };\n          const collData = { name: parts[0]!, type: \"archive\", config };\n          console.log(\"Adding Coll: \" + JSON.stringify(collData));\n          await this.colldb!.put(\"colls\", collData);\n        }\n      }\n    }\n\n    try {\n      const allColls = await this.listAll();\n\n      const multiWACZs: MultiWACZ[] = [];\n\n      // [TODO]\n      const promises = allColls.map(async (data) =>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        this._initColl(data, multiWACZs),\n      );\n\n      await Promise.all(promises);\n\n      if (multiWACZs.length) {\n        void this.deleteExpireMultiWACZs(multiWACZs);\n      }\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (e: any) {\n      console.warn(e.toString());\n    }\n\n    return true;\n  }\n\n  async listAll() {\n    await this._init_db;\n    return await this.colldb!.getAll(\"colls\");\n  }\n\n  async loadColl(name: string) {\n    await this._init_db;\n    const data = await this.colldb!.get(\"colls\", name);\n    if (!data) {\n      return null;\n    }\n\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return await this._initColl(data);\n  }\n\n  async reload(name: string) {\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return this.loadColl(name);\n  }\n\n  async deleteColl(name: string) {\n    await this._init_db;\n    const data = await this.colldb!.get(\"colls\", name);\n    if (!data) {\n      return false;\n    }\n\n    if (data.config.dbname) {\n      try {\n        await deleteDB(data.config.dbname, {\n          blocked(_, e) {\n            console.log(\n              // [TODO]\n              // eslint-disable-next-line @typescript-eslint/no-base-to-string, @typescript-eslint/restrict-template-expressions\n              `Unable to delete ${data.config.dbname}, blocked: ${e}`,\n            );\n          },\n        });\n      } catch (e) {\n        console.warn(e);\n        return false;\n      }\n    }\n\n    await this.colldb!.delete(\"colls\", name);\n\n    return true;\n  }\n\n  async deleteExpireMultiWACZs(stores: MultiWACZ[]) {\n    const lastCleanupRun = await this.colldb?.get(\"settings\", \"lastCleanupRun\");\n    if (lastCleanupRun) {\n      if (Date.now() - lastCleanupRun < 24 * 60 * 60 * 1000) {\n        console.log(\"Skipping cleanup run, ran recently\");\n        return;\n      }\n    }\n\n    for (const store of stores) {\n      const url = store.config.loadUrl || store.config.sourceUrl;\n      if (!url.startsWith(\"https://\") && !url.startsWith(\"http://\")) {\n        continue;\n      }\n      try {\n        await store.checkUpdates();\n      } catch (e) {\n        if (e instanceof DeleteExpiredError) {\n          console.warn(\"Deleting expired/invalid coll for \" + url);\n          void this.deleteColl(store.name);\n        }\n      }\n      // pause for 2 seconds to avoid moving too quickly\n      await sleep(2000);\n    }\n\n    await this.colldb!.put(\"settings\", Date.now(), \"lastCleanupRun\");\n  }\n\n  async updateAuth(name: string, newHeaders: Record<string, string>) {\n    await this._init_db;\n    const data = await this.colldb!.get(\"colls\", name);\n    if (!data) {\n      return false;\n    }\n    data.config.headers = newHeaders;\n    await this.colldb!.put(\"colls\", data);\n    return true;\n  }\n\n  async updateMetadata(name: string, newMetadata: CollMetadata) {\n    await this._init_db;\n    const data = await this.colldb!.get(\"colls\", name);\n    if (!data) {\n      return false;\n    }\n    data.config.metadata = { ...data.config.metadata, ...newMetadata };\n\n    await this.colldb!.put(\"colls\", data);\n    return data.config.metadata;\n  }\n\n  async updateSize(\n    name: string,\n    fullSize: number,\n    dedupSize: number,\n    decodeUpdate?: boolean,\n  ): Promise<CollMetadata | false> {\n    await this._init_db;\n    const data = await this.colldb!.get(\"colls\", name);\n    if (!data) {\n      return false;\n    }\n\n    const metadata = data.config.metadata || {};\n    metadata.fullSize = (metadata.fullSize || 0) + fullSize;\n    metadata.size = (metadata.size || 0) + dedupSize;\n    metadata.mtime = new Date().getTime();\n\n    // if set, also update decode (a little hacky)\n    if (decodeUpdate !== undefined) {\n      data.config.decode = decodeUpdate;\n    }\n    await this.colldb!.put(\"colls\", data);\n    return metadata;\n  }\n\n  async initNewColl(\n    metadata: CollMetadata,\n    extraConfig = {},\n    type = \"archive\",\n  ) {\n    await this._init_db;\n    const id = randomId();\n    const dbname = \"db:\" + id;\n    const sourceUrl = \"local://\" + id;\n    const decode = false;\n    const ctime = new Date().getTime();\n\n    const data = {\n      name: id,\n      type,\n      config: {\n        dbname,\n        ctime,\n        decode,\n        metadata,\n        sourceUrl,\n        extraConfig,\n      },\n    };\n\n    const coll = await this._initColl(data);\n    await this.colldb!.put(\"colls\", data);\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return coll;\n  }\n\n  private async _initColl(\n    data: LoadColl,\n    storeMultiWACZ: MultiWACZ[] | null = null,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): Promise<any> {\n    const store = await this._initStore(data.type || \"\", data.config);\n\n    const name = data.name;\n    const config = data.config;\n\n    if (data.config.root && !this.root) {\n      this.root = name || null;\n    }\n\n    if (storeMultiWACZ && store instanceof MultiWACZ) {\n      storeMultiWACZ.push(store);\n    }\n\n    return this._createCollection({ name, store, config });\n  }\n\n  async _initStore(type: string, config: CollConfig) {\n    let sourceLoader: BaseLoader;\n    let store: DBStore | null = null;\n\n    switch (type) {\n      case \"archive\":\n        store = new ArchiveDB(config.dbname);\n        break;\n\n      case \"remotesource\":\n        sourceLoader = await createLoader({\n          url: config.loadUrl!,\n          headers: config.headers!,\n          size: config.size!,\n          extra: config.extra!,\n        });\n        store = new RemoteSourceArchiveDB(\n          config.dbname,\n          sourceLoader,\n          config.noCache,\n        );\n        break;\n\n      case \"remoteprefix\":\n        store = new RemotePrefixArchiveDB(\n          config.dbname,\n          config.remotePrefix!,\n          config.headers!,\n          config.noCache,\n        );\n        break;\n\n      case \"wacz\":\n      case \"remotezip\":\n      case \"multiwacz\":\n        sourceLoader = await createLoader({\n          url: config.loadUrl || config.sourceUrl,\n          headers: config.headers,\n          extra: config.extra,\n        });\n        store = new MultiWACZ(\n          config as WACZCollConfig,\n          sourceLoader,\n          type === \"multiwacz\" ? \"json\" : \"wacz\",\n        );\n        break;\n\n      case \"remotewarcproxy\":\n        store = new RemoteWARCProxy(config);\n        break;\n\n      case \"live\":\n        store = new LiveProxy(config.extraConfig);\n        break;\n    }\n\n    if (!store) {\n      console.log(\"no store found: \" + type);\n      return null;\n    }\n\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises, @typescript-eslint/no-unnecessary-condition\n    if ((store as ArchiveDB).initing) {\n      await (store as ArchiveDB).initing;\n    }\n\n    return store;\n  }\n\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _createCollection(opts: Record<string, any>) {\n    return opts;\n  }\n}\n\n// ===========================================================================\nexport class WorkerLoader extends CollectionLoader {\n  constructor(worker: WorkerGlobalScope) {\n    super();\n    this.registerListener(worker);\n  }\n\n  async hasCollection(name: string) {\n    await this._init_db;\n\n    return (await this.colldb!.getKey(\"colls\", name)) != null;\n  }\n\n  registerListener(worker: WorkerGlobalScope) {\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    worker.addEventListener(\"message\", (event: any) => {\n      if (event.waitUntil) {\n        event.waitUntil(this._handleMessage(event as MessageEvent));\n      } else {\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises, @typescript-eslint/no-unsafe-argument\n        this._handleMessage(event);\n      }\n    });\n  }\n\n  async _handleMessage(event: MessageEvent) {\n    await this._init_db;\n\n    const client = event.source || self;\n\n    switch (event.data.msg_type) {\n      case \"addColl\": {\n        const name = event.data.name;\n\n        const progressUpdate = (\n          percent?: number,\n          error?: string,\n          currentSize?: number | null,\n          totalSize?: number | null,\n          fileHandle = null,\n          extraMsg = null,\n        ) => {\n          client.postMessage({\n            msg_type: \"collProgress\",\n            name,\n            percent,\n            error,\n            currentSize,\n            totalSize,\n            fileHandle,\n            extraMsg,\n          });\n        };\n\n        let res;\n\n        try {\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          res = await this.colldb!.get(\"colls\", name);\n          if (res) {\n            if (!event.data.skipExisting) {\n              // [TODO]\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n              await this.deleteColl(name);\n              // [TODO]\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n              res = await this.addCollection(event.data, progressUpdate);\n            }\n          } else {\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            res = await this.addCollection(event.data, progressUpdate);\n          }\n\n          if (!res) {\n            if (event.data.name) {\n              try {\n                await deleteDB(\"db:\" + event.data.name, {\n                  blocked(_, e) {\n                    console.log(\n                      // [TODO]\n                      // eslint-disable-next-line @typescript-eslint/no-base-to-string, @typescript-eslint/restrict-template-expressions\n                      `Load failed and unable to delete ${event.data.name}: ${e}`,\n                    );\n                  },\n                });\n              } catch (e) {\n                console.warn(e);\n              }\n            }\n            return;\n          }\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        } catch (e: any) {\n          if (e instanceof AuthNeededError) {\n            console.warn(e);\n            progressUpdate(\n              0,\n              \"permission_needed\",\n              null,\n              null,\n              // @ts-expect-error [TODO] - TS4111 - Property 'fileHandle' comes from an index signature, so it must be accessed with ['fileHandle'].\n              // [TODO]\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unnecessary-condition\n              e.info?.fileHandle,\n            );\n            return;\n          } else if (e.name === \"ConstraintError\") {\n            console.log(\"already being added, just continue...\");\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            res = await this.colldb!.get(\"colls\", name);\n          } else {\n            console.warn(e);\n            progressUpdate(\n              0,\n              \"An unexpected error occured: \" + e.toString(),\n              null,\n              null,\n            );\n            return;\n          }\n        }\n\n        client.postMessage({\n          msg_type: \"collAdded\",\n          name,\n          sourceUrl: res?.config.sourceUrl,\n        });\n\n        //this.doListAll(client);\n        break;\n      }\n\n      case \"cancelLoad\": {\n        const name = event.data.name;\n\n        const p = new Promise<void>(\n          (resolve) => (interruptLoads[name] = resolve),\n        );\n\n        await p;\n\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        await this.deleteColl(name);\n\n        delete interruptLoads[name];\n\n        break;\n      }\n\n      case \"removeColl\": {\n        const name = event.data.name;\n\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (await this.hasCollection(name)) {\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          await this.deleteColl(name);\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          this.doListAll(client);\n        }\n        break;\n      }\n\n      case \"listAll\":\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.doListAll(client);\n        break;\n\n      case \"reload\":\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises, @typescript-eslint/no-unsafe-argument\n        this.reload(event.data.name);\n        break;\n    }\n  }\n\n  async doListAll(\n    client: (WorkerGlobalScope & typeof globalThis) | MessageEventSource,\n  ) {\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const msgData: Record<string, any>[] = [];\n    const allColls = await this.listAll();\n\n    for (const coll of allColls) {\n      //const pageList = await coll.store.getAllPages();\n\n      msgData.push({\n        name: coll.name,\n        prefix: coll.name,\n        pageList: [],\n        sourceName: coll.config.sourceName,\n      });\n    }\n    client.postMessage({ msg_type: \"listAll\", colls: msgData });\n  }\n\n  async addCollection(\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: Record<string, any>,\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    progressUpdate: any,\n  ): Promise<LoadColl | false> {\n    // @ts-expect-error [TODO] - TS4111 - Property 'name' comes from an index signature, so it must be accessed with ['name'].\n    let name: string = data.name;\n\n    let type = \"\";\n    // @ts-expect-error [TODO] - TS4111 - Property 'root' comes from an index signature, so it must be accessed with ['root'].\n    const config: CollConfig = { root: data.root || false };\n    let generalDB: DBStore | null = null;\n\n    let updateExistingConfig: CollConfig | null = null;\n\n    // @ts-expect-error [TODO] - TS4111 - Property 'file' comes from an index signature, so it must be accessed with ['file'].\n    const file = data.file;\n\n    if (!file?.sourceUrl) {\n      progressUpdate(0, \"Invalid Load Request\");\n      return false;\n    }\n\n    config.dbname = \"db:\" + name;\n\n    if (file.sourceUrl.startsWith(\"proxy:\")) {\n      config.sourceUrl = file.sourceUrl.slice(\"proxy:\".length);\n      // @ts-expect-error [TODO] - TS4111 - Property 'extraConfig' comes from an index signature, so it must be accessed with ['extraConfig']. | TS4111 - Property 'extraConfig' comes from an index signature, so it must be accessed with ['extraConfig'].\n      config.extraConfig = data.extraConfig;\n      // @ts-expect-error [TODO] - TS4111 - Property 'extraConfig' comes from an index signature, so it must be accessed with ['extraConfig'].\n      if (!config.extraConfig.prefix) {\n        // @ts-expect-error [TODO] - TS4111 - Property 'extraConfig' comes from an index signature, so it must be accessed with ['extraConfig']. | TS4111 - Property 'sourceUrl' comes from an index signature, so it must be accessed with ['sourceUrl'].\n        config.extraConfig.prefix = config.sourceUrl;\n      }\n      // @ts-expect-error [TODO] - TS4111 - Property 'topTemplateUrl' comes from an index signature, so it must be accessed with ['topTemplateUrl']. | TS4111 - Property 'topTemplateUrl' comes from an index signature, so it must be accessed with ['topTemplateUrl'].\n      config.topTemplateUrl = data.topTemplateUrl;\n      config.metadata = {};\n      // @ts-expect-error [TODO] - TS4111 - Property 'type' comes from an index signature, so it must be accessed with ['type']. | TS4111 - Property 'extraConfig' comes from an index signature, so it must be accessed with ['extraConfig'].\n      type = data.type || config.extraConfig.type || \"remotewarcproxy\";\n\n      generalDB = await this._initStore(type, config);\n    } else {\n      let loader: ArchiveLoader | null = null;\n      let db: ArchiveDB | null = null;\n\n      if (file.newFullImport) {\n        name = randomId();\n        file.loadUrl = file.loadUrl || file.sourceUrl;\n        file.name = file.name || file.sourceUrl;\n        file.sourceUrl = \"local://\" + name;\n      }\n\n      type = \"archive\";\n\n      if (file.newFullImport && file.importCollId) {\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const existing = await this.colldb!.get(\"colls\", file.importCollId);\n        if (!existing || existing.type !== \"archive\") {\n          progressUpdate(\n            0,\n            \"Invalid Existing Collection: \" + file.importCollId,\n          );\n          return false;\n        }\n        config.dbname = existing.config.dbname;\n        updateExistingConfig = existing.config;\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (updateExistingConfig) {\n          updateExistingConfig.decode = true;\n        }\n      }\n\n      let loadUrl = file.loadUrl || file.sourceUrl;\n\n      if (!loadUrl.match(/[\\w]+:\\/\\//)) {\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        loadUrl = new URL(loadUrl, self.location.href).href;\n      }\n\n      config.decode = true;\n      config.onDemand = false;\n      config.loadUrl = loadUrl;\n      config.sourceUrl = file.sourceUrl;\n\n      let sourceName: string = file.name || file.sourceUrl;\n\n      // parse to strip out query, keep hash/fragment (if any)\n      try {\n        if (sourceName.match(/https?:\\/\\//)) {\n          const sourceUrl = new URL(sourceName);\n          sourceName = sourceUrl.pathname + sourceUrl.hash;\n        }\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      } catch (e) {\n        // ignore, keep sourceName as is\n      }\n      config.sourceName = sourceName.slice(sourceName.lastIndexOf(\"/\") + 1);\n\n      config.size = typeof file.size === \"number\" ? file.size : null;\n      config.extra = file.extra;\n\n      // @ts-expect-error [TODO] - TS4111 - Property 'loadUrl' comes from an index signature, so it must be accessed with ['loadUrl']. | TS4111 - Property 'extra' comes from an index signature, so it must be accessed with ['extra'].\n      if (config.loadUrl.startsWith(\"file://\") && !file.blob && !config.extra) {\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n        if (this._fileHandles && this._fileHandles[config.sourceUrl]) {\n          config.extra = { fileHandle: this._fileHandles[config.sourceUrl]! };\n        } else {\n          progressUpdate(0, \"missing_local_file\");\n          return false;\n        }\n      }\n\n      // @ts-expect-error [TODO] - TS4111 - Property 'extraConfig' comes from an index signature, so it must be accessed with ['extraConfig']. | TS4111 - Property 'extraConfig' comes from an index signature, so it must be accessed with ['extraConfig'].\n      config.extraConfig = data.extraConfig;\n      config.headers = file.headers || config.extraConfig?.headers;\n      config.noCache = file.noCache;\n      let sourceLoader = await createLoader({\n        url: loadUrl,\n        headers: config.headers,\n        size: file.size,\n        extra: config.extra,\n        blob: file.blob,\n      });\n\n      if (file.loadEager) {\n        const { response } = await sourceLoader.doInitialFetch(false, true);\n        const arrayBuffer = new Uint8Array(await response.arrayBuffer());\n        const extra = { arrayBuffer };\n\n        //config.extra = extra;\n        file.newFullImport = true;\n\n        sourceLoader = await createLoader({\n          url: loadUrl,\n          headers: config.headers,\n          size: file.size,\n          extra,\n        });\n      }\n\n      let sourceExt: string | undefined = getKnownFileExtension(\n        config.sourceName,\n      );\n\n      const { abort, response } = await sourceLoader.doInitialFetch(\n        sourceExt === \".wacz\",\n        false,\n      );\n\n      if (!sourceExt) {\n        sourceExt = await detectFileType(await response.clone());\n      }\n\n      const stream = response.body;\n\n      config.onDemand = sourceLoader.canLoadOnDemand && !file.newFullImport;\n\n      if (!sourceLoader.isValid) {\n        const text =\n          sourceLoader.length && sourceLoader.length <= 1000\n            ? await response.text()\n            : \"\";\n        progressUpdate(\n          0,\n          `\\\nSorry, this URL could not be loaded.\nMake sure this is a valid URL and you have access to this file.\nStatus: ${response.status} ${response.statusText}\nError Details:\n${text}`,\n        );\n        if (abort) {\n          abort.abort();\n        }\n        return false;\n      }\n\n      if (!sourceLoader.length) {\n        progressUpdate(\n          0,\n          `\\\nSorry, this URL could not be loaded because the size of the file is not accessible.\nMake sure this is a valid URL and you have access to this file.`,\n        );\n        if (abort) {\n          abort.abort();\n        }\n        return false;\n      }\n\n      const contentLength = sourceLoader.length;\n\n      if (sourceExt === \".wacz\") {\n        if (config.onDemand) {\n          loader = new SingleWACZLoader(sourceLoader, config, name);\n          // @ts-expect-error [TODO] - TS2345 - Argument of type 'Record<string, any>' is not assignable to parameter of type 'Config'.\n          db = new MultiWACZ(config as WACZCollConfig, sourceLoader, \"wacz\");\n          type = \"wacz\";\n\n          // can load on demand, but want a full import\n        } else if (sourceLoader.canLoadOnDemand && file.newFullImport) {\n          loader = new SingleWACZFullImportLoader(sourceLoader, config, name);\n          //use default db\n          db = null;\n          delete config.extra;\n        } else {\n          progressUpdate(\n            0,\n            \"Sorry, can't load this WACZ file due to lack of range request support on the server\",\n          );\n          if (abort) {\n            abort.abort();\n          }\n          return false;\n        }\n\n        // if loader already loaded full buffer, store that\n        const fullBuffer = sourceLoader.getFullBuffer();\n        if (fullBuffer) {\n          config.extra = { arrayBuffer: fullBuffer, ...(config.extra || {}) };\n        }\n      } else if (\n        stream &&\n        (sourceExt === \".warc\" || sourceExt === \".warc.gz\")\n      ) {\n        if (\n          !config.noCache &&\n          (contentLength < MAX_FULL_DOWNLOAD_SIZE || !config.onDemand)\n        ) {\n          loader = new WARCLoader(stream, abort, name);\n        } else {\n          loader = new CDXFromWARCLoader(stream, abort, name);\n          type = \"remotesource\";\n          db = new RemoteSourceArchiveDB(\n            config.dbname,\n            sourceLoader,\n            config.noCache,\n          );\n        }\n      } else if (stream && (sourceExt === \".cdx\" || sourceExt === \".cdxj\")) {\n        config.remotePrefix =\n          // @ts-expect-error [TODO] - TS4111 - Property 'remotePrefix' comes from an index signature, so it must be accessed with ['remotePrefix'].\n          data.remotePrefix || loadUrl.slice(0, loadUrl.lastIndexOf(\"/\") + 1);\n        loader = new CDXLoader(stream, abort, name);\n        type = \"remoteprefix\";\n        db = new RemotePrefixArchiveDB(\n          config.dbname,\n          config.remotePrefix!,\n          config.headers!,\n          config.noCache,\n        );\n\n        // } else if (sourceExt === \".wbn\") {\n        //   //todo: fix\n        //   loader = new WBNLoader(await response.arrayBuffer());\n        //   config.decode = false;\n      } else if (sourceExt === \".har\") {\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        loader = new HARLoader(await response.json());\n        config.decode = false;\n      } else if (sourceExt === \".json\") {\n        // @ts-expect-error [TODO] - TS2345 - Argument of type 'Record<string, any>' is not assignable to parameter of type 'Config'.\n        db = new MultiWACZ(config, sourceLoader, \"json\");\n        loader = new JSONResponseMultiWACZLoader(response);\n        type = \"multiwacz\";\n      }\n\n      if (!loader) {\n        progressUpdate(\n          0,\n          `The ${config.sourceName} is not a known archive format that could be loaded.`,\n        );\n        if (abort) {\n          abort.abort();\n        }\n        return false;\n      }\n\n      if (!db) {\n        db = new ArchiveDB(config.dbname);\n      }\n      await db.initing;\n\n      try {\n        config.metadata = await loader.load(db, progressUpdate, contentLength);\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      } catch (e: any) {\n        if (!(e instanceof Canceled)) {\n          progressUpdate(0, `Unexpected Loading Error: ${e.toString()}`);\n          console.warn(e);\n        }\n        return false;\n      }\n\n      if (updateExistingConfig) {\n        await this.updateSize(\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          file.importCollId,\n          contentLength,\n          contentLength,\n          updateExistingConfig.decode,\n        );\n        return { config: updateExistingConfig, type: \"\", name: \"\" };\n      }\n\n      // @ts-expect-error [TODO] - TS4111 - Property 'metadata' comes from an index signature, so it must be accessed with ['metadata'].\n      if (!config.metadata.size) {\n        // @ts-expect-error [TODO] - TS4111 - Property 'metadata' comes from an index signature, so it must be accessed with ['metadata'].\n        config.metadata.size = contentLength;\n      }\n\n      // @ts-expect-error [TODO] - TS4111 - Property 'metadata' comes from an index signature, so it must be accessed with ['metadata'].\n      if (!config.metadata.title) {\n        // @ts-expect-error [TODO] - TS4111 - Property 'metadata' comes from an index signature, so it must be accessed with ['metadata']. | TS4111 - Property 'sourceName' comes from an index signature, so it must be accessed with ['sourceName'].\n        config.metadata.title = config.sourceName;\n      }\n\n      generalDB = db;\n    }\n\n    config.ctime = new Date().getTime();\n\n    if (this._fileHandles && config.extra?.fileHandle) {\n      delete this._fileHandles[config.sourceUrl];\n    }\n\n    const collData = { name, type, config };\n    await this.colldb!.add(\"colls\", collData);\n    // @ts-expect-error [TODO] - TS4111 - Property 'store' comes from an index signature, so it must be accessed with ['store'].\n    collData.store = generalDB;\n    return collData as LoadColl;\n  }\n}\n"]}