{"version":3,"file":"ziprangereader.js","sourceRoot":"","sources":["../../src/wacz/ziprangereader.ts"],"names":[],"mappings":"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","sourcesContent":["import { AsyncIterReader, concatChunks } from \"warcio\";\nimport { createSHA256 } from \"hash-wasm\";\nimport { BaseLoader, getReadableStreamFromIter } from \"../blockloaders\";\nimport { type IHasher } from \"hash-wasm/dist/lib/WASMInterface.js\";\n\n// ===========================================================================\nconst MAX_INT32 = 0xffffffff;\nconst MAX_INT16 = 0xffff;\n\n// ===========================================================================\nexport type GetHash = {\n  getHash: () => string;\n};\n\nexport type ReaderAndHasher = {\n  reader: AsyncIterReader;\n  hasher?: GetHash | null;\n};\n\nexport type LoadWACZEntry = Promise<ReaderAndHasher>;\n\nexport type ZipEntry = {\n  filename: string;\n  deflate: boolean;\n  uncompressedSize: number;\n  compressedSize: number;\n  localEntryOffset: number;\n  offset?: number;\n};\n\n// ===========================================================================\nclass LoadMoreException {\n  start: number;\n  length: number;\n\n  constructor(start: number, length: number) {\n    this.start = start;\n    this.length = length;\n  }\n}\n\n// ===========================================================================\nexport class HashingAsyncIterReader extends AsyncIterReader implements GetHash {\n  hasher: IHasher | null = null;\n  hashInited = false;\n  hash = \"\";\n\n  constructor(source: AsyncIterReader, compressed = \"gzip\", dechunk = false) {\n    super(source, compressed, dechunk);\n  }\n\n  async initHasher() {\n    try {\n      this.hasher = await createSHA256();\n    } catch (e) {\n      console.warn(\"Hasher init failed, not hashing\", e);\n    } finally {\n      this.hashInited = true;\n    }\n  }\n\n  // @ts-expect-error [TODO] - TS4114 - This member must have an 'override' modifier because it overrides a member in the base class 'AsyncIterReader'.\n  async _loadNext() {\n    const value = await super._loadNext();\n    if (value) {\n      if (!this.hashInited) {\n        await this.initHasher();\n      }\n      this.hasher!.update(value);\n    } else if (this.hasher) {\n      this.hash = \"sha256:\" + this.hasher.digest(\"hex\");\n      this.hasher = null;\n    }\n    return value;\n  }\n\n  getHash(): string {\n    return this.hash;\n  }\n}\n\n// ===========================================================================\nexport class ZipRangeReader {\n  loader: BaseLoader;\n  entriesUpdated = false;\n  enableHashing = false;\n  entries: Record<string, ZipEntry> | null = null;\n\n  constructor(\n    loader: BaseLoader,\n    entries: Record<string, ZipEntry> | null = null,\n  ) {\n    this.loader = loader;\n    this.entries = entries;\n    this.entriesUpdated = false;\n\n    // todo: make configurable\n    this.enableHashing = true;\n  }\n\n  async load(always = false): Promise<Record<string, ZipEntry>> {\n    if (!this.entries || always) {\n      const endChunkOffset = MAX_INT16 + 23;\n      const endChunk = (await this.loader.getRangeFromEnd(\n        endChunkOffset,\n        false,\n      )) as Uint8Array;\n\n      const start = Math.max(\n        (await this.loader.getLength()) - endChunkOffset,\n        0,\n      );\n\n      try {\n        this.entries = this._loadEntries(endChunk, start);\n      } catch (e) {\n        if (e instanceof LoadMoreException) {\n          const extraChunk = (await this.loader.getRange(\n            e.start,\n            e.length,\n            false,\n          )) as Uint8Array;\n          const combinedChunk = concatChunks(\n            [extraChunk, endChunk],\n            e.length + length,\n          );\n          this.entries = this._loadEntries(combinedChunk, e.start);\n        }\n      }\n\n      this.entriesUpdated = true;\n    }\n    return this.entries!;\n  }\n\n  _loadEntries(\n    data: Uint8Array,\n    dataStartOffset: number, // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): Record<string, any> | null {\n    // Adapted from\n    // Copyright (c) 2016 Rob Wu <rob@robwu.nl> (https://robwu.nl)\n    //  * Published under a MIT license.\n    // * https://github.com/Rob--W/zipinfo.js\n    const length = data.byteLength;\n\n    if (!length) {\n      return null;\n    }\n\n    const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\n    const utf8Decoder = new TextDecoder(\"utf8\");\n    const asciiDecoder = new TextDecoder(\"ascii\");\n    const entries: Record<string, ZipEntry> = {};\n\n    let entriesLeft = 0;\n    let offset = 0;\n    let endoffset = length;\n    // Find EOCD (0xFFFF is the maximum size of an optional trailing comment).\n    for (let i = length - 22, ii = Math.max(0, i - MAX_INT16); i >= ii; --i) {\n      if (\n        data[i] === 0x50 &&\n        data[i + 1] === 0x4b &&\n        data[i + 2] === 0x05 &&\n        data[i + 3] === 0x06\n      ) {\n        endoffset = i;\n        offset = view.getUint32(i + 16, true);\n        entriesLeft = view.getUint16(i + 8, true);\n        break;\n      }\n    }\n\n    //ZIP64 find offset\n    if (offset === MAX_INT32 || entriesLeft === MAX_INT16) {\n      if (view.getUint32(endoffset - 20, true) !== 0x07064b50) {\n        console.warn(\"invalid zip64 EOCD locator\");\n        return null;\n      }\n\n      const zip64Offset = this.getUint64(view, endoffset - 12, true);\n\n      const viewOffset = zip64Offset - dataStartOffset;\n\n      if (view.getUint32(viewOffset, true) !== 0x06064b50) {\n        console.warn(\"invalid zip64 EOCD record\");\n        return null;\n      }\n\n      entriesLeft = this.getUint64(view, viewOffset + 32, true);\n      offset = this.getUint64(view, viewOffset + 48, true);\n      //zip64 = true;\n    }\n\n    if (offset >= dataStartOffset) {\n      offset -= dataStartOffset;\n    } else if (offset < dataStartOffset && offset > 0) {\n      throw new LoadMoreException(offset, dataStartOffset - offset);\n    }\n\n    if (offset >= length || offset < 0) {\n      // EOCD not found or malformed. Try to recover if possible (the result is\n      // most likely going to be incomplete or bogus, but we can try...).\n      offset = -1;\n      entriesLeft = MAX_INT16;\n      while (\n        ++offset < length &&\n        data[offset] !== 0x50 &&\n        data[offset + 1] !== 0x4b &&\n        data[offset + 2] !== 0x01 &&\n        data[offset + 3] !== 0x02\n      );\n    }\n\n    endoffset -= 46; // 46 = minimum size of an entry in the central directory.\n\n    while (--entriesLeft >= 0 && offset < endoffset) {\n      if (view.getUint32(offset) != 0x504b0102) {\n        break;\n      }\n\n      const bitFlag = view.getUint16(offset + 8, true);\n      let compressedSize = view.getUint32(offset + 20, true);\n      let uncompressedSize = view.getUint32(offset + 24, true);\n      const fileNameLength = view.getUint16(offset + 28, true);\n      const extraFieldLength = view.getUint16(offset + 30, true);\n      const fileCommentLength = view.getUint16(offset + 32, true);\n\n      const deflate = view.getUint16(offset + 10, true) === 8;\n\n      let localEntryOffset = view.getUint32(offset + 42, true);\n\n      const decoder = bitFlag & 0x800 ? utf8Decoder : asciiDecoder;\n      const filename = decoder.decode(\n        data.subarray(offset + 46, offset + 46 + fileNameLength),\n      );\n\n      // ZIP64 support\n      if (\n        compressedSize === MAX_INT32 ||\n        uncompressedSize === MAX_INT32 ||\n        localEntryOffset === MAX_INT32\n      ) {\n        let extraFieldOffset = offset + 46 + fileNameLength;\n        const efEnd = extraFieldOffset + extraFieldLength - 3;\n        while (extraFieldOffset < efEnd) {\n          const type = view.getUint16(extraFieldOffset, true);\n          let size = view.getUint16(extraFieldOffset + 2, true);\n          extraFieldOffset += 4;\n\n          // zip64 info\n          if (type === 1) {\n            if (uncompressedSize === MAX_INT32 && size >= 8) {\n              uncompressedSize = this.getUint64(view, extraFieldOffset, true);\n              extraFieldOffset += 8;\n              size -= 8;\n            }\n            if (compressedSize === MAX_INT32 && size >= 8) {\n              compressedSize = this.getUint64(view, extraFieldOffset, true);\n              extraFieldOffset += 8;\n              size -= 8;\n            }\n            if (localEntryOffset === MAX_INT32 && size >= 8) {\n              localEntryOffset = this.getUint64(view, extraFieldOffset, true);\n              extraFieldOffset += 8;\n              size -= 8;\n            }\n          }\n\n          extraFieldOffset += size;\n        }\n      }\n\n      const directory = filename.endsWith(\"/\");\n\n      if (!directory) {\n        entries[filename] = {\n          filename,\n          deflate,\n          uncompressedSize,\n          compressedSize,\n          localEntryOffset,\n        };\n\n        // optimization if no extraFieldLength, can set offset and avoid extra lookup\n        if (!extraFieldLength) {\n          entries[filename].offset = 30 + fileNameLength + localEntryOffset;\n        }\n      }\n\n      offset += 46 + fileNameLength + extraFieldLength + fileCommentLength;\n    }\n    return entries;\n  }\n\n  getCompressedSize(name: string): number {\n    if (this.entries === null) {\n      return 0;\n    }\n\n    const entry = this.entries[name];\n\n    if (!entry) {\n      return 0;\n    }\n\n    return isNaN(entry.compressedSize) ? 0 : entry.compressedSize;\n  }\n\n  async loadFile(\n    name: string,\n    {\n      offset = 0,\n      length = -1,\n      signal = null,\n      unzip = false,\n      computeHash = false,\n    }: {\n      offset?: number;\n      length?: number;\n      signal?: AbortSignal | null;\n      unzip?: boolean;\n      computeHash?: boolean;\n    } = {},\n  ): Promise<ReaderAndHasher> {\n    if (this.entries === null) {\n      await this.load();\n    }\n\n    if (!this.entries) {\n      throw new Error(\"entries not loaded\");\n    }\n\n    const entry = this.entries[name];\n\n    if (!entry) {\n      throw new Error(\"file not found in zip: \" + name);\n    }\n\n    if (entry.offset === undefined) {\n      const header = (await this.loader.getRange(\n        entry.localEntryOffset,\n        30,\n        false,\n      )) as Uint8Array;\n      const view = new DataView(\n        header.buffer,\n        header.byteOffset,\n        header.byteLength,\n      );\n\n      const fileNameLength = view.getUint16(26, true);\n      const extraFieldLength = view.getUint16(28, true);\n\n      entry.offset =\n        30 + fileNameLength + extraFieldLength + entry.localEntryOffset;\n      this.entriesUpdated = true;\n    }\n\n    length =\n      length < 0\n        ? entry.compressedSize\n        : Math.min(length, entry.compressedSize - offset);\n\n    offset += entry.offset;\n\n    const body = (await this.loader.getRange(\n      offset,\n      length,\n      true,\n      signal,\n    )) as ReadableStream;\n\n    const streamReader: ReadableStreamDefaultReader = body.getReader();\n    let hasher: HashingAsyncIterReader | null = null;\n\n    const wrapHasher = (reader: AsyncIterReader): AsyncIterReader => {\n      if (computeHash && this.enableHashing) {\n        hasher = new HashingAsyncIterReader(reader);\n        return hasher;\n      }\n      return reader;\n    };\n\n    let reader: AsyncIterReader;\n\n    // if not unzip, deflate if needed only\n    if (!unzip) {\n      reader = new AsyncIterReader(\n        streamReader,\n        entry.deflate ? \"deflate\" : null,\n      );\n      // if unzip and not deflated, reuse AsyncIterReader for auto unzipping\n    } else if (!entry.deflate) {\n      reader = new AsyncIterReader(streamReader);\n    } else {\n      // need to deflate, than unzip again\n      reader = new AsyncIterReader(\n        new AsyncIterReader(streamReader, \"deflate\"),\n      );\n    }\n\n    reader = wrapHasher(reader);\n\n    return { reader, hasher };\n  }\n\n  // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\n  getUint64(dataview: DataView, byteOffset: number, littleEndian: boolean) {\n    // split 64-bit number into two 32-bit (4-byte) parts\n    const left = dataview.getUint32(byteOffset, littleEndian);\n    const right = dataview.getUint32(byteOffset + 4, littleEndian);\n\n    // combine the two 32-bit values\n    const combined = littleEndian\n      ? left + 2 ** 32 * right\n      : 2 ** 32 * left + right;\n\n    if (!Number.isSafeInteger(combined))\n      console.warn(combined, \"exceeds MAX_SAFE_INTEGER. Precision may be lost\");\n\n    return combined;\n  }\n}\n\n// ===========================================================================\nexport class ZipBlockLoader extends BaseLoader {\n  zipreader: ZipRangeReader;\n  filename: string;\n\n  constructor(zipreader: ZipRangeReader, filename: string) {\n    super(true);\n    this.zipreader = zipreader;\n    this.filename = filename;\n  }\n\n  get isValid() {\n    return true;\n  }\n\n  async doInitialFetch(tryHead = false) {\n    await this.zipreader.load();\n\n    this.length = this.zipreader.getCompressedSize(this.filename);\n\n    let stream: ReadableStream<Uint8Array> | null = null;\n\n    if (!tryHead) {\n      const { reader } = await this.zipreader.loadFile(this.filename, {\n        unzip: true,\n      });\n      stream = getReadableStreamFromIter(reader);\n    }\n\n    const response = new Response(stream);\n\n    return { response, abort: null };\n  }\n\n  async getLength() {\n    if (this.length === null) {\n      await this.doInitialFetch(true);\n    }\n\n    return this.length || 0;\n  }\n\n  async getRange(\n    offset: number,\n    length: number,\n    streaming = false,\n    signal = null,\n  ) {\n    const { reader } = await this.zipreader.loadFile(this.filename, {\n      offset,\n      length,\n      signal,\n      unzip: true,\n    });\n\n    if (streaming) {\n      return getReadableStreamFromIter(reader);\n    } else {\n      return await reader.readFully();\n    }\n  }\n}\n"]}