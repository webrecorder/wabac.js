{"version":3,"file":"waczfile.js","sourceRoot":"","sources":["../../src/wacz/waczfile.ts"],"names":[],"mappings":"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","sourcesContent":["import { type BaseLoader } from \"../blockloaders\";\nimport {\n  type LoadWACZEntry,\n  ZipBlockLoader,\n  ZipRangeReader,\n} from \"./ziprangereader\";\n\nexport const NO_LOAD_WACZ = \"local\";\nexport const DEFAULT_WACZ = \"default\";\n\nexport type IndexType = 0 | 1 | 2;\nexport const INDEX_NOT_LOADED = 0;\nexport const INDEX_CDX = 1;\nexport const INDEX_IDX = 2;\n\nexport type WACZType = \"wacz\" | \"multi-wacz\";\nexport const WACZ_LEAF = \"wacz\";\nexport const MULTI_WACZ = \"multi-wacz\";\n\n// ==========================================================================\nexport interface WACZLoadSource {\n  getLoadPath: (path: string) => string;\n\n  getName: (name: string) => string;\n\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createLoader: (opts: any) => Promise<BaseLoader>;\n}\n\n// ==========================================================================\nexport type WACZFileInitOptions = {\n  waczname?: string;\n  hash?: string;\n  path?: string;\n  parent?: WACZLoadSource | null;\n  fileType?: WACZType;\n  crawlId?: string;\n  indexType?: IndexType;\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entries?: Record<string, any> | null;\n  nonSurt?: boolean;\n  loader?: BaseLoader | null;\n};\n\n// ==========================================================================\nexport type WACZFileOptions = WACZFileInitOptions & {\n  waczname: string;\n  hash: string;\n};\n\n// ==========================================================================\nexport class WACZFile implements WACZLoadSource {\n  waczname?: string;\n  hash?: string;\n  path?: string;\n  crawlId?: string;\n  parent: WACZLoadSource | null;\n  fileType: WACZType;\n  indexType: IndexType;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entries: Record<string, any> | null;\n  nonSurt: boolean;\n  loader: BaseLoader | null;\n  zipreader: ZipRangeReader | null;\n\n  constructor({\n    waczname,\n    hash,\n    path,\n    parent = null,\n    entries = null,\n    fileType = WACZ_LEAF,\n    indexType = INDEX_NOT_LOADED,\n    nonSurt = false,\n    loader = null,\n    crawlId,\n  }: WACZFileInitOptions) {\n    this.waczname = waczname;\n    this.hash = hash;\n    this.path = path;\n    this.loader = loader;\n    this.parent = parent;\n    this.zipreader = null;\n    this.entries = entries;\n    this.indexType = indexType;\n    this.fileType = fileType;\n    this.nonSurt = nonSurt;\n    this.crawlId = crawlId;\n  }\n\n  markAsMultiWACZ() {\n    this.fileType = MULTI_WACZ;\n  }\n\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async init(path?: string): Promise<Record<string, any>> {\n    if (path) {\n      this.path = path;\n    }\n    if (this.loader) {\n      return await this.initFromLoader(this.loader);\n    }\n    if (!this.parent) {\n      throw new Error(\"must have either loader or parent\");\n    }\n    const loader = await this.parent.createLoader({ url: this.path });\n\n    return await this.initFromLoader(loader);\n  }\n\n  private async initFromLoader(loader: BaseLoader) {\n    this.zipreader = new ZipRangeReader(loader, this.entries);\n\n    if (!this.entries) {\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      this.entries = (await this.zipreader.load()) || {};\n    }\n\n    return this.entries;\n  }\n\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async loadFile(filename: string, opts: Record<string, any>): LoadWACZEntry {\n    if (!this.zipreader) {\n      await this.init();\n    }\n\n    return await this.zipreader!.loadFile(filename, opts);\n  }\n\n  containsFile(filename: string) {\n    return this.entries && !!this.entries[filename];\n  }\n\n  getSizeOf(filename: string) {\n    return this.zipreader ? this.zipreader.getCompressedSize(filename) : 0;\n  }\n\n  serialize() {\n    return {\n      waczname: this.waczname,\n      hash: this.hash,\n      path: this.path,\n      crawlId: this.crawlId,\n      entries: this.entries,\n      indexType: this.indexType,\n      nonSurt: this.nonSurt,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async save(db: any, always = false) {\n    const zipreader = this.zipreader;\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (always || (zipreader && zipreader.entriesUpdated)) {\n      await db.put(\"waczfiles\", this.serialize());\n      if (zipreader) {\n        zipreader.entriesUpdated = false;\n      }\n    }\n  }\n\n  iterContainedFiles() {\n    return this.entries ? Object.keys(this.entries) : [];\n  }\n\n  getLoadPath(path: string) {\n    return this.waczname + \"#!/\" + path;\n  }\n\n  getName(name: string) {\n    return this.waczname + \"#!/\" + name;\n  }\n\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async createLoader(opts: any): Promise<BaseLoader> {\n    const { url } = opts;\n    const inx = url.lastIndexOf(\"#!/\");\n\n    if (!this.zipreader) {\n      await this.init();\n    }\n\n    if (inx >= 0) {\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      return new ZipBlockLoader(this.zipreader!, url.slice(inx + 3));\n    } else {\n      throw new Error(\"invalid wacz url: \" + url);\n    }\n  }\n}\n"]}