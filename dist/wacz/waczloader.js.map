{"version":3,"file":"waczloader.js","sourceRoot":"","sources":["../../src/wacz/waczloader.ts"],"names":[],"mappings":"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","sourcesContent":["import { type BaseLoader } from \"../blockloaders\";\nimport { type CollConfig, type ArchiveLoader } from \"../types\";\nimport { MAX_FULL_DOWNLOAD_SIZE } from \"../utils\";\n\nimport { WARCLoader } from \"../warcloader\";\n\nimport { DEFAULT_WACZ, WACZFile } from \"./waczfile\";\nimport { WACZImporter } from \"./waczimporter\";\nimport { type ZipRangeReader } from \"./ziprangereader\";\n\n// ============================================================================\nexport class SingleWACZLoader implements ArchiveLoader {\n  loader: BaseLoader;\n  loadId: string | null = null;\n  loadUrl: string;\n\n  constructor(\n    loader: BaseLoader,\n    config: CollConfig,\n    loadId: string | null = null,\n  ) {\n    this.loader = loader;\n    this.loadId = loadId;\n    this.loadUrl = config.loadUrl!;\n  }\n\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async load(db: any /*progressUpdate, fullTotalSize*/) {\n    // if size less than MAX_FULL_DOWNLOAD_SIZE\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const loader = this.loader as any;\n    if (\n      db.fullConfig &&\n      loader.arrayBuffer &&\n      loader.arrayBuffer.byteLength <= MAX_FULL_DOWNLOAD_SIZE\n    ) {\n      if (!db.fullConfig.extra) {\n        db.fullConfig.extra = {};\n      }\n      db.fullConfig.extra.arrayBuffer = loader.arrayBuffer;\n    }\n\n    const name = DEFAULT_WACZ;\n    const path = this.loadUrl;\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return await db.addNewWACZ({ name, path, loader });\n  }\n}\n\n// ==========================================================================\nexport class SingleWACZFullImportLoader implements ArchiveLoader {\n  loader: BaseLoader;\n  loadId: string | null = null;\n  config: CollConfig;\n\n  constructor(\n    loader: BaseLoader,\n    config: CollConfig,\n    loadId: string | null = null,\n  ) {\n    this.config = config;\n    this.loadId = loadId;\n\n    this.loader = loader;\n  }\n\n  async load(\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    db: any,\n    progressUpdateCallback: // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | ((prog: number, x: any, offset: number, size: number) => void)\n      | null = null,\n    fullTotalSize = 0,\n  ) {\n    const file = new WACZFile({ loader: this.loader });\n    await file.init();\n\n    const zipreader = file.zipreader!;\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    const importer = new WACZImporter(db, file);\n\n    const metadata = await importer.load();\n\n    let offsetTotal = 0;\n\n    const progressUpdate = (\n      percent: number,\n      error: string,\n      offset: number /*, total*/,\n    ) => {\n      offset += offsetTotal;\n      if (progressUpdateCallback && fullTotalSize) {\n        progressUpdateCallback(\n          Math.round((offset * 100.0) / fullTotalSize),\n          null,\n          offset,\n          fullTotalSize,\n        );\n      }\n    };\n\n    // load CDX and IDX\n    for (const filename of file.iterContainedFiles()) {\n      const entryTotal = zipreader.getCompressedSize(filename);\n      if (filename.endsWith(\".warc.gz\") || filename.endsWith(\".warc\")) {\n        await this.loadWARC(\n          db,\n          zipreader,\n          filename,\n          progressUpdate,\n          entryTotal,\n        );\n      }\n\n      offsetTotal += entryTotal;\n    }\n\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return metadata || {};\n  }\n\n  async loadWARC(\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    db: any,\n    zipreader: ZipRangeReader,\n    filename: string,\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    progressUpdate: any,\n    total: number,\n  ) {\n    const { reader } = await zipreader.loadFile(filename, { unzip: true });\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (!reader) {\n      throw new Error(\"no WARC found\");\n    }\n\n    const loader = new WARCLoader(reader, null, filename);\n    loader.detectPages = false;\n\n    return await loader.load(db, progressUpdate, total);\n  }\n}\n\n// ==========================================================================\nexport class JSONResponseMultiWACZLoader implements ArchiveLoader {\n  response: Response;\n\n  constructor(response: Response) {\n    this.response = response;\n  }\n\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async load(db: any) {\n    try {\n      // [TODO]\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return await db.loadFromJSON(this.response);\n    } catch (_) {\n      return {};\n    }\n  }\n}\n"]}