{"version":3,"file":"statstracker.js","sourceRoot":"","sources":["../src/statstracker.ts"],"names":[],"mappings":"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","sourcesContent":["let self: ServiceWorkerGlobalScope;\n\ntype TimeRangeStat = {\n  count: number;\n  children: Set<string>;\n  min?: number;\n  max?: number;\n};\n\nclass StatsTracker {\n  timeRanges: Record<string, TimeRangeStat> = {};\n\n  updateStats(date: Date, status: number, request: Request, event: FetchEvent) {\n    const id = event.clientId || event.resultingClientId;\n\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (!id || !date) {\n      return;\n    }\n\n    if (!request.url || request.url.indexOf(\"mp_/\") < 0) {\n      return;\n    }\n\n    if (request.destination === \"document\" && status > 300 && status < 400) {\n      return;\n    }\n\n    let timeRange: TimeRangeStat;\n\n    if (this.timeRanges[id] === undefined) {\n      timeRange = { count: 0, children: new Set<string>() };\n      this.timeRanges[id] = timeRange;\n      if (request.referrer.indexOf(\"mp_/\") > 0) {\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        self.clients\n          .matchAll({ type: \"window\" })\n          .then((clients) =>\n            this.updateStatsParent(id, request.referrer, clients),\n          );\n      }\n    } else {\n      timeRange = this.timeRanges[id];\n    }\n\n    const timestamp = date.getTime();\n\n    if (!timeRange.min || timestamp < timeRange.min) {\n      timeRange.min = timestamp;\n    }\n\n    if (!timeRange.max || timestamp > timeRange.max) {\n      timeRange.max = timestamp;\n    }\n\n    timeRange.count++;\n  }\n\n  updateStatsParent(\n    id: string,\n    referrer: string,\n    clients: readonly WindowClient[],\n  ) {\n    for (const client of clients) {\n      if (client.url === referrer) {\n        //self.timeRanges[id].parent = client.id;\n        if (!this.timeRanges[client.id]) {\n          this.timeRanges[client.id] = {\n            count: 0,\n            children: new Set<string>(),\n          };\n        }\n        // @ts-expect-error [TODO] - TS2532 - Object is possibly 'undefined'.\n        this.timeRanges[client.id].children.add(id);\n        break;\n      }\n    }\n  }\n\n  async getStats(event: FetchEvent) {\n    //const client = await self.clients.get(fe.clientId);\n\n    //const timeRange = self.timeRanges[client.url] || {};\n\n    const reqUrl = new URL(event.request.url);\n\n    const params = new URLSearchParams(reqUrl.search);\n\n    let id = \"\";\n\n    const url = params.get(\"url\");\n\n    const clients = await self.clients.matchAll({ type: \"window\" });\n\n    const validIds: Record<string, number> = {};\n\n    for (const client of clients) {\n      if (client.url === url) {\n        id = client.id;\n      }\n      validIds[client.id] = 1;\n    }\n\n    const srcRange = this.timeRanges[id] || {};\n\n    const timeRange = {\n      // @ts-expect-error [TODO] - TS2339 - Property 'count' does not exist on type '{}'.\n      count: srcRange.count || 0,\n      // @ts-expect-error [TODO] - TS2339 - Property 'min' does not exist on type '{}'.\n      min: srcRange.min,\n      // @ts-expect-error [TODO] - TS2339 - Property 'max' does not exist on type '{}'.\n      max: srcRange.max,\n    };\n\n    // @ts-expect-error [TODO] - TS2532 - Object is possibly 'undefined'.\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    const children = this.timeRanges[id] && this.timeRanges[id].children;\n\n    // @ts-expect-error [TODO] - TS2532 - Object is possibly 'undefined'.\n    for (const child of children.values()) {\n      const childRange = this.timeRanges[child];\n\n      if (!childRange) {\n        continue;\n      }\n\n      if (\n        childRange.min &&\n        (!timeRange.min || childRange.min < timeRange.min)\n      ) {\n        timeRange.min = childRange.min;\n      }\n\n      if (\n        childRange.max &&\n        (!timeRange.max || childRange.max > timeRange.max)\n      ) {\n        timeRange.max = childRange.max;\n      }\n\n      timeRange.count += childRange.count;\n    }\n\n    // remove invalid timeranges\n    for (const id of Object.keys(this.timeRanges)) {\n      if (!validIds[id]) {\n        delete this.timeRanges[id];\n      }\n    }\n\n    return new Response(JSON.stringify(timeRange), {\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n  }\n}\n\nexport { StatsTracker };\n"]}