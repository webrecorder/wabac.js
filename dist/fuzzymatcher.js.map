{"version":3,"file":"fuzzymatcher.js","sourceRoot":"","sources":["../src/fuzzymatcher.ts"],"names":[],"mappings":"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","sourcesContent":["import levenshtein from \"js-levenshtein\";\nimport { jsonToQueryParams } from \"warcio\";\n\ntype FuzzyRule = {\n  match?: RegExp;\n  fuzzyCanonReplace?: string;\n  replace?: string;\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  args?: any[][];\n  split?: string;\n  splitLast?: boolean;\n  fuzzyArgs?: boolean;\n  fuzzySet?: boolean;\n  maxResults?: number;\n};\n\ntype FuzzyResEntry = {\n  url: string;\n  status?: number | undefined;\n  fuzzyMatchUrl?: string;\n};\n\ntype KeySet = {\n  found: Set<string>;\n  value: string[];\n};\n\ntype KeySets = Record<string, KeySet>;\n\nfunction joinRx(rxStr: string[]) {\n  return new RegExp(\n    \"[?&]\" + rxStr.map((x: string) => \"(\" + x + \")\").join(\"|\"),\n    \"gi\",\n  );\n}\n\nconst MAX_ARG_LEN = 1024;\n\nconst SPLIT_BASE_RX = /\\[\\d]+/;\n\nconst DEFAULT_RULES: FuzzyRule[] = [\n  {\n    match:\n      /\\/\\/.*(?:gcs-vimeo|vod|vod-progressive|vod-adaptive)\\.akamaized\\.net.*?\\/([\\d/]+\\.mp4)/,\n    fuzzyCanonReplace: \"//vimeo-cdn.fuzzy.replayweb.page/$1\",\n    split: \".net\",\n  },\n  {\n    match: /\\/\\/.*player.vimeo.com\\/(video\\/[\\d]+)\\?.*/i,\n    fuzzyCanonReplace: \"//vimeo.fuzzy.replayweb.page/$1\",\n  },\n  {\n    match: /www.\\washingtonpost\\.com\\/wp-apps\\/imrs.php/,\n    args: [[\"src\"]],\n  },\n  {\n    match: /(static.wixstatic.com\\/.*\\.[\\w]+\\/v1\\/fill\\/)(w_.*)/,\n    replace: \"$1?_args=$2\",\n    split: \"/v1/fill\",\n  },\n  {\n    match: /(twimg.com\\/profile_images\\/[^/]+\\/[^_]+)_([\\w]+\\.[\\w]+)/,\n    replace: \"$1=_args=$2\",\n    split: \"_\",\n    splitLast: true,\n  },\n  // YouTube\n  {\n    match: /^https?:\\/\\/(?:www\\.)?(youtube\\.com\\/embed\\/[^?]+)[?].*/i,\n    replace: \"$1\",\n  },\n  {\n    match: /^(https?:\\/\\/(?:www\\.)?)(youtube\\.com\\/@[^?]+)[?].*/i,\n    fuzzyCanonReplace: \"$1$2\",\n  },\n  {\n    match: /\\/\\/(?:www\\.)?youtube(?:-nocookie)?\\.com\\/(get_video_info)/i,\n    fuzzyCanonReplace: \"//youtube.fuzzy.replayweb.page/$1\",\n    args: [[\"video_id\"]],\n  },\n  {\n    match:\n      /\\/\\/(?:www\\.)?youtube(?:-nocookie)?\\.com\\/(youtubei\\/v1\\/[^?]+\\?).*(videoId[^&]+).*/i,\n    fuzzyCanonReplace: \"//youtube.fuzzy.replayweb.page/$1$2\",\n    args: [[\"videoId\"]],\n  },\n  {\n    match: /\\/\\/.*googlevideo.com\\/(videoplayback)/i,\n    fuzzyCanonReplace: \"//youtube.fuzzy.replayweb.page/$1\",\n    args: [[\"id\", \"itag\"], [\"id\"]],\n    fuzzyArgs: true,\n  },\n  {\n    match: /facebook\\.com\\/ajax\\/pagelet\\/generic.php\\/photoviewerinitpagelet/i,\n    args: [\n      [{ arg: \"data\", keys: [\"query_type\", \"fbid\", \"v\", \"cursor\", \"data\"] }],\n    ],\n  },\n  // Twitter/X\n  {\n    match: /((?:twitter|x)\\.com\\/[^/]+\\/status\\/[^?]+)(\\?.*)/,\n    fuzzyCanonReplace: \"$1\",\n  },\n  {\n    match: /((?:twitter|x)\\.com\\/i\\/api\\/graphql\\/.*)/,\n    args: [[\"cursor\"]],\n    fuzzyArgs: true,\n  },\n  // Facebook\n  {\n    match: /facebook\\.com\\/ajax\\//i,\n    fuzzySet: true,\n  },\n  // {\n  //   \"match\": /facebook\\.com\\/api\\/graphql/i,\n  //   \"args\": [[\"fb_api_req_friendly_name\"]],\n  //   //\"args\": [[\"variables\", \"doc_id\"]],\n  //   //\"fuzzyArgs\": true\n  // },\n  // {\n  //   \"match\": /facebook\\.com\\/api\\/graphqlbatch/i,\n  //   \"args\": [[\"batch_name\", \"queries\"], [\"batch_name\"]]\n  // },\n  // {\n  //   \"match\": /facebook\\.com\\/ajax\\/navigation/i,\n  //   \"args\": [[\"route_url\", \"__user\"], [\"route_url\"]]\n  // },\n  // {\n  //   \"match\": /facebook\\.com\\/ajax\\/route-definition/i,\n  //   \"args\": [[\"route_url\", \"__user\"], [\"route_url\"]]\n  // },\n  // {\n  //   \"match\": /facebook\\.com\\/ajax\\/bulk-route-definitions/i,\n  //   \"args\": [[\"route_urls[0]\", \"__user\"], [\"route_urls[0]\"]]\n  // },\n  // {\n  //   \"match\": /facebook\\.com\\/ajax\\/relay-ef/i,\n  //   \"args\": [[\"queries[0]\", \"__user\"], [\"queries[0]\"]]\n  // },\n  // {\n  //   \"match\": /facebook\\.com\\/videos\\/vodcomments/i,\n  //   \"args\": [[\"eft_id\"]],\n  // },\n  // {\n  //   \"match\": /facebook\\.com\\/ajax\\.*/i,\n  //   \"replaceQuery\": /([?&][^_]\\w+=[^&]+)/g,\n  // },\n  // {\"match\": /plus\\.googleapis\\.com\\/u\\/\\/0\\/_\\/widget\\/render\\/comments/i,\n  //   \"args\": [[\"href\", \"stream_id\", \"substream_id\"]]\n  // },\n\n  // Generic Rules -- should be last\n  {\n    match: joinRx([\n      \"(callback=jsonp)[^&]+(?=&|$)\",\n      \"((?:\\\\w+)=jquery)[\\\\d]+_[\\\\d]+\",\n      \"utm_[^=]+=[^&]+(?=&|$)\",\n      \"(_|cb|_ga|\\\\w*cache\\\\w*)=[\\\\d.-]+(?=$|&)\",\n    ]),\n    replace: \"\",\n  },\n  {\n    match: /(\\.(?:js|webm|mp4|gif|jpg|png|css|json|m3u8))\\?.*/i,\n    replace: \"$1\",\n    maxResults: 2,\n  },\n];\n\n// ===========================================================================\nexport class FuzzyMatcher {\n  rules: FuzzyRule[];\n  constructor(rules?: FuzzyRule[]) {\n    this.rules = rules || DEFAULT_RULES;\n  }\n\n  getRuleFor(reqUrl: string) {\n    let rule;\n\n    const matchUrl = reqUrl.indexOf(\"?\") === -1 ? reqUrl + \"?\" : reqUrl;\n\n    for (const testRule of this.rules) {\n      // very large URLs likely do not match any of our existing rules, so just skip\n      if (\n        matchUrl.length < MAX_ARG_LEN * 4 &&\n        matchUrl.match(testRule.match!)\n      ) {\n        rule = testRule;\n        break;\n      }\n    }\n\n    let fuzzyCanonUrl = reqUrl;\n\n    if (rule?.fuzzyCanonReplace) {\n      fuzzyCanonUrl = reqUrl.replace(rule.match!, rule.fuzzyCanonReplace);\n    }\n\n    const split = rule?.split || \"?\";\n    const inx = rule?.splitLast\n      ? reqUrl.lastIndexOf(split)\n      : reqUrl.indexOf(split);\n    const prefix = inx > 0 ? reqUrl.slice(0, inx + split.length) : reqUrl;\n\n    return { prefix, rule, fuzzyCanonUrl };\n  }\n\n  getFuzzyCanonsWithArgs(reqUrl: string) {\n    // eslint-disable-next-line prefer-const\n    let { fuzzyCanonUrl, prefix, rule } = this.getRuleFor(reqUrl);\n\n    if (fuzzyCanonUrl === reqUrl) {\n      fuzzyCanonUrl = prefix;\n    }\n\n    const urls: string[] = [];\n\n    if (rule?.args) {\n      const fuzzUrl = new URL(fuzzyCanonUrl);\n      const origUrl = new URL(reqUrl);\n\n      for (const args of rule.args) {\n        const query = new URLSearchParams();\n\n        for (const arg of args) {\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          query.set(arg, origUrl.searchParams.get(arg) || \"\");\n        }\n        fuzzUrl.search = query.toString();\n        urls.push(fuzzUrl.href);\n      }\n      return urls;\n    }\n\n    return [fuzzyCanonUrl];\n  }\n\n  fuzzyCompareUrls(\n    reqUrl: string,\n    results: FuzzyResEntry[] | undefined,\n    matchedRule?: FuzzyRule,\n  ) {\n    if (!results?.length) {\n      return null;\n    }\n\n    if (\n      matchedRule?.replace !== undefined &&\n      matchedRule.match !== undefined &&\n      // if limit exists, only apply if < limit results\n      (!matchedRule.maxResults || results.length <= matchedRule.maxResults)\n    ) {\n      const match = matchedRule.match;\n      const replace = matchedRule.replace;\n      const fuzzyReqUrl = reqUrl.replace(match, replace);\n\n      const newResults: FuzzyResEntry[] = [];\n\n      // find best match by regex\n      for (const result of results) {\n        const url = result.url;\n\n        const fuzzyMatchUrl = url.replace(match, replace);\n\n        if (fuzzyReqUrl === fuzzyMatchUrl) {\n          // exact match, return\n          return result;\n        }\n\n        result.fuzzyMatchUrl = fuzzyMatchUrl;\n        newResults.push(result);\n      }\n\n      results = newResults;\n      reqUrl = fuzzyReqUrl;\n    }\n\n    return this.fuzzyBestMatchQuery(reqUrl, results, matchedRule);\n  }\n\n  fuzzyBestMatchQuery(\n    reqUrlStr: string,\n    results: FuzzyResEntry[],\n    rule?: FuzzyRule,\n  ): FuzzyResEntry | null {\n    let reqUrl: URL;\n\n    try {\n      reqUrl = new URL(reqUrlStr);\n    } catch (_e) {\n      return null;\n    }\n\n    const reqArgs: Set<string> | null =\n      rule?.args && !rule.fuzzyArgs ? new Set<string>(rule.args[0]) : null;\n\n    let bestTotal = Number.MIN_SAFE_INTEGER;\n    let bestResult = null;\n\n    const reqQuery = new URLSearchParams(reqUrl.search);\n\n    for (const result of results) {\n      // skip 204s and 304s from fuzzy matching (todo: reexamine)\n      if (result.status === 204 || result.status === 304) {\n        continue;\n      }\n\n      let url: URL;\n\n      try {\n        url = new URL(result.fuzzyMatchUrl || result.url);\n      } catch (_e) {\n        continue;\n      }\n\n      const foundQuery = new URLSearchParams(url.search);\n      let total = this.getMatch(reqQuery, foundQuery, reqArgs, rule?.fuzzySet);\n      total += this.getMatch(foundQuery, reqQuery, reqArgs);\n      total /= 2.0;\n\n      // lower total score for status >200\n      if (result.status! > 200) {\n        total += (200 - result.status!) * 0.1;\n      }\n\n      //console.log('total: ' + total + ' ' + url.href + ' <=> ' + reqUrl);\n\n      if (total > bestTotal) {\n        bestTotal = total;\n        bestResult = result;\n      }\n    }\n\n    //console.log(\"best: \" + bestResult.url);\n\n    //return {\"score\": bestTotal, \"result\": bestResult};\n    return bestResult;\n  }\n\n  getMatch(\n    reqQuery: URLSearchParams,\n    foundQuery: URLSearchParams,\n    reqArgs: Set<string> | null = null,\n    fuzzySet = false,\n  ) {\n    let score = 1.0;\n    let total = 1.0;\n\n    const keySets: KeySets = {};\n\n    // eslint-disable-next-line prefer-const\n    for (let [key, value] of reqQuery) {\n      let foundValue = foundQuery.get(key);\n\n      // if key is required, return a large negative to skip this match\n      if (reqArgs && reqArgs.has(key) && foundValue !== value) {\n        return -1000;\n      }\n\n      let weight;\n\n      if (key.startsWith(\"_\")) {\n        weight = 0.1;\n      } else {\n        weight = 10.0;\n      }\n\n      if (foundValue !== null) {\n        score += weight * 0.5;\n\n        if (foundValue.length > MAX_ARG_LEN) {\n          foundValue = foundValue.slice(0, MAX_ARG_LEN);\n        }\n      }\n\n      if (value && value.length > MAX_ARG_LEN) {\n        value = value.slice(0, MAX_ARG_LEN);\n      }\n\n      const numValue = Number(value);\n      const numFoundValue = Number(foundValue);\n\n      total += weight;\n\n      if (fuzzySet && foundValue) {\n        this.addSetMatch(keySets, key, value, foundValue);\n      }\n\n      if (foundValue === value) {\n        score += weight * value.length;\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      } else if (foundValue === null || value === null) {\n        score += 0.0;\n      } else if (!isNaN(numValue) && !isNaN(numFoundValue)) {\n        score += 10.0 - Math.log(Math.abs(numValue - numFoundValue) + 1);\n      } else if (value.startsWith(\"{\") && foundValue.startsWith(\"{\")) {\n        try {\n          const rQ = jsonToQueryParams(value);\n          const fQ = jsonToQueryParams(foundValue);\n\n          score += this.getMatch(rQ, fQ) * weight * 2;\n        } catch (_e) {\n          score += 0.5 * weight * this.levScore(value, foundValue);\n        }\n      } else {\n        // if (foundValue.length > value.length && foundValue.indexOf(\",\") >= 0 && foundValue.indexOf(value) >= 0) {\n        //   score += weight * value.length * 0.5;\n        // }\n        if (!fuzzySet) {\n          score += weight * this.levScore(value, foundValue);\n        }\n      }\n    }\n\n    const result =\n      score / total + (fuzzySet ? this.paramSetMatch(keySets, 100) : 0);\n    //console.log('score: ' + result + \" \" + reqQuery + \" <-> \" + foundQuery);\n    return result;\n  }\n\n  addSetMatch(\n    keySets: KeySets,\n    key: string,\n    value: string,\n    foundValue: string,\n  ) {\n    if (\n      !value ||\n      !foundValue ||\n      !value.startsWith(\"/\") ||\n      !foundValue.startsWith(\"/\")\n    ) {\n      return;\n    }\n\n    const keyParts = key.split(SPLIT_BASE_RX);\n\n    if (keyParts.length <= 1) {\n      return;\n    }\n\n    // compare set matches instead of by string\n    const valueQ = value.indexOf(\"?\");\n    const foundQ = foundValue.indexOf(\"?\");\n\n    const keyBase = keyParts[0];\n\n    const valueNoQ = valueQ > 0 ? value.slice(0, valueQ) : value;\n    const foundNoQ = foundQ > 0 ? foundValue.slice(0, foundQ) : foundValue;\n\n    // @ts-expect-error [TODO] - TS2538 - Type 'undefined' cannot be used as an index type.\n    if (!keySets[keyBase]) {\n      // @ts-expect-error [TODO] - TS2538 - Type 'undefined' cannot be used as an index type.\n      keySets[keyBase] = { value: [], found: new Set() };\n    }\n\n    // @ts-expect-error [TODO] - TS2538 - Type 'undefined' cannot be used as an index type.\n    keySets[keyBase].value.push(valueNoQ);\n    // @ts-expect-error [TODO] - TS2538 - Type 'undefined' cannot be used as an index type.\n    keySets[keyBase].found.add(foundNoQ);\n  }\n\n  paramSetMatch(keySets: KeySets, weight: number) {\n    let score = 0;\n\n    for (const keySet of Object.values(keySets)) {\n      let currWeight = weight;\n\n      for (const obj of keySet.value) {\n        if (keySet.found.has(obj)) {\n          score += currWeight;\n        }\n        currWeight *= 0.33;\n      }\n    }\n\n    return score;\n  }\n\n  levScore(val1: string, val2: string) {\n    const minLen = Math.min(val1.length, val2.length);\n    const lev = levenshtein(val1, val2);\n    return lev < minLen ? minLen - lev : 0;\n  }\n}\n\nexport const fuzzyMatcher = new FuzzyMatcher();\n"]}