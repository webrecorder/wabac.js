{"version":3,"file":"archivedb.js","sourceRoot":"","sources":["../src/archivedb.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  openDB,\n  deleteDB,\n  type IDBPDatabase,\n  type IDBPTransaction,\n} from \"idb/with-async-ittr\";\nimport {\n  tsToDate,\n  isNullBodyStatus,\n  makeHeaders,\n  digestMessage,\n  getTS,\n  getStatusText,\n  randomId,\n  PAGE_STATE_SYNCED,\n} from \"./utils\";\nimport { fuzzyMatcher } from \"./fuzzymatcher\";\nimport { ArchiveResponse } from \"./response\";\nimport {\n  type DBStore,\n  type DigestRefCount,\n  type PageEntry,\n  type ResAPIResponse,\n  type ResourceEntry,\n} from \"./types\";\nimport { type ArchiveRequest } from \"./request\";\nimport { type BaseAsyncIterReader } from \"warcio\";\n\nconst MAX_FUZZY_MATCH = 128000;\nconst MAX_RESULTS = 16;\nconst MAX_DATE_TS = new Date(\"9999-01-01\").getTime();\n\nconst REVISIT = \"warc/revisit\";\n\nconst EMPTY_PAYLOAD_SHA256 =\n  \"sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n\n// sha-1 digests often base32 encoded\nconst EMPTY_PAYLOAD_SHA1 = \"sha1:3I42H3S6NNFQ2MSVX7XZKYAYSCX5QBYJ\";\n\nconst DB_VERSION = 4;\n\nexport type ADBOpts = {\n  minDedupSize?: number | undefined;\n  noRefCounts?: unknown;\n  noFuzzyCheck?: boolean;\n  noRevisits?: boolean;\n  pageId?: string;\n};\n\nexport type ADBType = {\n  pages: {\n    key: string;\n    value: PageEntry & { size?: number };\n    indexes: { url: string; ts: string; state: number };\n  };\n  pageLists: {\n    key: string;\n    value: {\n      pages?: unknown[];\n      show?: boolean;\n      title?: string | undefined;\n      desc?: string | undefined;\n      slug?: string | undefined;\n    };\n  };\n  curatedPages: {\n    key: string;\n    value: PageEntry;\n    indexes: { listPages: [string, string] };\n  };\n  resources: {\n    key: [string, string];\n    value: ResourceEntry;\n    indexes: { pageId: string; mimeStatusUrl: [string, string, string] };\n  };\n  payload: {\n    key: string;\n    value: { digest: string; payload: Uint8Array | null };\n    indexes: { digest: string };\n  };\n  digestRef: {\n    key: string;\n    value: DigestRefCount | null;\n    indexes: { digest: string };\n  };\n};\n// ===========================================================================\n// TODO @emma-sg make this generic so that it can be extended with other DB schemas\nexport class ArchiveDB implements DBStore {\n  name: string;\n  minDedupSize: number;\n  version: number;\n  autoHttpsCheck = true;\n  useRefCounts = false;\n  allowRepeats = true;\n  repeatTracker: RepeatTracker | null = null;\n  fuzzyPrefixSearch = true;\n  initing: Promise<void>;\n  db: IDBPDatabase<ADBType> | null = null;\n\n  constructor(name: string, opts: ADBOpts | undefined = {}) {\n    this.name = name;\n    this.db = null;\n\n    const { minDedupSize, noRefCounts } = opts;\n    this.minDedupSize = Number.isInteger(minDedupSize) ? minDedupSize! : 1024;\n\n    this.version = DB_VERSION;\n\n    this.autoHttpsCheck = true;\n    this.useRefCounts = !noRefCounts;\n\n    this.allowRepeats = true;\n    this.repeatTracker = new RepeatTracker();\n    this.fuzzyPrefixSearch = true;\n\n    this.initing = this.init();\n  }\n\n  async init() {\n    let oldVersion = 0;\n\n    this.db = await openDB(this.name, this.version, {\n      upgrade: (db, oldV, newV, tx) => {\n        oldVersion = oldV;\n        this._initDB(db, oldV, newV, tx);\n      },\n      blocking: (_, oldV) => {\n        if (!oldV) {\n          this.close();\n        }\n      },\n    });\n\n    if (oldVersion === 1) {\n      await this.convertCuratedPagesToV2(this.db);\n    }\n  }\n\n  _initDB(\n    db: IDBPDatabase<ADBType>,\n    oldV: number,\n    _newV: number | null,\n    _tx?: IDBPTransaction<\n      ADBType,\n      (keyof ADBType)[],\n      \"readwrite\" | \"versionchange\"\n    >,\n  ) {\n    if (!oldV) {\n      const pageStore = db.createObjectStore(\"pages\", { keyPath: \"id\" });\n      pageStore.createIndex(\"url\", \"url\");\n      pageStore.createIndex(\"ts\", \"ts\");\n      pageStore.createIndex(\"state\", \"state\");\n\n      db.createObjectStore(\"pageLists\", { keyPath: \"id\", autoIncrement: true });\n\n      const curatedPages = db.createObjectStore(\"curatedPages\", {\n        keyPath: \"id\",\n        autoIncrement: true,\n      });\n      curatedPages.createIndex(\"listPages\", [\"list\", \"pos\"]);\n\n      const urlStore = db.createObjectStore(\"resources\", {\n        keyPath: [\"url\", \"ts\"],\n      });\n      urlStore.createIndex(\"pageId\", \"pageId\");\n      //urlStore.createIndex(\"pageUrlTs\", [\"pageId\", \"url\", \"ts\"]);\n      //urlStore.createIndex(\"ts\", \"ts\");\n      urlStore.createIndex(\"mimeStatusUrl\", [\"mime\", \"status\", \"url\"]);\n\n      const payloadStore = db.createObjectStore(\"payload\", {\n        keyPath: \"digest\",\n      });\n      payloadStore.createIndex(\"digest\", \"digest\", { unique: true });\n\n      const digestRef = db.createObjectStore(\"digestRef\", {\n        keyPath: \"digest\",\n      });\n      digestRef.createIndex(\"digest\", \"digest\", { unique: true });\n    }\n  }\n\n  async clearAll() {\n    const stores = [\"pages\", \"resources\", \"payload\", \"digestRef\"] as const;\n\n    if (!this.db) {\n      return;\n    }\n\n    for (const store of stores) {\n      await this.db.clear(store);\n    }\n  }\n\n  close() {\n    if (this.db) {\n      this.db.close();\n      this.db = null;\n    }\n  }\n\n  async delete() {\n    this.close();\n    await deleteDB(this.name, {\n      blocked(_, e) {\n        // eslint-disable-next-line @typescript-eslint/no-base-to-string\n        console.log(\"Unable to delete: \" + e);\n      },\n    });\n  }\n\n  async addPage(\n    page: PageEntry,\n    tx?: IDBPTransaction<ADBType, [keyof ADBType], \"readwrite\"> | null,\n  ) {\n    const url = page.url;\n    const title = page.title || page.url;\n    const id = page.id || this.newPageId();\n    const state = page.state || PAGE_STATE_SYNCED;\n    let ts = page.ts;\n\n    if (typeof ts !== \"number\") {\n      if (page.timestamp) {\n        ts = tsToDate(page.timestamp).getTime();\n      } else {\n        const date = page.ts || page.date || page.datetime;\n        if (date) {\n          ts = new Date(date).getTime();\n        }\n      }\n    }\n\n    const p = { ...page, url, ts, title, id, state };\n\n    if (tx) {\n      void tx.store.put(p);\n      return p.id;\n    } else {\n      return await this.db!.put(\"pages\", p);\n    }\n  }\n\n  async addPages(\n    pages: PageEntry[],\n    pagesTable: keyof ADBType = \"pages\",\n    update = false,\n  ) {\n    const tx = this.db!.transaction(pagesTable, \"readwrite\");\n\n    for (const page of pages) {\n      if (update) {\n        void tx.store.put(page);\n      } else {\n        void this.addPage(page, tx);\n      }\n    }\n\n    try {\n      await tx.done;\n    } catch (e) {\n      console.warn(\"addPages tx\", String(e));\n    }\n  }\n\n  async createPageList(data: {\n    title?: string;\n    desc?: string;\n    description?: string;\n    id?: string;\n    slug?: string;\n  }) {\n    const listData = {\n      title: data.title,\n      desc: data.desc || data.description,\n      slug: data.id || data.slug,\n    };\n    return await this.db!.put(\"pageLists\", listData);\n  }\n\n  async addCuratedPageList(\n    listInfo: Record<string, unknown>,\n    pages: PageEntry[],\n  ) {\n    const listId = await this.createPageList(listInfo);\n\n    let pos = 0;\n\n    for (const page of pages) {\n      page.pos = pos++;\n      page.list = listId;\n    }\n\n    await this.addPages(pages, \"curatedPages\");\n  }\n\n  async addCuratedPageLists(\n    pageLists: { [k: string]: PageEntry[] | undefined }[],\n    pageKey = \"pages\",\n    filter = \"public\",\n  ) {\n    for (const list of pageLists) {\n      if (filter && !list[filter]) {\n        continue;\n      }\n\n      const pages = list[pageKey] || [];\n\n      await this.addCuratedPageList(list, pages);\n    }\n  }\n\n  async convertCuratedPagesToV2(\n    db: IDBPDatabase<\n      ADBType & {\n        pages: { key: string; value: { page?: PageEntry } & PageEntry };\n        curatedPages: { key: string; value: { page?: PageEntry } & PageEntry };\n      }\n    >,\n  ) {\n    const curatedPages = (await db.getAll(\"curatedPages\")) as\n      | (PageEntry & {\n          page?: PageEntry;\n        })[]\n      | null;\n\n    if (!curatedPages?.length) {\n      return;\n    }\n\n    const pages = await db.getAll(\"pages\");\n    const pageMap = new Map();\n\n    for (const page of pages) {\n      pageMap.set(page.id, page);\n    }\n\n    for (const cpage of curatedPages) {\n      if (cpage.page) {\n        const page = pageMap.get(cpage.page);\n        if (page) {\n          cpage.id = this.newPageId();\n          cpage.url = page.url;\n          cpage.ts = page.ts;\n          if (!cpage.title && page.title) {\n            cpage.title = page.title;\n          }\n        }\n        delete cpage.page;\n      }\n    }\n\n    await db.clear(\"curatedPages\");\n\n    const tx = db.transaction(\"curatedPages\", \"readwrite\");\n\n    for (const cpage of curatedPages) {\n      void tx.store.put(cpage);\n    }\n\n    try {\n      await tx.done;\n    } catch (e) {\n      console.warn(\"Conversion Failed\", e);\n    }\n  }\n\n  async getCuratedPagesByList() {\n    const allLists = await this.db!.getAll(\"pageLists\");\n\n    const tx = this.db!.transaction(\"curatedPages\", \"readonly\");\n\n    for await (const cursor of tx.store.index(\"listPages\").iterate()) {\n      const list = allLists[cursor.value.list - 1] as\n        | (typeof allLists)[number]\n        | undefined;\n      if (!list) {\n        continue;\n      }\n      list.show = true;\n      if (!list.pages) {\n        list.pages = [];\n      }\n      list.pages.push(cursor.value);\n    }\n\n    return allLists;\n  }\n\n  newPageId() {\n    return randomId();\n  }\n\n  async getAllPages() {\n    return await this.db!.getAll(\"pages\");\n  }\n\n  async getPagesByUrl(url: string) {\n    return await this.db!.getAllFromIndex(\"pages\", \"url\", url);\n  }\n\n  async getPages(pages: string[]) {\n    const results: PageEntry[] = [];\n    pages.sort();\n\n    for await (const result of this.matchAny(\"pages\", null, pages)) {\n      results.push(result);\n    }\n\n    return results;\n  }\n\n  async getTimestampsByURL(url: string) {\n    const tx = this.db!.transaction(\"resources\");\n    const range = IDBKeyRange.bound([url], [url, MAX_DATE_TS]);\n    const results: string[] = [];\n    for await (const cursor of tx.store.iterate(range)) {\n      results.push((cursor.key as string[])[1]!);\n    }\n    return results;\n  }\n\n  async getPagesWithState(state: number) {\n    return await this.db!.getAllFromIndex(\"pages\", \"state\", state);\n  }\n\n  async getVerifyInfo() {\n    return {};\n  }\n\n  async addVerifyData(\n    _prefix = \"\",\n    _id: string,\n    _expected: string,\n    _actual: string | null = null,\n    _log = false,\n  ) {\n    return;\n  }\n\n  async addVerifyDataList(_prefix: string, _datalist: unknown[]) {\n    return;\n  }\n\n  async dedupResource(\n    digest: string,\n    payload: Uint8Array | null | undefined,\n    tx: IDBPTransaction<ADBType, (keyof ADBType)[], \"readwrite\">,\n    count = 1,\n  ): Promise<DigestRefCount | null> {\n    const digestRefStore = tx.objectStore(\"digestRef\");\n    const ref = await digestRefStore.get(digest);\n\n    if (ref) {\n      ++ref.count!;\n      return ref;\n      //digestRefStore.put(ref);\n      //return ref.count;\n    } else if (payload) {\n      try {\n        void tx.objectStore(\"payload\").put({ digest, payload });\n        const size = payload.length;\n        //digestRefStore.put({digest, count, size});\n        return { digest, count, size };\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    return null;\n  }\n\n  async addResources(datas: ResourceEntry[]) {\n    const revisits: ResourceEntry[] = [];\n    const redirectsAndErrors: ResourceEntry[] = [];\n    const regulars: ResourceEntry[] = [];\n\n    const digestRefCount: Record<string, DigestRefCount | null> = {};\n    const changedDigests = new Set<string>();\n\n    const dtx = this.db!.transaction([\"digestRef\", \"payload\"], \"readwrite\");\n\n    for (const data of datas) {\n      let refCount = 1;\n\n      const status = data.status || 200;\n\n      const array =\n        data.mime === REVISIT\n          ? revisits\n          : status >= 300\n            ? redirectsAndErrors\n            : regulars;\n\n      array.push(data);\n\n      const fuzzyUrlData = this.getFuzzyUrl(data);\n\n      if (fuzzyUrlData) {\n        array.push(fuzzyUrlData);\n        refCount = 2;\n      }\n\n      if (this.useRefCounts && data.digest) {\n        const currDigest = digestRefCount[data.digest];\n        if (!currDigest) {\n          digestRefCount[data.digest] = await this.dedupResource(\n            data.digest,\n            data.payload,\n            dtx,\n            refCount,\n          );\n        } else {\n          currDigest.count! += refCount;\n          changedDigests.add(data.digest);\n        }\n        delete data.payload;\n      }\n    }\n\n    if (this.useRefCounts) {\n      const digestRefStore = dtx.objectStore(\"digestRef\");\n\n      for (const digest of changedDigests) {\n        void digestRefStore.put(digestRefCount[digest]!);\n      }\n    }\n\n    try {\n      await dtx.done;\n    } catch (e) {\n      console.error(\"Payload and Ref Count Bulk Add Failed: \", e);\n    }\n\n    // Add resources\n    const tx = this.db!.transaction(\"resources\", \"readwrite\");\n\n    // First, add revisits\n    for (const data of revisits) {\n      void tx.store.put(data);\n    }\n\n    // Then, add non-revisit errors and redirects, overriding any revisits\n    for (const data of redirectsAndErrors) {\n      void tx.store.put(data);\n    }\n\n    // Then, add non-revisits success entries, overriding any previous entries\n    for (const data of regulars) {\n      void tx.store.put(data);\n    }\n\n    try {\n      await tx.done;\n    } catch (e) {\n      console.error(\"Resources Bulk Add Failed\", e);\n    }\n  }\n\n  getFuzzyUrl(result: ResourceEntry): ResourceEntry | null {\n    if (\n      result.status &&\n      result.status >= 200 &&\n      result.status < 400 &&\n      result.status !== 304 &&\n      result.status !== 204\n    ) {\n      const { fuzzyCanonUrl } = fuzzyMatcher.getRuleFor(result.url);\n\n      if (!fuzzyCanonUrl || fuzzyCanonUrl === result.url) {\n        return null;\n      }\n\n      const fuzzyRes = {\n        url: fuzzyCanonUrl,\n        ts: result.ts,\n        origURL: result.url,\n        origTS: result.ts,\n        pageId: result.pageId,\n        digest: result.digest,\n      };\n\n      return fuzzyRes;\n    }\n\n    return null;\n  }\n\n  async addResource(data: ResourceEntry): Promise<boolean> {\n    if (data.payload && data.payload.length > this.minDedupSize) {\n      if (!data.digest) {\n        data.digest = await digestMessage(data.payload, \"sha-256\");\n      }\n    }\n\n    let digestRefCount: DigestRefCount | null = null;\n    let isNew = false;\n\n    const tx = this.db!.transaction(\n      [\"resources\", \"digestRef\", \"payload\"],\n      \"readwrite\",\n    );\n\n    if (data.payload && data.payload.length > this.minDedupSize) {\n      digestRefCount = await this.dedupResource(\n        data.digest || \"\",\n        data.payload,\n        tx,\n      );\n      isNew = !!digestRefCount && digestRefCount.count === 1;\n      delete data.payload;\n    } else if (data.payload) {\n      isNew = true;\n    }\n\n    if (data.mime !== REVISIT) {\n      void tx.objectStore(\"resources\").put(data);\n\n      const fuzzyUrlData = this.getFuzzyUrl(data);\n\n      if (fuzzyUrlData) {\n        void tx.objectStore(\"resources\").put(fuzzyUrlData);\n        if (digestRefCount) {\n          digestRefCount.count!++;\n        }\n      }\n    } else {\n      // using add() to allow failing if non-revisit already exists\n      void tx.objectStore(\"resources\").add(data);\n    }\n\n    if (digestRefCount) {\n      void tx.objectStore(\"digestRef\").put(digestRefCount);\n    }\n\n    try {\n      await tx.done;\n    } catch (e) {\n      if (data.mime === REVISIT) {\n        console.log(\"Skip Duplicate revisit for: \" + data.url);\n      } else {\n        console.log(\"Add Error for \" + data.url);\n      }\n      console.log(e);\n    }\n\n    return isNew;\n  }\n\n  async getResource(\n    request: ArchiveRequest,\n    _prefix: string,\n    event: FetchEvent,\n    opts: ADBOpts = {},\n  ): Promise<ArchiveResponse | Response | null> {\n    const ts = tsToDate(request.timestamp).getTime();\n    let url: string = request.url;\n\n    let result: ResourceEntry | null = null;\n\n    const skip = this.repeatTracker\n      ? this.repeatTracker.getSkipCount(event, url, request.request.method)\n      : 0;\n    const newOpts = { ...opts, skip };\n\n    if (request.httpToHttpsNeeded) {\n      url = url.slice(url.indexOf(\"//\"));\n    }\n\n    if (url.startsWith(\"//\")) {\n      let useHttp = false;\n      result = await this.lookupUrl(\"https:\" + url, ts, newOpts);\n      if (!result) {\n        result = await this.lookupUrl(\"http:\" + url, ts, newOpts);\n        // use http if found or if referrer contains an http replay path\n        // otherwise, default to https\n        if (result || request.request.referrer.indexOf(\"/http://\", 2) > 0) {\n          useHttp = true;\n        }\n      }\n      url = (useHttp ? \"http:\" : \"https:\") + url;\n    } else {\n      result = await this.lookupUrl(url, ts, newOpts);\n      if (!result && this.autoHttpsCheck && url.startsWith(\"http://\")) {\n        const httpsUrl = url.replace(\"http://\", \"https://\");\n        result = await this.lookupUrl(httpsUrl, ts, newOpts);\n        if (result) {\n          url = httpsUrl;\n        }\n      }\n    }\n\n    if (!result && this.fuzzyPrefixSearch && !opts.noFuzzyCheck) {\n      result = await this.lookupQueryPrefix(url, opts);\n    }\n\n    // check if redirect\n    if (result?.origURL) {\n      const origResult = await this.lookupUrl(\n        result.origURL,\n        result.origTS || result.ts,\n        opts,\n      );\n      if (origResult) {\n        url = origResult.url;\n        result = origResult;\n      }\n    }\n\n    if (!result) {\n      return null;\n    }\n\n    const status = result.status || 0;\n    const statusText: string = result.statusText || getStatusText(status);\n\n    let payload = null;\n\n    if (!isNullBodyStatus(status)) {\n      payload = await this.loadPayload(result, opts);\n      if (!payload) {\n        return null;\n      }\n    }\n\n    const headers = result.respHeaders\n      ? makeHeaders(result.respHeaders)\n      : new Headers();\n\n    const date = new Date(result.ts);\n\n    const extraOpts = result.extraOpts || null;\n\n    url = result.url;\n\n    if (url !== request.url) {\n      headers.set(\"Content-Location\", url);\n    }\n\n    return new ArchiveResponse({\n      url,\n      payload: payload as Uint8Array | null,\n      status,\n      statusText,\n      headers,\n      date,\n      extraOpts,\n    });\n  }\n\n  async loadPayload(\n    result: ResourceEntry,\n    _opts: ADBOpts,\n  ): Promise<BaseAsyncIterReader | Uint8Array | null> {\n    if (result.digest && !result.payload) {\n      if (\n        result.digest === EMPTY_PAYLOAD_SHA256 ||\n        result.digest === EMPTY_PAYLOAD_SHA1\n      ) {\n        return new Uint8Array([]);\n      }\n      const payloadRes = await this.db!.get(\"payload\", result.digest);\n      if (!payloadRes) {\n        return null;\n      }\n      const { payload } = payloadRes;\n      return payload;\n    }\n\n    return result.payload || null;\n  }\n\n  isSelfRedirect(url: string, result: ResourceEntry | undefined) {\n    try {\n      if (\n        result?.respHeaders &&\n        result.status &&\n        result.status >= 300 &&\n        result.status < 400\n      ) {\n        const location = new Headers(result.respHeaders).get(\"location\") || \"\";\n        if (new URL(location, url).href === url) {\n          return true;\n        }\n      }\n    } catch (_e) {\n      // just in case, ignore errors here, assume not self-redirect\n    }\n\n    return false;\n  }\n\n  async lookupUrl(\n    url: string,\n    ts?: number,\n    opts: ADBOpts = {},\n  ): Promise<ResourceEntry | null> {\n    const tx = this.db!.transaction(\"resources\", \"readonly\");\n\n    if (ts) {\n      const range = IDBKeyRange.bound([url, ts], [url, MAX_DATE_TS]);\n\n      if (!opts.noRevisits && !opts.pageId) {\n        const result = await tx.store.get(range);\n\n        if (result && this.isSelfRedirect(url, result)) {\n          // assume the self-redirect URL is later then current URL\n          // allowing looking up ts + 10 seconds to match redirected to URL\n          ts += 1000 * 10;\n        } else if (result) {\n          return result;\n        }\n      } else {\n        let results = (await tx.store.getAll(range, MAX_RESULTS)) as\n          | ResourceEntry[]\n          | undefined;\n        results = results || [];\n\n        for (const result of results) {\n          if (opts.pageId && result.pageId && result.pageId !== opts.pageId) {\n            continue;\n          }\n\n          if (opts.noRevisits && result.mime === REVISIT) {\n            continue;\n          }\n\n          if (this.isSelfRedirect(url, result)) {\n            continue;\n          }\n\n          return result;\n        }\n      }\n    }\n\n    // search reverse from ts (or from latest capture)\n    const range = IDBKeyRange.bound([url], [url, ts || MAX_DATE_TS]);\n\n    for await (const cursor of tx.store.iterate(range, \"prev\")) {\n      const result = cursor.value;\n\n      if (opts.pageId && result.pageId && result.pageId !== opts.pageId) {\n        continue;\n      }\n\n      if (opts.noRevisits && result.mime === REVISIT) {\n        continue;\n      }\n\n      if (this.isSelfRedirect(url, result)) {\n        continue;\n      }\n\n      return result;\n    }\n\n    return null;\n  }\n\n  async lookupQueryPrefix(\n    url: string,\n    opts: ADBOpts,\n  ): Promise<ResourceEntry | null> {\n    const { rule, prefix, fuzzyCanonUrl /*, fuzzyPrefix*/ } =\n      fuzzyMatcher.getRuleFor(url);\n\n    if (fuzzyCanonUrl !== url) {\n      const result = await this.lookupUrl(fuzzyCanonUrl, 0, opts);\n      if (result) {\n        return result;\n      }\n\n      //const results = await this.db.getAll(\"resources\", this.getLookupRange(fuzzyPrefix, \"prefix\"));\n      //return fuzzyMatcher.fuzzyCompareUrls(url, results, rule);\n    }\n\n    // only do fuzzy prefix match for custom rules that have a query\n    if (\n      !rule &&\n      prefix === url &&\n      prefix === fuzzyCanonUrl &&\n      !url.endsWith(\"?\")\n    ) {\n      return null;\n    }\n\n    //todo: explore optimizing with incremental loading?\n    const results = await this.db!.getAll(\n      \"resources\",\n      this.getLookupRange(prefix, \"prefix\"),\n      MAX_FUZZY_MATCH,\n    );\n\n    return fuzzyMatcher.fuzzyCompareUrls(url, results, rule) as ResourceEntry;\n  }\n\n  resJson(res: ResourceEntry): ResAPIResponse {\n    const date = new Date(res.ts).toISOString();\n    return {\n      url: res.url,\n      date: date,\n      ts: getTS(date),\n      mime: res.mime || \"\",\n      status: res.status || 0,\n    };\n  }\n\n  async resourcesByPage(pageId: string) {\n    return this.db!.getAllFromIndex(\"resources\", \"pageId\", pageId);\n  }\n\n  async *resourcesByPages2(pageIds: string[]) {\n    pageIds.sort();\n\n    yield* this.matchAny(\"resources\", \"pageId\", pageIds);\n  }\n\n  async *resourcesByPages(pageIds: string[]) {\n    const tx = this.db!.transaction(\"resources\", \"readonly\");\n\n    for await (const cursor of tx.store.iterate()) {\n      if (pageIds.includes(cursor.value.pageId!)) {\n        yield cursor.value;\n      }\n    }\n  }\n\n  async *matchAny<S extends keyof ADBType>(\n    storeName: S,\n    indexName: ADBType[S] extends { indexes: {} }\n      ? keyof ADBType[S][\"indexes\"] | null\n      : null,\n    sortedKeys: string[],\n    subKey?: number,\n    openBound = false,\n  ) {\n    const tx = this.db!.transaction(storeName, \"readonly\");\n\n    const range = IDBKeyRange.lowerBound(sortedKeys[0], openBound);\n\n    let cursor = indexName\n      ? await tx.store.index(indexName).openCursor(range)\n      : await tx.store.openCursor(range);\n\n    let i = 0;\n\n    while (cursor && i < sortedKeys.length) {\n      let currKey, matchKey, matches;\n\n      if (subKey !== undefined) {\n        currKey = (cursor.key as string[])[subKey]!;\n        matchKey = sortedKeys[i]![subKey]!;\n        matches = currKey.startsWith(matchKey);\n      } else {\n        currKey = cursor.key;\n        matchKey = sortedKeys[i]!;\n        matches = currKey === matchKey;\n      }\n\n      if (!matches && currKey > matchKey) {\n        ++i;\n        continue;\n      }\n\n      if (matches) {\n        yield cursor.value;\n        cursor = await cursor.continue();\n      } else {\n        // TODO @emma-sg figure this out later\n        // @ts-expect-error\n        cursor = await cursor.continue(sortedKeys[i]);\n      }\n    }\n  }\n\n  async resourcesByUrlAndMime(\n    url: string,\n    mimes: string,\n    count = 1000,\n    prefix = true,\n    fromUrl = \"\",\n    fromTs = \"\",\n  ): Promise<ResAPIResponse[]> {\n    // if doing local mime filtering, need to remove count\n    const queryCount = mimes ? 0 : count;\n\n    const fullResults = await this.db!.getAll(\n      \"resources\",\n      this.getLookupRange(url, prefix ? \"prefix\" : \"exact\", fromUrl, fromTs),\n      queryCount,\n    );\n\n    const mimesArray = mimes.split(\",\");\n    const results: ResAPIResponse[] = [];\n\n    for (const res of fullResults) {\n      for (const mime of mimesArray) {\n        if (!mime || res.mime?.startsWith(mime)) {\n          results.push(this.resJson(res));\n          if (results.length === count) {\n            return results;\n          }\n          break;\n        }\n      }\n    }\n\n    return results;\n  }\n\n  async resourcesByMime(\n    mimesStr: string,\n    count = 100,\n    fromMime = \"\",\n    fromUrl = \"\",\n    fromStatus = 0,\n  ): Promise<ResAPIResponse[]> {\n    const mimes = mimesStr.split(\",\");\n    const results: ResAPIResponse[] = [];\n\n    mimes.sort();\n\n    const startKey: [string, number, string][] = [];\n\n    if (fromMime) {\n      startKey.push([fromMime, fromStatus, fromUrl]);\n    }\n\n    for (const mime of mimes) {\n      if (!fromMime || !mime || mime > fromMime) {\n        startKey.push([mime, 0, \"\"]);\n      }\n    }\n\n    for await (const result of this.matchAny(\n      \"resources\",\n      \"mimeStatusUrl\",\n      startKey as unknown as string[],\n      0,\n      true,\n    )) {\n      results.push(this.resJson(result));\n\n      if (results.length === count) {\n        break;\n      }\n    }\n\n    return results;\n    /*\n    let i = 0;\n    let cursor = await this.db.transaction(\"resources\").store.index(\"mimeStatusUrl\").openCursor();\n\n    while (cursor && i < startKey.length) {\n      const mime = cursor.key[0];\n\n      const matches = mime.startsWith(startKey[i][0]);\n\n      if (!matches && mime > startKey[i][0]) {\n        ++i;\n        continue;\n      }\n\n      if (matches) {\n        results.push(this.resJson(cursor.value));\n        cursor = await cursor.continue();\n      } else {\n        cursor = await cursor.continue(startKey[i]);\n      }\n    }\n*/\n  }\n\n  async deletePage(\n    id: string,\n  ): Promise<{ pageSize: number; dedupSize: number }> {\n    const tx = this.db!.transaction(\"pages\", \"readwrite\");\n    const page = await tx.store.get(id);\n    await tx.store.delete(id);\n\n    const size = await this.deletePageResources(id);\n    return { pageSize: page?.size || 0, dedupSize: size };\n  }\n\n  async deletePageResources(pageId: string): Promise<number> {\n    const digestSet: Record<string, number> = {};\n\n    const tx = this.db!.transaction(\"resources\", \"readwrite\");\n\n    let cursor = await tx.store.index(\"pageId\").openCursor(pageId);\n\n    let size = 0;\n\n    while (cursor) {\n      const digest = cursor.value.digest;\n      if (digest) {\n        digestSet[digest] = (digestSet[digest] || 0) + 1;\n      } else if (cursor.value.payload) {\n        size += cursor.value.payload.length;\n      }\n\n      void tx.store.delete(cursor.primaryKey);\n\n      cursor = await cursor.continue();\n    }\n\n    await tx.done;\n\n    // delete payloads\n    const tx2 = this.db!.transaction([\"payload\", \"digestRef\"], \"readwrite\");\n    const digestRefStore = tx2.objectStore(\"digestRef\");\n\n    for (const digest of Object.keys(digestSet)) {\n      const ref = await digestRefStore.get(digest);\n\n      if (ref) {\n        ref.count! -= digestSet[digest]!;\n      }\n\n      if (ref && ref.count! >= 1) {\n        void digestRefStore.put(ref);\n      } else {\n        size += ref ? ref.size : 0;\n        void digestRefStore.delete(digest);\n        void tx2.objectStore(\"payload\").delete(digest);\n      }\n    }\n\n    await tx2.done;\n    return size;\n  }\n\n  prefixUpperBound(url: string) {\n    return (\n      url.slice(0, -1) + String.fromCharCode(url.charCodeAt(url.length - 1) + 1)\n    );\n  }\n\n  getLookupRange(\n    url: string,\n    type: string,\n    fromUrl?: string,\n    fromTs?: string,\n  ): IDBKeyRange {\n    let lower;\n    let upper;\n\n    switch (type) {\n      case \"prefix\":\n        lower = [url];\n        upper = [this.prefixUpperBound(url)];\n        break;\n\n      case \"host\": {\n        const origin = new URL(url).origin;\n        lower = [origin + \"/\"];\n        upper = [origin + \"0\"];\n        break;\n      }\n\n      case \"exact\":\n      default:\n        lower = [url];\n        //upper = [url + \"!\"];\n        upper = [url, Number.MAX_SAFE_INTEGER];\n    }\n\n    let exclusive;\n\n    if (fromUrl) {\n      lower = [fromUrl, fromTs || \"\"];\n      exclusive = true;\n    } else {\n      exclusive = false;\n    }\n\n    return IDBKeyRange.bound(lower, upper, exclusive, true);\n  }\n}\n\n// ===========================================================================\nclass RepeatTracker {\n  repeats: Record<string, Record<string, number>> = {};\n\n  getSkipCount(event: FetchEvent, url: string, method: string) {\n    if (method !== \"POST\" && !url.endsWith(\".m3u8\")) {\n      return 0;\n    }\n\n    if (event.replacesClientId) {\n      delete this.repeats[event.replacesClientId];\n    }\n\n    const id = event.resultingClientId || event.clientId;\n    if (!id) {\n      return 0;\n    }\n\n    if (this.repeats[id] === undefined) {\n      this.repeats[id] = {};\n    }\n\n    if (this.repeats[id][url] === undefined) {\n      this.repeats[id][url] = 0;\n    } else {\n      this.repeats[id][url]++;\n    }\n\n    return this.repeats[id][url];\n  }\n}\n"]}