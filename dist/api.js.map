{"version":3,"file":"api.js","sourceRoot":"","sources":["../src/api.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AACnC,OAAO,EAAE,WAAW,EAAE,MAAM,SAAS,CAAC;AAEtC,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAM7C,8EAA8E;AAC9E,MAAM,SAAS;IACb,MAAM,GAAyC,EAAE,CAAC;IAElD,YAAY,KAAgD;QAC1D,KAAK,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YAClD,IAAI,KAAK,EAAE,MAAM,CAAC;YAElB,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;gBAC3B,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjB,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;YAC7B,CAAC;iBAAM,CAAC;gBACN,KAAK,GAAG,KAAK,CAAC;gBACd,MAAM,GAAG,KAAK,CAAC;YACjB,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAChD,qEAAqE;YACrE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9C,CAAC;IACH,CAAC;IAED,KAAK,CAAC,GAAW,EAAE,MAAM,GAAG,KAAK;QAC/B,KAAK,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;YACtE,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAChC,MAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAE1B,gLAAgL;YAChL,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjC,IAAI,GAAG,EAAE,CAAC;gBACR,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;gBACrB,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,eAAe,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACxE,OAAO,GAAG,CAAC;YACb,CAAC;QACH,CAAC;QAED,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;IAC1B,CAAC;CACF;AAED,8EAA8E;AAC9E,MAAM,GAAG;IACP,MAAM,CAAY;IAClB,WAAW,CAAgB;IAE3B,YAAY,WAA0B;QACpC,IAAI,CAAC,MAAM,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEzC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAED,IAAI,MAAM;QACR,OAAO;YACL,KAAK,EAAE,YAAY;YACnB,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,cAAc;YACpB,MAAM,EAAE,aAAa;YACrB,UAAU,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC;YAChC,UAAU,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;YACjC,UAAU,EAAE,CAAC,oBAAoB,EAAE,MAAM,CAAC;YAC1C,cAAc,EAAE,CAAC,kBAAkB,EAAE,MAAM,CAAC;YAC5C,OAAO,EAAE,uBAAuB;YAChC,KAAK,EAAE,eAAe;YACtB,SAAS,EAAE,mBAAmB;YAC9B,UAAU,EAAE,CAAC,oBAAoB,EAAE,QAAQ,CAAC;SAC7C,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,GAAW,EAAE,OAAgB,EAAE,KAAiB;QAChE,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QACtD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QAC9D,IAAI,QAAQ,YAAY,QAAQ,EAAE,CAAC;YACjC,OAAO,QAAQ,CAAC;QAClB,CAAC;QACD,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAC1C,SAAS;QACT,iEAAiE;QACjE,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC7C,CAAC;IAED,SAAS;IACT,6DAA6D;IAC7D,KAAK,CAAC,SAAS,CAAC,OAAgB,EAAE,MAAkB,EAAE,KAAiB;QACrE,8HAA8H;QAC9H,QAAQ,MAAM,CAAC,MAAM,EAAE,CAAC;YACtB,KAAK,OAAO;gBACV,8HAA8H;gBAC9H,SAAS;gBACT,iEAAiE;gBACjE,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEzD,KAAK,YAAY,CAAC,CAAC,CAAC;gBAClB,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;gBACzC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAC7C,WAAW,CAAC,QAAQ,IAAI,EAAE;gBAC1B,SAAS;gBACT,iEAAiE;gBACjE,WAAW,CAAC,WAAW,IAAI,EAAE,CAC9B,CAAC;gBACF,SAAS;gBACT,+DAA+D;gBAC/D,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC;YAC3B,CAAC;YAED,KAAK,MAAM,CAAC,CAAC,CAAC;gBACZ,0HAA0H;gBAC1H,SAAS;gBACT,iEAAiE;gBACjE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAI,CAAC,IAAI,EAAE,CAAC;oBACV,OAAO,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;gBAC3C,CAAC;gBACD,MAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;gBAE/B,8HAA8H;gBAC9H,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;oBACrC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;wBAClB,IAAI,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;wBAC5C,IAAI,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;wBACrD,IAAI,CAAC,YAAY,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;wBAC/D,IAAI,IAAI,CAAC,KAAK,YAAY,SAAS,EAAE,CAAC;4BACpC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;wBAClD,CAAC;oBACH,CAAC;yBAAM,CAAC;wBACN,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;wBAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;wBAChB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;oBACzB,CAAC;oBAED,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;gBACjD,CAAC;qBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;oBACzB,IAAI,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;oBACvD,IAAI,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBACrD,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;oBAClB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;gBACpB,CAAC;gBAED,kIAAkI;gBAClI,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBAClC,kIAAkI;oBAClI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBAChD,CAAC;gBAED,SAAS;gBACT,+DAA+D;gBAC/D,OAAO,IAAI,CAAC;YACd,CAAC;YAED,KAAK,YAAY,CAAC,CAAC,CAAC;gBAClB,8HAA8H;gBAC9H,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC;gBAE3D,0HAA0H;gBAC1H,SAAS;gBACT,iEAAiE;gBACjE,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC,EAAE,CAAC;oBACtE,OAAO,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;gBAC3C,CAAC;gBACD,OAAO,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;YAC9B,CAAC;YAED,KAAK,YAAY,CAAC,CAAC,CAAC;gBAClB,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;gBACzC,OAAO;oBACL,OAAO,EAAE,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU;oBACxC,0HAA0H;oBAC1H,SAAS;oBACT,iEAAiE;oBACjE,MAAM,CAAC,IAAI;oBACX,SAAS;oBACT,iEAAiE;oBACjE,WAAW,CAAC,OAAO,CACpB;iBACF,CAAC;YACJ,CAAC;YAED,KAAK,gBAAgB,CAAC,CAAC,CAAC;gBACtB,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;gBACzC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,cAAc;gBACpD,0HAA0H;gBAC1H,SAAS;gBACT,iEAAiE;gBACjE,MAAM,CAAC,IAAI;gBACX,SAAS;gBACT,iEAAiE;gBACjE,WAAW,CACZ,CAAC;gBACF,OAAO,EAAE,QAAQ,EAAE,CAAC;YACtB,CAAC;YAED,KAAK,MAAM,CAAC,CAAC,CAAC;gBACZ,0HAA0H;gBAC1H,SAAS;gBACT,iEAAiE;gBACjE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAI,CAAC,IAAI,EAAE,CAAC;oBACV,OAAO,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;gBAC3C,CAAC;gBACD,8HAA8H;gBAC9H,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrC,8HAA8H;gBAC9H,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;gBACxD,8HAA8H;gBAC9H,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACvC,8HAA8H;gBAC9H,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC;gBAEnD,8HAA8H;gBAC9H,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBAC7C,8HAA8H;gBAC9H,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAC3C,8HAA8H;gBAC9H,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC/C,8HAA8H;gBAC9H,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;gBAEhE,SAAS;gBACT,uEAAuE;gBACvE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;oBAChC,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;gBACtB,CAAC;gBAED,IAAI,IAAI,CAAC;gBAET,IAAI,GAAG,EAAE,CAAC;oBACR,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,qBAAqB;oBAC3C,SAAS;oBACT,iEAAiE;oBACjE,GAAG;oBACH,SAAS;oBACT,iEAAiE;oBACjE,IAAI,EACJ,KAAK,EACL,MAAM;oBACN,SAAS;oBACT,iEAAiE;oBACjE,OAAO;oBACP,SAAS;oBACT,iEAAiE;oBACjE,MAAM,CACP,CAAC;gBACJ,CAAC;qBAAM,CAAC;oBACN,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,eAAe;oBACrC,SAAS;oBACT,iEAAiE;oBACjE,IAAI,EACJ,KAAK;oBACL,SAAS;oBACT,iEAAiE;oBACjE,QAAQ;oBACR,SAAS;oBACT,iEAAiE;oBACjE,OAAO,EACP,UAAU,CACX,CAAC;gBACJ,CAAC;gBAED,SAAS;gBACT,uEAAuE;gBACvE,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;gBAElB,OAAO,EAAE,IAAI,EAAE,CAAC;YAClB,CAAC;YAED,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACd,0HAA0H;gBAC1H,SAAS;gBACT,iEAAiE;gBACjE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAI,CAAC,IAAI,EAAE,CAAC;oBACV,OAAO,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;gBAC3C,CAAC;gBACD,8HAA8H;gBAC9H,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrC,SAAS;gBACT,iEAAiE;gBACjE,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;gBAE5D,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC;YACpC,CAAC;YAED,KAAK,OAAO,CAAC,CAAC,CAAC;gBACb,0HAA0H;gBAC1H,SAAS;gBACT,iEAAiE;gBACjE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAI,CAAC,IAAI,EAAE,CAAC;oBACV,OAAO,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;gBAC3C,CAAC;gBACD,IAAI,KAAK,GAAG,SAAS,CAAC;gBACtB,IAAI,IAAI,CAAC,KAAK,YAAY,SAAS,EAAE,CAAC;oBACpC,8HAA8H;oBAC9H,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAC3C,8HAA8H;oBAC9H,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;oBACpD,8HAA8H;oBAC9H,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;oBAC7D,IAAI,MAAM,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC;wBACvB,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU;wBAClD,iEAAiE;wBACjE,MAAM,EACN,IAAI,EACJ,QAAQ,CACT,CAAC;wBACF,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;oBAC1B,CAAC;yBAAM,CAAC;wBACN,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;oBAChC,CAAC;gBACH,CAAC;gBACD,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;gBAC7C,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;YAC1B,CAAC;YAED,KAAK,WAAW,CAAC,CAAC,CAAC;gBACjB,0HAA0H;gBAC1H,SAAS;gBACT,iEAAiE;gBACjE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAI,CAAC,IAAI,EAAE,CAAC;oBACV,OAAO,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;gBAC3C,CAAC;gBACD,SAAS;gBACT,8DAA8D;gBAC9D,IAAK,IAAI,CAAC,KAAa,CAAC,YAAY,EAAE,CAAC;oBACrC,SAAS;oBACT,mGAAmG;oBACnG,OAAO,MAAO,IAAI,CAAC,KAAa,CAAC,YAAY,EAAE,CAAC;gBAClD,CAAC;qBAAM,CAAC;oBACN,OAAO,EAAE,CAAC;gBACZ,CAAC;YACH,CAAC;YAED,KAAK,SAAS,CAAC,CAAC,CAAC;gBACf,0HAA0H;gBAC1H,SAAS;gBACT,iEAAiE;gBACjE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAI,CAAC,IAAI,EAAE,CAAC;oBACV,OAAO,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;gBAC3C,CAAC;gBACD,0HAA0H;gBAC1H,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;oBACnB,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;gBACzB,CAAC;gBACD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,CACjD,cAAc,EACd,WAAW,EACX,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CACtC,CAAC;gBACF,OAAO,EAAE,OAAO,EAAE,CAAC;YACrB,CAAC;YAED,KAAK,YAAY,CAAC,CAAC,CAAC;gBAClB,0HAA0H;gBAC1H,SAAS;gBACT,iEAAiE;gBACjE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAI,CAAC,IAAI,EAAE,CAAC;oBACV,OAAO,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;gBAC3C,CAAC;gBACD,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU;gBACzD,0HAA0H;gBAC1H,SAAS;gBACT,iEAAiE;gBACjE,MAAM,CAAC,IAAI,CACZ,CAAC;gBAEF,0HAA0H;gBAC1H,SAAS;gBACT,0GAA0G;gBAC1G,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;gBAE9D,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;YACjC,CAAC;YAED;gBACE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;QAClC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,MAAsB;QAClC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAClD,SAAS;QACT,8DAA8D;QAC9D,MAAM,WAAW,GAAU,EAAE,CAAC;QAE9B,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACxB,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,aAAa,EAAE,CAAC;gBACxD,OAAO;YACT,CAAC;YAED,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC;gBAC5C,OAAO;YACT,CAAC;YAED,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;IAChC,CAAC;IAED,YAAY,CAAC,QAAkB,EAAE,MAAM,GAAG,GAAG;QAC3C,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC5C,MAAM;YACN,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;SAChD,CAAC,CAAC;IACL,CAAC;CACF;AAED,OAAO,EAAE,GAAG,EAAE,CAAC","sourcesContent":["import { Path } from \"path-parser\";\nimport { getCollData } from \"./utils\";\nimport { type SWCollections } from \"./swmain\";\nimport { MultiWACZ } from \"./wacz/multiwacz\";\n\n// [TODO]\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype RouteMatch = Record<string, any>;\n\n// ===========================================================================\nclass APIRouter {\n  routes: Record<string, Record<string, Path>> = {};\n\n  constructor(paths: Record<string, string | [string, string]>) {\n    for (const [name, value] of Object.entries(paths)) {\n      let route, method;\n\n      if (value instanceof Array) {\n        route = value[0];\n        method = value[1] || \"GET\";\n      } else {\n        route = value;\n        method = \"GET\";\n      }\n\n      this.routes[method] = this.routes[method] || {};\n      // @ts-expect-error [TODO] - TS2532 - Object is possibly 'undefined'.\n      this.routes[method][name] = new Path(route);\n    }\n  }\n\n  match(url: string, method = \"GET\"): RouteMatch | { _route: null } {\n    for (const [name, route] of Object.entries(this.routes[method] || [])) {\n      const parts = url.split(\"?\", 2);\n      const matchUrl = parts[0];\n\n      // @ts-expect-error [TODO] - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'. Type 'undefined' is not assignable to type 'string'\n      const res = route.test(matchUrl);\n      if (res) {\n        res[\"_route\"] = name;\n        res[\"_query\"] = new URLSearchParams(parts.length === 2 ? parts[1] : \"\");\n        return res;\n      }\n    }\n\n    return { _route: null };\n  }\n}\n\n// ===========================================================================\nclass API {\n  router: APIRouter;\n  collections: SWCollections;\n\n  constructor(collections: SWCollections) {\n    this.router = new APIRouter(this.routes);\n\n    this.collections = collections;\n  }\n\n  get routes(): Record<string, string | [string, string]> {\n    return {\n      index: \"coll-index\",\n      coll: \"c/:coll\",\n      urls: \"c/:coll/urls\",\n      urlsTs: \"c/:coll/ts/\",\n      createColl: [\"c/create\", \"POST\"],\n      deleteColl: [\"c/:coll\", \"DELETE\"],\n      updateAuth: [\"c/:coll/updateAuth\", \"POST\"],\n      updateMetadata: [\"c/:coll/metadata\", \"POST\"],\n      curated: \"c/:coll/curated/:list\",\n      pages: \"c/:coll/pages\",\n      textIndex: \"c/:coll/textIndex\",\n      deletePage: [\"c/:coll/page/:page\", \"DELETE\"],\n    };\n  }\n\n  async apiResponse(url: string, request: Request, event: FetchEvent) {\n    const params = this.router.match(url, request.method);\n    const response = await this.handleApi(request, params, event);\n    if (response instanceof Response) {\n      return response;\n    }\n    const status = response.error ? 404 : 200;\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    return this.makeResponse(response, status);\n  }\n\n  // [TODO]\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async handleApi(request: Request, params: RouteMatch, event: FetchEvent) {\n    // @ts-expect-error [TODO] - TS4111 - Property '_route' comes from an index signature, so it must be accessed with ['_route'].\n    switch (params._route) {\n      case \"index\":\n        // @ts-expect-error [TODO] - TS4111 - Property '_query' comes from an index signature, so it must be accessed with ['_query'].\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return await this.listAll(params._query.get(\"filter\"));\n\n      case \"createColl\": {\n        const requestJSON = await request.json();\n        const coll = await this.collections.initNewColl(\n          requestJSON.metadata || {},\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          requestJSON.extraConfig || {},\n        );\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return getCollData(coll);\n      }\n\n      case \"coll\": {\n        // @ts-expect-error [TODO] - TS4111 - Property 'coll' comes from an index signature, so it must be accessed with ['coll'].\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const coll = await this.collections.getColl(params.coll);\n        if (!coll) {\n          return { error: \"collection_not_found\" };\n        }\n        const data = getCollData(coll);\n\n        // @ts-expect-error [TODO] - TS4111 - Property '_query' comes from an index signature, so it must be accessed with ['_query'].\n        if (params._query.get(\"all\") === \"1\") {\n          if (coll.store.db) {\n            data.pages = await coll.store.getAllPages();\n            data.lists = await coll.store.db.getAll(\"pageLists\");\n            data.curatedPages = await coll.store.db.getAll(\"curatedPages\");\n            if (coll.store instanceof MultiWACZ) {\n              data.canQueryPages = !!coll.store.pagesQueryUrl;\n            }\n          } else {\n            data.pages = [];\n            data.lists = [];\n            data.curatedPages = [];\n          }\n\n          data.verify = await coll.store.getVerifyInfo();\n        } else if (coll.store.db) {\n          data.numLists = await coll.store.db.count(\"pageLists\");\n          data.numPages = await coll.store.db.count(\"pages\");\n        } else {\n          data.numLists = 0;\n          data.numPages = 0;\n        }\n\n        // @ts-expect-error [TODO] - TS4111 - Property 'metadata' comes from an index signature, so it must be accessed with ['metadata'].\n        if (coll.config.metadata.ipfsPins) {\n          // @ts-expect-error [TODO] - TS4111 - Property 'metadata' comes from an index signature, so it must be accessed with ['metadata'].\n          data.ipfsPins = coll.config.metadata.ipfsPins;\n        }\n\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return data;\n      }\n\n      case \"deleteColl\": {\n        // @ts-expect-error [TODO] - TS4111 - Property '_query' comes from an index signature, so it must be accessed with ['_query'].\n        const keepFileHandle = params._query.get(\"reload\") === \"1\";\n\n        // @ts-expect-error [TODO] - TS4111 - Property 'coll' comes from an index signature, so it must be accessed with ['coll'].\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!(await this.collections.deleteColl(params.coll, keepFileHandle))) {\n          return { error: \"collection_not_found\" };\n        }\n        return await this.listAll();\n      }\n\n      case \"updateAuth\": {\n        const requestJSON = await request.json();\n        return {\n          success: await this.collections.updateAuth(\n            // @ts-expect-error [TODO] - TS4111 - Property 'coll' comes from an index signature, so it must be accessed with ['coll'].\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            params.coll,\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            requestJSON.headers,\n          ),\n        };\n      }\n\n      case \"updateMetadata\": {\n        const requestJSON = await request.json();\n        const metadata = await this.collections.updateMetadata(\n          // @ts-expect-error [TODO] - TS4111 - Property 'coll' comes from an index signature, so it must be accessed with ['coll'].\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          params.coll,\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          requestJSON,\n        );\n        return { metadata };\n      }\n\n      case \"urls\": {\n        // @ts-expect-error [TODO] - TS4111 - Property 'coll' comes from an index signature, so it must be accessed with ['coll'].\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const coll = await this.collections.getColl(params.coll);\n        if (!coll) {\n          return { error: \"collection_not_found\" };\n        }\n        // @ts-expect-error [TODO] - TS4111 - Property '_query' comes from an index signature, so it must be accessed with ['_query'].\n        const url = params._query.get(\"url\");\n        // @ts-expect-error [TODO] - TS4111 - Property '_query' comes from an index signature, so it must be accessed with ['_query'].\n        const count = Number(params._query.get(\"count\") || 100);\n        // @ts-expect-error [TODO] - TS4111 - Property '_query' comes from an index signature, so it must be accessed with ['_query'].\n        const mime = params._query.get(\"mime\");\n        // @ts-expect-error [TODO] - TS4111 - Property '_query' comes from an index signature, so it must be accessed with ['_query'].\n        const prefix = params._query.get(\"prefix\") === \"1\";\n\n        // @ts-expect-error [TODO] - TS4111 - Property '_query' comes from an index signature, so it must be accessed with ['_query'].\n        const fromUrl = params._query.get(\"fromUrl\");\n        // @ts-expect-error [TODO] - TS4111 - Property '_query' comes from an index signature, so it must be accessed with ['_query'].\n        const fromTs = params._query.get(\"fromTs\");\n        // @ts-expect-error [TODO] - TS4111 - Property '_query' comes from an index signature, so it must be accessed with ['_query'].\n        const fromMime = params._query.get(\"fromMime\");\n        // @ts-expect-error [TODO] - TS4111 - Property '_query' comes from an index signature, so it must be accessed with ['_query'].\n        const fromStatus = Number(params._query.get(\"fromStatus\") || 0);\n\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (!coll.store.resourcesByMime) {\n          return { urls: [] };\n        }\n\n        let urls;\n\n        if (url) {\n          urls = await coll.store.resourcesByUrlAndMime(\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            url,\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            mime,\n            count,\n            prefix,\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            fromUrl,\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            fromTs,\n          );\n        } else {\n          urls = await coll.store.resourcesByMime(\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            mime,\n            count,\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            fromMime,\n            // [TODO]\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            fromUrl,\n            fromStatus,\n          );\n        }\n\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        urls = urls || [];\n\n        return { urls };\n      }\n\n      case \"urlsTs\": {\n        // @ts-expect-error [TODO] - TS4111 - Property 'coll' comes from an index signature, so it must be accessed with ['coll'].\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const coll = await this.collections.getColl(params.coll);\n        if (!coll) {\n          return { error: \"collection_not_found\" };\n        }\n        // @ts-expect-error [TODO] - TS4111 - Property '_query' comes from an index signature, so it must be accessed with ['_query'].\n        const url = params._query.get(\"url\");\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const timestamps = await coll.store.getTimestampsByURL(url);\n\n        return { timestamps: timestamps };\n      }\n\n      case \"pages\": {\n        // @ts-expect-error [TODO] - TS4111 - Property 'coll' comes from an index signature, so it must be accessed with ['coll'].\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const coll = await this.collections.getColl(params.coll);\n        if (!coll) {\n          return { error: \"collection_not_found\" };\n        }\n        let total = undefined;\n        if (coll.store instanceof MultiWACZ) {\n          // @ts-expect-error [TODO] - TS4111 - Property '_query' comes from an index signature, so it must be accessed with ['_query'].\n          const search = params._query.get(\"search\");\n          // @ts-expect-error [TODO] - TS4111 - Property '_query' comes from an index signature, so it must be accessed with ['_query'].\n          const page = Number(params._query.get(\"page\")) || 1;\n          // @ts-expect-error [TODO] - TS4111 - Property '_query' comes from an index signature, so it must be accessed with ['_query'].\n          const pageSize = Number(params._query.get(\"pageSize\")) || 25;\n          if (search || page > 1) {\n            const { pages, total } = await coll.store.queryPages(\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n              search,\n              page,\n              pageSize,\n            );\n            return { pages, total };\n          } else {\n            total = coll.store.totalPages;\n          }\n        }\n        const pages = await coll.store.getAllPages();\n        return { pages, total };\n      }\n\n      case \"textIndex\": {\n        // @ts-expect-error [TODO] - TS4111 - Property 'coll' comes from an index signature, so it must be accessed with ['coll'].\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const coll = await this.collections.getColl(params.coll);\n        if (!coll) {\n          return { error: \"collection_not_found\" };\n        }\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((coll.store as any).getTextIndex) {\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-return\n          return await (coll.store as any).getTextIndex();\n        } else {\n          return {};\n        }\n      }\n\n      case \"curated\": {\n        // @ts-expect-error [TODO] - TS4111 - Property 'coll' comes from an index signature, so it must be accessed with ['coll'].\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const coll = await this.collections.getColl(params.coll);\n        if (!coll) {\n          return { error: \"collection_not_found\" };\n        }\n        // @ts-expect-error [TODO] - TS4111 - Property 'list' comes from an index signature, so it must be accessed with ['list'].\n        const list = Number(params.list);\n        if (!coll.store.db) {\n          return { curated: [] };\n        }\n        const curated = await coll.store.db.getAllFromIndex(\n          \"curatedPages\",\n          \"listPages\",\n          IDBKeyRange.bound([list], [list + 1]),\n        );\n        return { curated };\n      }\n\n      case \"deletePage\": {\n        // @ts-expect-error [TODO] - TS4111 - Property 'coll' comes from an index signature, so it must be accessed with ['coll'].\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const coll = await this.collections.getColl(params.coll);\n        if (!coll) {\n          return { error: \"collection_not_found\" };\n        }\n        const { pageSize, dedupSize } = await coll.store.deletePage(\n          // @ts-expect-error [TODO] - TS4111 - Property 'page' comes from an index signature, so it must be accessed with ['page'].\n          // [TODO]\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          params.page,\n        );\n\n        // @ts-expect-error [TODO] - TS4111 - Property 'coll' comes from an index signature, so it must be accessed with ['coll'].\n        // [TODO]\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises, @typescript-eslint/no-unsafe-argument\n        this.collections.updateSize(params.coll, pageSize, dedupSize);\n\n        return { pageSize, dedupSize };\n      }\n\n      default:\n        return { error: \"not_found\" };\n    }\n  }\n\n  async listAll(filter?: string | null) {\n    const response = await this.collections.listAll();\n    // [TODO]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const collections: any[] = [];\n\n    response.forEach((coll) => {\n      if (coll.type === \"live\" || coll.type === \"remoteproxy\") {\n        return;\n      }\n\n      if (filter && !coll.type.startsWith(filter)) {\n        return;\n      }\n\n      collections.push(getCollData(coll));\n    });\n\n    return { colls: collections };\n  }\n\n  makeResponse(response: Response, status = 200) {\n    return new Response(JSON.stringify(response), {\n      status,\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n  }\n}\n\nexport { API };\n"]}